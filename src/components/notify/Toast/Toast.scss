@import "../../../styles/base";

/* ===================================================================
   TOAST
   =================================================================== */


.base {
    user-select: none;
    color: rgba(var(--color_contrast), 1);
    font-weight: var(--fontWeight_medium);
    padding: 10px 20px 9px;
    background-color: rgba(var(--color_info), 1);
    border-radius: var(--borderRadius_form);
    box-shadow: var(--boxShadow_regular);

    &.success {
        background-color: rgba(var(--color_success), 1);
        color: rgba(var(--color_statusText), 1);
    }

    &.error {
        background-color: rgba(var(--color_error), 1);
        color: rgba(var(--color_statusText), 1);
    }

    &.loading {
        .icon {
            @include m-iconColor(rgba(var(--color_base), 0.6));
        }
    }

    &.evadeButtons {
        transform: translateY(-50px);
    }
}

:global {
    .rc-notification {
        position: fixed;
        z-index: $zIndex--toast;
        width: 100%;
        top: 16px;
        left: 0;
        pointer-events: none;

        &-notice {
            width: 100%;
            text-align: center;
            margin-bottom: var(--spacing_regular);
        }

        &-notice-content {
            display: inline-block;
            margin: 0 var(--spacing_large);
        }

        @mixin fade-effect() {
            animation-duration: 0.2s;
            animation-fill-mode: both;
            animation-timing-function: cubic-bezier(0.325, 0.510, 0.050, 0.770);
        }

        .fade-enter {
            opacity: 0;
            transform: translateY(100%);
            @include fade-effect();
            animation-play-state: paused;
        }

        .fade-leave {
            @include fade-effect();
            animation-play-state: paused;
        }

        .fade-enter.fade-enter-active {
            :local {
                animation-name: NotificationFadeIn;
            }
            animation-play-state: running;
        }

        .fade-leave.fade-leave-active {
            :local {
                animation-name: NotificationFadeOut;
            }
            animation-play-state: running;
        }
    }

}

@keyframes NotificationFadeIn {
    0% {
        opacity: 0;
    }
    100% {
        transform: translateY(0);
        opacity: 1;
    }
}

@keyframes NotificationFadeOut {
    0% {
        opacity: 1;
    }
    100% {
        transform: translateY(-100%);
        opacity: 0;
    }
}
