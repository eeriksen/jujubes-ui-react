'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var React = require('react');
var reactRouterDom = require('react-router-dom');
var PropTypes = require('prop-types');
var classNames = require('classnames');
var ReactDOM = require('react-dom');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var React__default = /*#__PURE__*/_interopDefaultLegacy(React);
var PropTypes__default = /*#__PURE__*/_interopDefaultLegacy(PropTypes);
var classNames__default = /*#__PURE__*/_interopDefaultLegacy(classNames);
var ReactDOM__default = /*#__PURE__*/_interopDefaultLegacy(ReactDOM);

function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function _slicedToArray(arr, i) {
  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
}

function _toConsumableArray(arr) {
  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
}

function _arrayWithoutHoles(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray(arr);
}

function _arrayWithHoles(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArray(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _iterableToArrayLimit(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _unsupportedIterableToArray(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

  return arr2;
}

function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

var styles = undefined;

var styles$1 = undefined;

var iconList = ['align-center', 'align-left', 'align-right', 'arrow-down', 'arrow-left', 'arrow-right', 'arrow-up', 'backwards', 'bell', 'bold', 'calendar', 'caret-down', 'caret-up', 'check', 'chevron-left', 'chevron-right', 'clock', 'close', 'copy', 'desktop', 'devices', 'dot-matrix', 'edit', 'envelope', 'eye', 'facebook', 'feather', 'forwards', 'gear', 'image', 'info', 'italic', 'laptop', 'lightning', 'link', 'list', 'lock', 'lock-open', 'maximize', 'menu-dots', 'menu-squares', 'minimize', 'mobile', 'mute', 'nodes', 'ordered-list', 'palette', 'pause', 'play', 'plus', 'puzzle', 'quote', 'refresh', 'remove', 'repeat', 'rocket', 'search', 'star', 'strikethrough', 'structure', 'tag', 'tools', 'trash', 'twitter', 'underline', 'unmute', 'upload', 'user', 'user-add', 'users', 'warning'];
var Icon = function Icon(props) {
  var _classNames;

  var name = props.name,
      color = props.color,
      size = props.size,
      rotate = props.rotate,
      margin = props.margin,
      presentation = props.presentation,
      children = props.children,
      className = props.className;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      loaded = _useState2[0],
      setLoaded = _useState2[1];

  React.useEffect(function () {
    setLoaded(true);
  }, []); // Classes

  var classes = classNames__default['default'](styles$1.base, (_classNames = {}, _defineProperty(_classNames, styles$1.loaded, loaded), _defineProperty(_classNames, styles$1.presentation, presentation), _defineProperty(_classNames, styles$1.colorInfo, color === "info"), _defineProperty(_classNames, styles$1.colorPrimary, color === "primary"), _defineProperty(_classNames, styles$1.colorContrast, color === "contrast"), _defineProperty(_classNames, styles$1.colorSuccess, color === "success"), _defineProperty(_classNames, styles$1.colorWarning, color === "warning"), _defineProperty(_classNames, styles$1.colorError, color === "error"), _defineProperty(_classNames, styles$1.sizeSmall, size === "small"), _defineProperty(_classNames, styles$1.sizeMedium, size === "medium"), _defineProperty(_classNames, styles$1.sizeLarge, size === "large"), _defineProperty(_classNames, styles$1.sizeXLarge, size === "xLarge"), _defineProperty(_classNames, styles$1.sizeXXLarge, size === "xxLarge"), _defineProperty(_classNames, styles$1.marginRight, margin && margin.indexOf("right") >= 0), _defineProperty(_classNames, styles$1.marginLeft, margin && margin.indexOf("left") >= 0), _defineProperty(_classNames, styles$1.rotate, rotate), _classNames), className);
  return /*#__PURE__*/React__default['default'].createElement("span", {
    className: classes
  }, children ? children : renderIcon(name), presentation ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$1.label
  }, name) : null);
};
Icon.propTypes = {
  /**
   * Icon name
   */
  name: PropTypes__default['default'].oneOf(iconList),

  /**
   * Color of icon
   */
  color: PropTypes__default['default'].oneOf(["contrast", "info", "primary", "success", "warning", "error"]),

  /**
   * Size of icon
   */
  size: PropTypes__default['default'].oneOf(["small", "medium", "large", "xLarge", "xxLarge"]),

  /**
   * Rotate icon
   */
  rotate: PropTypes__default['default'].bool,

  /**
   * Margin to the left or right of icon
   */
  margin: PropTypes__default['default'].oneOf(["left", "right"]),

  /**
   * Insert a custom SVG
   */
  children: PropTypes__default['default'].any,

  /**
   * Custom class name
   */
  className: PropTypes__default['default'].string
};
/**
 * Render icon
 * @param name
 * @returns {*}
 */

var renderIcon = function renderIcon(name) {
  switch (name) {
    default:
      return null;

    case 'align-center':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "511.63",
        height: "511.631",
        viewBox: "0 0 511.63 511.631"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M511.63 401.994v36.546c0 4.948-1.811 9.232-5.425 12.854-3.617 3.61-7.905 5.421-12.85 5.421H18.274c-4.947 0-9.23-1.811-12.851-5.421C1.809 447.772 0 443.488 0 438.54v-36.546c0-4.948 1.809-9.232 5.424-12.847 3.618-3.617 7.898-5.427 12.851-5.427h475.082c4.944 0 9.232 1.81 12.85 5.427 3.613 3.615 5.423 7.899 5.423 12.847zM127.91 274.088c-4.952 0-9.233 1.811-12.85 5.428-3.618 3.613-5.424 7.901-5.424 12.847v36.545c0 4.948 1.807 9.236 5.424 12.847 3.62 3.617 7.901 5.432 12.85 5.432h255.813c4.948 0 9.233-1.814 12.847-5.432 3.617-3.61 5.428-7.898 5.428-12.847v-36.545c0-4.945-1.811-9.233-5.428-12.847-3.613-3.617-7.898-5.428-12.847-5.428H127.91zm-73.089-36.54H456.81c4.949 0 9.233-1.812 12.848-5.429 3.613-3.612 5.42-7.898 5.42-12.845v-36.547c0-4.952-1.807-9.231-5.42-12.847-3.614-3.617-7.898-5.424-12.848-5.424H54.821c-4.952 0-9.235 1.807-12.85 5.424-3.617 3.615-5.424 7.898-5.424 12.847v36.547c0 4.947 1.807 9.233 5.424 12.845 3.619 3.617 7.898 5.429 12.85 5.429zm109.636-109.639h182.714c4.948 0 9.236-1.809 12.854-5.424 3.613-3.617 5.424-7.898 5.424-12.847V73.091c0-4.948-1.811-9.229-5.417-12.85-3.62-3.612-7.905-5.424-12.854-5.424H164.457c-4.952 0-9.235 1.812-12.85 5.424-3.617 3.617-5.426 7.902-5.426 12.85v36.547c0 4.948 1.809 9.229 5.426 12.847 3.619 3.615 7.901 5.424 12.85 5.424z"
      }));

    case 'align-left':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "511.63",
        height: "511.631",
        viewBox: "0 0 511.63 511.631"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M18.274 237.548h438.542c4.949 0 9.229-1.812 12.847-5.429 3.614-3.612 5.421-7.898 5.421-12.845v-36.547c0-4.952-1.807-9.231-5.421-12.847-3.617-3.617-7.897-5.424-12.847-5.424H18.274c-4.952 0-9.233 1.807-12.851 5.424C1.809 173.495 0 177.778 0 182.727v36.547c0 4.947 1.809 9.233 5.424 12.845 3.62 3.617 7.902 5.429 12.85 5.429zM18.274 127.909h328.897c4.948 0 9.236-1.809 12.854-5.424 3.613-3.617 5.424-7.898 5.424-12.847V73.091c0-4.948-1.811-9.229-5.424-12.85-3.617-3.612-7.905-5.424-12.854-5.424H18.274c-4.952 0-9.233 1.812-12.851 5.424C1.809 63.858 0 68.143 0 73.091v36.547c0 4.948 1.809 9.229 5.424 12.847 3.62 3.615 7.902 5.424 12.85 5.424zM506.206 389.147c-3.617-3.617-7.905-5.427-12.85-5.427H18.274c-4.952 0-9.233 1.81-12.851 5.427C1.809 392.762 0 397.046 0 401.994v36.546c0 4.948 1.809 9.232 5.424 12.854 3.621 3.61 7.904 5.421 12.851 5.421h475.082c4.944 0 9.232-1.811 12.85-5.421 3.614-3.621 5.425-7.905 5.425-12.854v-36.546c-.002-4.948-1.812-9.232-5.426-12.847zM18.274 347.179h365.449c4.948 0 9.233-1.811 12.847-5.428 3.617-3.614 5.428-7.898 5.428-12.847v-36.542c0-4.945-1.811-9.233-5.428-12.847-3.613-3.617-7.898-5.428-12.847-5.428H18.274c-4.952 0-9.233 1.811-12.851 5.428C1.809 283.129 0 287.417 0 292.362v36.545c0 4.948 1.809 9.236 5.424 12.847 3.62 3.617 7.902 5.425 12.85 5.425z"
      }));

    case 'align-right':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "511.63",
        height: "511.631",
        viewBox: "0 0 511.63 511.631"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M493.356 383.721H18.274c-4.952 0-9.233 1.81-12.851 5.427C1.809 392.762 0 397.046 0 401.994v36.546c0 4.948 1.809 9.232 5.424 12.854 3.621 3.61 7.904 5.421 12.851 5.421h475.082c4.944 0 9.232-1.811 12.85-5.421 3.614-3.621 5.425-7.905 5.425-12.854v-36.546c0-4.948-1.811-9.232-5.425-12.847-3.619-3.617-7.907-5.426-12.851-5.426zM493.356 274.088H127.91c-4.952 0-9.233 1.811-12.85 5.428-3.618 3.613-5.424 7.901-5.424 12.847v36.545c0 4.948 1.807 9.236 5.424 12.847 3.62 3.617 7.901 5.432 12.85 5.432h365.446c4.944 0 9.232-1.814 12.85-5.432 3.614-3.61 5.425-7.898 5.425-12.847v-36.545c0-4.945-1.811-9.233-5.425-12.847-3.618-3.621-7.906-5.428-12.85-5.428zM493.356 164.456H54.821c-4.952 0-9.235 1.807-12.85 5.424-3.617 3.615-5.424 7.898-5.424 12.847v36.547c0 4.947 1.807 9.233 5.424 12.845 3.619 3.617 7.898 5.429 12.85 5.429h438.535c4.944 0 9.232-1.812 12.85-5.429 3.614-3.612 5.425-7.898 5.425-12.845v-36.547c0-4.952-1.811-9.231-5.425-12.847-3.618-3.617-7.906-5.424-12.85-5.424zM506.206 60.241c-3.617-3.612-7.905-5.424-12.85-5.424H164.457c-4.952 0-9.235 1.812-12.85 5.424-3.617 3.617-5.426 7.902-5.426 12.85v36.547c0 4.948 1.809 9.229 5.426 12.847 3.619 3.616 7.901 5.424 12.85 5.424h328.899c4.944 0 9.232-1.809 12.85-5.424 3.614-3.617 5.425-7.898 5.425-12.847V73.091c-.001-4.948-1.811-9.23-5.425-12.85z"
      }));

    case 'arrow-down':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 444.8 444.8"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M434.3 185.7l-21.4-21.4c-7.4-7-16.1-10.6-26-10.6 -10.1 0-18.7 3.5-25.7 10.6l-83.9 83.9V47.3c0-9.9-3.6-18.5-10.9-25.7 -7.2-7.2-15.8-10.8-25.7-10.8h-36.5c-9.9 0-18.5 3.6-25.7 10.9 -7.2 7.2-10.8 15.8-10.8 25.7v201l-83.9-83.9c-7-7-15.6-10.6-25.7-10.6 -9.9 0-18.6 3.5-26 10.6l-21.1 21.4C3.6 192.9 0 201.6 0 211.7c0 10.3 3.6 18.8 10.8 25.7l185.9 186.1c7 7 15.6 10.6 25.7 10.6 9.9 0 18.6-3.5 26-10.6l185.9-186.1c7-7 10.6-15.6 10.6-25.7C444.8 201.8 441.3 193.1 434.3 185.7z"
      }));

    case 'arrow-left':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 444.822 444.822"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M423.265 178.298c-6.19-7.139-14.229-10.707-24.126-10.707H198.148L281.8 83.937c7.234-7.229 10.848-15.891 10.848-25.981 0-10.085-3.613-18.747-10.848-25.979l-21.413-21.129C253.156 3.619 244.59 0 234.693 0c-10.089 0-18.752 3.615-25.981 10.848L22.848 196.428c-7.043 7.423-10.564 16.084-10.564 25.981 0 10.089 3.521 18.654 10.564 25.693l185.864 186.152c7.422 7.043 16.083 10.567 25.981 10.567 10.085 0 18.65-3.524 25.693-10.567l21.413-21.693c7.234-6.851 10.848-15.42 10.848-25.693 0-10.284-3.613-18.853-10.848-25.7l-83.652-83.939h200.991c9.896 0 17.936-3.569 24.126-10.707 6.184-7.139 9.274-15.749 9.274-25.838v-36.545c.004-10.089-3.09-18.702-9.273-25.841z"
      }));

    case 'arrow-right':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 444.815 444.815"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M421.976 196.712L236.111 10.848C228.884 3.615 220.219 0 210.131 0c-9.9 0-18.464 3.615-25.697 10.848L163.023 32.26c-7.234 6.853-10.85 15.418-10.85 25.697 0 10.277 3.616 18.842 10.85 25.697l83.653 83.937H45.677c-9.895 0-17.937 3.568-24.123 10.707s-9.279 15.752-9.279 25.837v36.546c0 10.088 3.094 18.698 9.279 25.837s14.228 10.704 24.123 10.704h200.995L163.02 360.88c-7.234 7.228-10.85 15.89-10.85 25.981 0 10.089 3.616 18.75 10.85 25.978l21.411 21.412c7.426 7.043 15.99 10.564 25.697 10.564 9.899 0 18.562-3.521 25.981-10.564l185.864-185.864c7.043-7.043 10.567-15.701 10.567-25.981 0-10.467-3.524-19.036-10.564-25.694z"
      }));

    case 'arrow-up':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 444.8 444.8"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M434.3 208.7L248.4 22.8c-7-7-15.7-10.6-26-10.6 -10.5 0-19 3.5-25.7 10.6L10.8 208.7C3.6 215.9 0 224.6 0 234.7c0 9.9 3.6 18.5 10.8 25.7l21.4 21.4c6.9 7.2 15.4 10.9 25.7 10.9 10.3 0 18.8-3.6 25.7-10.9l83.9-83.7v201c0 9.9 3.6 17.9 10.7 24.1 7.1 6.2 15.8 9.3 25.8 9.3h36.5c10.1 0 18.7-3.1 25.8-9.3 7.1-6.2 10.7-14.2 10.7-24.1V198.1l83.9 83.7c6.8 7.2 15.4 10.9 25.7 10.9 10.1 0 18.7-3.6 26-10.9l21.4-21.4c7-7.4 10.6-16 10.6-25.7C444.8 224.8 441.3 216.1 434.3 208.7z"
      }));

    case 'backwards':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 88 88"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M0 44c0 1.396 1.398 2.395 1.398 2.395L38.71 71.146c2.862 1.91 5.21.504 5.21-3.123V19.975c0-3.626-2.348-5.03-5.21-3.122L1.398 41.604S0 42.604 0 44zm45.379 0c0 1.396 1.396 2.395 1.396 2.395l36.016 24.752c2.863 1.91 5.209.503 5.209-3.124V19.975c0-3.626-2.346-5.03-5.209-3.122L46.775 41.604s-1.396 1-1.396 2.396z"
      }));

    case 'bell':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "510",
        height: "510",
        viewBox: "0 0 510 510"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M255 510c28.05 0 51-22.95 51-51H204c0 28.05 22.95 51 51 51zm165.75-153V216.75c0-79.05-53.55-142.8-127.5-160.65V38.25C293.25 17.85 275.4 0 255 0s-38.25 17.85-38.25 38.25V56.1c-73.95 17.85-127.5 81.6-127.5 160.65V357l-51 51v25.5h433.5V408l-51-51z"
      }));

    case 'bold':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "438.543",
        height: "438.543",
        viewBox: "0 0 438.543 438.543"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M394.005 235.541c-17.131-19.987-42.537-33.878-76.231-41.683 23.612-10.85 37.887-18.177 42.835-21.982 11.991-8.947 21.032-18.942 27.113-29.98 6.092-11.042 9.134-23.223 9.134-36.545 0-12.371-1.995-23.981-5.995-34.831-3.997-10.852-10.182-20.749-18.556-29.694-8.565-8.943-18.273-16.18-29.122-21.7-10.089-4.947-19.226-8.658-27.411-11.132-19.603-5.14-37.781-7.71-54.529-7.71h-21.128c-3.806 0-7.666-.048-11.567-.144-3.898-.09-5.944-.14-6.134-.14-.949 0-2.284.05-4.002.141-1.713.096-3.049.144-3.999.144l-12.85.287L93.074 4.283l-74.23 1.714 1.142 23.695c15.986 2.096 26.84 3.337 32.548 3.715 9.707.571 16.274 2.002 19.701 4.283 2.096 1.525 3.238 2.666 3.428 3.427 1.902 4.187 2.946 14.56 3.14 31.121.76 28.171 1.619 66.619 2.568 115.344l.571 141.896c0 24.359-.855 42.828-2.568 55.388-.761 4.569-2.762 9.422-5.997 14.562-8.756 3.614-20.461 6.567-35.117 8.85-4.375.568-10.848 1.711-19.412 3.43l-.571 26.836c45.489-1.526 71.374-2.57 77.663-3.142 40.729-2.478 69.093-3.521 85.08-3.142l56.242 1.137c22.087.76 40.929-.288 56.534-3.139 24.742-4.568 44.057-10.283 57.958-17.135 14.082-6.851 27.404-17.131 39.964-30.833 9.527-10.466 16.275-21.601 20.272-33.407 5.521-16.174 8.278-31.494 8.278-45.963.005-24.739-8.748-47.202-26.263-67.379zM170.456 33.126c14.846-2.474 27.218-3.711 37.115-3.711 32.546 0 56.82 7.139 72.805 21.413 16.169 14.272 24.263 32.071 24.263 53.387 0 30.266-8.467 51.583-25.406 63.954-16.939 12.37-42.065 18.558-75.373 18.558-12.562 0-22.935-.665-31.118-1.997-.193-6.473-.288-13.8-.288-21.986l.288-27.979c.188-29.88-.383-56.431-1.714-79.656-.382-6.28-.572-13.603-.572-21.983zm142.755 329.753c-7.043 13.702-18.657 24.458-34.83 32.265-16.181 7.806-36.74 11.703-61.671 11.703-12.182 0-25.506-3.038-39.971-9.13-2.284-5.517-3.427-9.712-3.431-12.566l-.854-77.088.288-49.392v-41.114c5.14-1.903 14.753-2.853 28.837-2.853 31.787 0 55.291 3.046 70.519 9.135 15.797 6.096 29.218 18.086 40.258 35.978 7.803 12.566 11.704 29.694 11.704 51.394-.004 21.122-3.622 38.346-10.849 51.668z"
      }));

    case 'calendar':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 511.634 511.634"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M482.513 83.942c-7.225-7.233-15.797-10.85-25.694-10.85h-36.542v-27.41c0-12.56-4.477-23.315-13.422-32.26C397.906 4.474 387.156 0 374.59 0h-18.267c-12.565 0-23.318 4.475-32.264 13.422-8.95 8.945-13.423 19.7-13.423 32.26v27.41h-109.63v-27.41c0-12.56-4.475-23.314-13.422-32.26C178.64 4.475 167.885 0 155.32 0h-18.27c-12.562 0-23.317 4.475-32.264 13.422-8.945 8.945-13.42 19.7-13.42 32.26v27.41H54.822c-9.9 0-18.464 3.618-25.697 10.85-7.233 7.233-10.85 15.8-10.85 25.698v365.453c0 9.89 3.617 18.456 10.85 25.693 7.232 7.23 15.796 10.85 25.697 10.85h401.99c9.896 0 18.47-3.618 25.693-10.85 7.234-7.234 10.852-15.804 10.852-25.693V109.64c0-9.9-3.615-18.465-10.845-25.698zM137.047 475.088H54.823v-82.23h82.224v82.23zm0-100.498H54.823v-91.358h82.224v91.358zm0-109.64H54.823V182.73h82.224v82.223zm-6.42-130.617c-1.81-1.81-2.712-3.946-2.712-6.423V45.686c0-2.474.903-4.617 2.712-6.423 1.81-1.81 3.946-2.712 6.423-2.712h18.27c2.475 0 4.618.904 6.424 2.713 1.81 1.807 2.714 3.95 2.714 6.423v82.224c0 2.478-.91 4.615-2.714 6.423-1.807 1.81-3.946 2.712-6.423 2.712h-18.27c-2.474 0-4.614-.903-6.423-2.712zm116.056 340.755h-91.365v-82.23h91.365v82.23zm0-100.498h-91.365v-91.358h91.365v91.358zm0-109.64h-91.365V182.73h91.365v82.223zm109.64 210.138H264.96v-82.23h91.363v82.23zm0-100.498H264.96v-91.358h91.363v91.358zm0-109.64H264.96V182.73h91.363v82.223zm-6.427-130.617c-1.807-1.81-2.707-3.946-2.707-6.423V45.686c0-2.474.9-4.617 2.706-6.423 1.808-1.81 3.95-2.712 6.427-2.712h18.268c2.48 0 4.618.904 6.428 2.713 1.808 1.807 2.707 3.95 2.707 6.423v82.224c0 2.478-.903 4.615-2.707 6.423-1.807 1.81-3.95 2.712-6.427 2.712h-18.267c-2.477 0-4.626-.903-6.427-2.712zm106.916 340.755h-82.228v-82.23h82.228v82.23zm0-100.498h-82.228v-91.358h82.228v91.358zm0-109.64h-82.228V182.73h82.228v82.223z"
      }));

    case 'caret-down':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 292.362 292.362"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M286.935 69.377c-3.614-3.617-7.898-5.424-12.848-5.424H18.274c-4.952 0-9.233 1.807-12.85 5.424C1.807 72.997 0 77.28 0 82.227c0 4.95 1.807 9.23 5.424 12.848L133.33 222.982c3.622 3.617 7.903 5.428 12.85 5.428s9.234-1.81 12.848-5.428L286.935 95.074c3.613-3.617 5.427-7.898 5.427-12.847 0-4.948-1.814-9.23-5.427-12.85z"
      }));

    case 'caret-up':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 292.362 292.361"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M286.935 197.287L159.028 69.38c-3.613-3.616-7.895-5.423-12.847-5.423s-9.232 1.807-12.85 5.424L5.425 197.288C1.807 200.904 0 205.187 0 210.134s1.807 9.233 5.424 12.847c3.62 3.618 7.902 5.426 12.85 5.426h255.813c4.95 0 9.233-1.808 12.848-5.425 3.613-3.612 5.427-7.897 5.427-12.846s-1.814-9.23-5.427-12.847z"
      }));

    case 'check':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        viewBox: "0 0 55 55",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M25.687 43.332c-2.072 2.072-5.434 2.072-7.505 0L6.554 31.704c-2.072-2.071-2.072-5.433 0-7.504 2.071-2.072 5.433-2.072 7.505 0l6.928 6.927c.523.522 1.372.522 1.896 0l18.759-18.759c2.071-2.072 5.433-2.072 7.505 0 .995.995 1.554 2.345 1.554 3.752 0 1.407-.559 2.757-1.554 3.752l-23.46 23.46z"
      }));

    case 'chevron-left':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 444.531 444.531"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M213.13 222.409L351.88 83.653c7.05-7.043 10.567-15.657 10.567-25.841 0-10.183-3.518-18.793-10.567-25.835l-21.409-21.416C323.432 3.521 314.817 0 304.637 0s-18.791 3.521-25.841 10.561L92.649 196.425c-7.044 7.043-10.566 15.656-10.566 25.841s3.521 18.791 10.566 25.837l186.146 185.864c7.05 7.043 15.66 10.564 25.841 10.564s18.795-3.521 25.834-10.564l21.409-21.412c7.05-7.039 10.567-15.604 10.567-25.697 0-10.085-3.518-18.746-10.567-25.978L213.13 222.409z"
      }));

    case 'chevron-right':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 444.819 444.819"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M352.025 196.712L165.884 10.848C159.029 3.615 150.469 0 140.187 0s-18.842 3.619-25.697 10.848L92.792 32.264c-7.044 7.043-10.566 15.604-10.566 25.692 0 9.897 3.521 18.56 10.566 25.981L231.545 222.41 92.786 361.168c-7.042 7.043-10.564 15.604-10.564 25.693 0 9.896 3.521 18.562 10.564 25.98l21.7 21.413c7.043 7.043 15.612 10.564 25.697 10.564 10.089 0 18.656-3.521 25.697-10.564L352.025 248.39c7.046-7.423 10.571-16.084 10.571-25.981.001-10.088-3.525-18.654-10.571-25.697z"
      }));

    case 'clock':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 510 510"
      }, /*#__PURE__*/React__default['default'].createElement("g", null, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M255 0C114.75 0 0 114.75 0 255s114.75 255 255 255 255-114.75 255-255S395.25 0 255 0zm0 459c-112.2 0-204-91.8-204-204S142.8 51 255 51s204 91.8 204 204-91.8 204-204 204z"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M267.75 127.5H229.5v153l132.6 81.6 20.4-33.15-114.75-68.85"
      })));

    case 'close':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        viewBox: "0 0 45 45",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M28.6431324 22.9151037l10.0001496-9.9993395c1.5822971-1.58229703 1.5822971-4.14735203 0-5.72883888-1.5806766-1.58148684-4.147352-1.58148684-5.7280287 0L22.9151037 17.1878852 12.91495401 7.18692532c-1.58067666-1.58148684-4.14735203-1.58148684-5.72802869 0-1.58229703 1.58229704-1.58229703 4.14735203 0 5.72883888l9.99933948 9.9993395-9.99933948 9.9993394c-1.58229703 1.5822971-1.58229703 4.1473521 0 5.7288389.78993324.7915536 1.82778398 1.1861152 2.86401435 1.1861152 1.03542018 0 2.07408111-.3945616 2.86401434-1.1861152l10.00014969-9.9993394 10.0001496 10.0001496c.7907435.7915536 1.827784 1.1861151 2.8640144 1.1861151 1.0362303 0 2.0740811-.3945615 2.8640143-1.1861151 1.5822971-1.582297 1.5822971-4.147352 0-5.7288389L28.6431324 22.9151037z"
      }));

    case 'copy':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 511.627 511.627"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M503.633 117.628c-5.332-5.327-11.8-7.993-19.41-7.993H365.446c-11.417 0-23.603 3.806-36.542 11.42V27.412c0-7.616-2.662-14.092-7.994-19.417C315.578 2.665 309.11 0 301.492 0H182.725c-7.614 0-15.99 1.903-25.125 5.708-9.136 3.806-16.368 8.376-21.7 13.706L19.414 135.9c-5.33 5.33-9.9 12.564-13.706 21.7C1.903 166.737 0 175.107 0 182.724v191.858C0 382.2 2.663 388.676 7.992 394c5.33 5.332 11.803 7.994 19.414 7.994h155.318v82.23c0 7.61 2.662 14.084 7.992 19.41 5.327 5.33 11.8 7.993 19.414 7.993h274.09c7.61 0 14.086-2.662 19.41-7.994 5.333-5.325 7.995-11.8 7.995-19.41V137.046c.002-7.614-2.66-14.088-7.992-19.418zm-174.73 52.82v85.365H243.54l85.366-85.364zM146.18 60.814v85.364H60.814l85.364-85.364zm55.96 184.722c-5.33 5.33-9.9 12.564-13.705 21.7-3.805 9.142-5.708 17.51-5.708 25.127v73.083H36.547v-182.72h118.766c7.616 0 14.087-2.664 19.417-7.994 5.327-5.33 7.994-11.8 7.994-19.41V36.546H292.36v118.77l-90.22 90.218zm272.94 229.55H219.263v-182.73h118.775c7.614 0 14.082-2.662 19.41-7.994 5.328-5.324 7.994-11.796 7.994-19.41V146.18h109.63v328.907h.006z"
      }));

    case 'desktop':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 469.333 469.333"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M426.667 42.667h-384C19.093 42.667 0 61.76 0 85.333v256C0 364.907 19.093 384 42.667 384h106.667v42.667H320V384h106.667c23.573 0 42.453-19.093 42.453-42.667l.213-256c0-23.573-19.093-42.666-42.666-42.666zm0 298.666h-384v-256h384v256z"
      }));

    case 'devices':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M85.333 128h384V85.333h-384c-23.573 0-42.667 19.093-42.667 42.667v234.667H0v64h298.667v-64H85.333V128z"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M490.667 170.667h-128c-11.733 0-21.333 9.6-21.333 21.333v213.333c0 11.733 9.6 21.333 21.333 21.333h128c11.733 0 21.333-9.6 21.333-21.333V192c0-11.733-9.6-21.333-21.333-21.333zm-21.334 192H384V213.333h85.333v149.334z"
      }));

    case 'dot-matrix':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 535.5 535.5"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M439.7 66.7c0 9-1.7 17.4-5.2 25.4 -3.5 8-8.1 15-13.8 21.1 -5.7 6.1-12.5 10.9-20.5 14.4 -8 3.5-16.4 5.2-25.4 5.2 -9 0-17.4-1.7-25.4-5.2 -8-3.5-14.9-8.3-20.8-14.4 -5.9-6.1-10.6-13.2-14.1-21.1s-5.2-16.4-5.2-25.4 1.7-17.5 5.2-25.7 8.2-15.3 14.1-21.4S341.5 8.7 349.5 5.2C357.4 1.7 365.9 0 374.9 0s17.4 1.7 25.4 5.2c8 3.5 14.8 8.3 20.5 14.4s10.3 13.3 13.8 21.4C438 49.2 439.7 57.7 439.7 66.7zM439.7 268.1c0 9.4-1.7 18.1-5.2 26 -3.5 8-8.1 14.9-13.8 20.8s-12.5 10.6-20.5 14.1c-8 3.5-16.4 5.2-25.4 5.2 -9 0-17.4-1.7-25.4-5.2 -8-3.5-14.9-8.2-20.8-14.1s-10.6-12.9-14.1-20.8c-3.5-8-5.2-16.6-5.2-26 0-9 1.7-17.5 5.2-25.7 3.5-8.2 8.2-15.2 14.1-21.1s12.9-10.6 20.8-14.1c8-3.5 16.4-5.2 25.4-5.2s17.4 1.7 25.4 5.2c8 3.5 14.8 8.2 20.5 14.1s10.3 13 13.8 21.1C438 250.5 439.7 259.1 439.7 268.1zM437.9 469.4c0 9-1.6 17.3-4.9 25.1s-7.8 14.5-13.5 20.2c-5.7 5.7-12.4 10.2-20.2 13.5s-15.9 4.9-24.5 4.9c-8.6 0-16.7-1.6-24.5-4.9 -7.8-3.3-14.5-7.8-20.2-13.5 -5.7-5.7-10.2-12.4-13.5-20.2 -3.3-7.8-4.9-16.1-4.9-25.1 0-8.6 1.6-16.7 4.9-24.5 3.3-7.8 7.8-14.6 13.5-20.5s12.4-10.5 20.2-13.8c7.8-3.3 15.9-4.9 24.5-4.9 8.6 0 16.7 1.6 24.5 4.9s14.5 7.9 20.2 13.8c5.7 5.9 10.2 12.8 13.5 20.5S437.9 460.8 437.9 469.4zM226.1 66.7c0 9-1.7 17.4-5.2 25.4s-8.1 15-13.8 21.1 -12.5 10.9-20.5 14.4c-8 3.5-16.4 5.2-25.4 5.2s-17.4-1.7-25.4-5.2c-8-3.5-14.9-8.3-20.8-14.4 -5.9-6.1-10.6-13.2-14.1-21.1s-5.2-16.4-5.2-25.4 1.7-17.5 5.2-25.7c3.5-8.2 8.2-15.3 14.1-21.4S127.9 8.7 135.9 5.2 152.3 0 161.3 0s17.4 1.7 25.4 5.2 14.8 8.3 20.5 14.4 10.3 13.3 13.8 21.4C224.4 49.2 226.1 57.7 226.1 66.7zM226.1 268.1c0 9.4-1.7 18.1-5.2 26 -3.5 8-8.1 14.9-13.8 20.8s-12.5 10.6-20.5 14.1c-8 3.5-16.4 5.2-25.4 5.2s-17.4-1.7-25.4-5.2c-8-3.5-14.9-8.2-20.8-14.1s-10.6-12.9-14.1-20.8c-3.5-8-5.2-16.6-5.2-26 0-9 1.7-17.5 5.2-25.7 3.5-8.2 8.2-15.2 14.1-21.1s12.9-10.6 20.8-14.1 16.4-5.2 25.4-5.2 17.4 1.7 25.4 5.2 14.8 8.2 20.5 14.1 10.3 13 13.8 21.1C224.4 250.5 226.1 259.1 226.1 268.1zM226.1 469.4c0 9.4-1.7 18.1-5.2 26 -3.5 8-8.1 14.9-13.8 20.8s-12.5 10.6-20.5 14.1c-8 3.5-16.4 5.2-25.4 5.2s-17.4-1.7-25.4-5.2c-8-3.5-14.9-8.2-20.8-14.1s-10.6-12.9-14.1-20.8c-3.5-8-5.2-16.6-5.2-26 0-9 1.7-17.5 5.2-25.7 3.5-8.2 8.2-15.2 14.1-21.1s12.9-10.6 20.8-14.1c8-3.5 16.4-5.2 25.4-5.2s17.4 1.7 25.4 5.2c8 3.5 14.8 8.2 20.5 14.1s10.3 13 13.8 21.1C224.4 451.9 226.1 460.4 226.1 469.4z"
      }));

    case 'edit':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 268.7 268.7"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M161.4 56.3c-7-7-18.5-7-25.5 0l-6.4 6.4 -89.2 89.3 0 0 -2.8 2.8c0 0-9 9-29.2 74.4 -0.1 0.5-0.3 0.9-0.4 1.4 -0.4 1.2-0.7 2.4-1.1 3.6 -0.3 1.1-0.7 2.2-1 3.2 -0.3 0.9-0.6 1.8-0.8 2.8 -0.6 2.1-1.3 4.3-2 6.6 -1.5 4.9-5 16.1-1 20.1 3.9 3.9 15.1 0.5 20-1 2.2-0.7 4.4-1.3 6.5-2 1-0.3 1.9-0.6 2.9-0.9 1-0.3 2.1-0.6 3.1-0.9 1.3-0.4 2.5-0.8 3.8-1.2 0.4-0.1 0.7-0.2 1.1-0.3 62.2-19.4 73.4-28.5 74.3-29.3 0 0 0 0 0 0 0 0 0.1-0.1 0.1-0.1l2.9-2.9 0.2 0.2 89.2-89.3 0 0 6.4-6.4c7-7 7-18.5 0-25.5L161.4 56.3zM103.4 219.8c-0.1 0.1-0.2 0.1-0.3 0.2 -0.1 0-0.1 0.1-0.2 0.1 -0.1 0-0.2 0.1-0.2 0.2 -0.1 0-0.2 0.1-0.2 0.1 -3 1.8-11.7 6.4-32.8 14 -2.5 0.9-5.2 1.8-8 2.8l-30.1-30.1c1-2.8 1.9-5.6 2.8-8 7.6-21.2 12.2-30 14-32.9 0-0.1 0.1-0.1 0.1-0.2 0.1-0.1 0.1-0.2 0.2-0.3 0-0.1 0.1-0.1 0.1-0.2 0.1-0.1 0.1-0.2 0.2-0.3l2.2-2.2 54.5 54.5L103.4 219.8zM263.4 56.3l-51-51c-7-7-18.5-7-25.5 0l-12.7 12.8c-7 7-7 18.5 0 25.5l51 51.1c7 7 18.5 7 25.5 0l12.7-12.8C270.4 74.8 270.4 63.4 263.4 56.3z"
      }));

    case 'envelope':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 14 14"
      }, /*#__PURE__*/React__default['default'].createElement("g", null, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M7 9L5.268 7.484.316 11.729c.18.167.423.271.691.271h11.986c.267 0 .509-.104.688-.271L8.732 7.484 7 9z"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M13.684 2.271c-.18-.168-.422-.271-.691-.271H1.007c-.267 0-.509.104-.689.273L7 8l6.684-5.729zM0 2.878v8.308l4.833-4.107zm9.167 4.201L14 11.186V2.875z"
      })));

    case 'eye':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M256 96C144.3 96 47.6 161 0 256c47.6 95 144.3 160 256 160 111.7 0 208.4-65 256-160C464.4 161 367.7 96 256 96zM382.2 180.9c30.1 19.2 55.6 44.9 74.7 75.1 -19.1 30.3-44.6 56-74.7 75.1C344.4 355.3 300.8 368 256 368c-44.8 0-88.4-12.7-126.2-36.9 -30.1-19.2-55.6-44.9-74.7-75.1 19.1-30.3 44.6-56 74.7-75.1 2-1.2 3.9-2.5 5.9-3.6C130.7 190.9 128 205.6 128 221c0 70.7 57.3 128 128 128 70.7 0 128-57.3 128-128 0-15.4-2.7-30.1-7.7-43.8C378.3 178.4 380.3 179.6 382.2 180.9zM256 205c0 26.5-21.5 48-48 48s-48-21.5-48-48 21.5-48 48-48S256 178.5 256 205z"
      }));

    case 'facebook':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 96.124 96.123"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M72.089.02L59.624 0C45.62 0 36.57 9.285 36.57 23.656v10.907H24.037c-1.083 0-1.96.878-1.96 1.961v15.803c0 1.083.878 1.96 1.96 1.96H36.57v39.876c0 1.083.877 1.96 1.96 1.96h16.352c1.083 0 1.96-.878 1.96-1.96V54.287h14.654c1.083 0 1.96-.877 1.96-1.96l.006-15.803c0-.52-.207-1.018-.574-1.386-.367-.368-.867-.575-1.387-.575H56.842v-9.246c0-4.444 1.059-6.7 6.848-6.7l8.397-.003c1.082 0 1.959-.878 1.959-1.96V1.98c0-1.081-.876-1.958-1.957-1.96z"
      }));

    case 'feather':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M479.999 0C263.145 0 84.777 166.827 65.876 378.837c36.032-50.816 80.171-99.712 135.275-155.925 4.096-4.224 10.88-4.309 15.083-.149 4.203 4.117 4.267 10.88.149 15.083-8.299 8.448-16.725 17.216-25.195 26.091-4.843 5.056-9.579 10.091-14.229 15.04-.853.917-1.707 1.835-2.56 2.773C106.303 354.667 57.62 418.133 22.27 496.96c-2.411 5.376 0 11.691 5.355 14.101 1.429.64 2.901.939 4.373.939 4.075 0 7.979-2.347 9.749-6.293 12.587-28.053 27.2-54.08 43.627-79.403 148.992-3.819 284.608-86.699 355.691-218.581 1.771-3.307 1.685-7.296-.235-10.539-1.941-3.2-5.419-5.184-9.173-5.184h-39.509l70.848-40.491c2.24-1.28 3.968-3.349 4.8-5.781 15.189-44.16 22.869-89.6 22.869-135.061C490.665 4.779 485.887 0 479.999 0z"
      }));

    case 'forwards':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 80.142 80.142"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M38.815 40.071c0 1.272-1.271 2.181-1.271 2.181l-32.8 22.541C2.137 66.533 0 65.252 0 61.949V18.191c0-3.302 2.137-4.582 4.744-2.843l32.8 22.541s1.271.91 1.271 2.182zm40.054-2.182l-33.98-22.541c-2.607-1.738-4.746-.459-4.746 2.843v43.758c0 3.303 2.138 4.584 4.746 2.844l33.98-22.541s1.273-.909 1.273-2.181-1.273-2.182-1.273-2.182z"
      }));

    case 'gear':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 369.793 369.792"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M320.83 140.434l-1.759-.627-6.87-16.399.745-1.685c20.812-47.201 19.377-48.609 15.925-52.031L301.11 42.61c-1.135-1.126-3.128-1.918-4.846-1.918-1.562 0-6.293 0-47.294 18.57l-1.644.738-16.916-6.812-.679-1.684C210.45 3.762 208.475 3.762 203.677 3.762h-39.205c-4.78 0-6.957 0-24.836 47.825l-.673 1.741-16.828 6.86-1.609-.669c-27.752-11.7-43.956-17.633-48.18-17.633-1.714 0-3.714.769-4.854 1.892l-27.787 27.16c-3.525 3.477-4.987 4.933 16.915 51.149l.805 1.714-6.881 16.381-1.684.651C0 159.715 0 161.556 0 166.474v38.418c0 4.931 0 6.979 48.957 24.524l1.75.618 6.882 16.333-.739 1.669c-20.812 47.223-19.492 48.501-15.949 52.025L68.62 327.18c1.162 1.117 3.173 1.915 4.888 1.915 1.552 0 6.272 0 47.3-18.561l1.643-.769 16.927 6.846.658 1.693c19.293 47.726 21.275 47.726 26.076 47.726h39.217c4.924 0 6.966 0 24.859-47.857l.667-1.742 16.855-6.814 1.604.654c27.729 11.733 43.925 17.654 48.122 17.654 1.699 0 3.717-.745 4.876-1.893l27.832-27.219c3.501-3.495 4.96-4.924-16.981-51.096l-.816-1.734 6.869-16.31 1.64-.643c48.938-18.981 48.938-20.831 48.938-25.755V164.88c-.001-4.93-.001-6.966-48.964-24.446zM184.896 247.203c-35.038 0-63.542-27.959-63.542-62.3 0-34.342 28.505-62.264 63.542-62.264 35.023 0 63.522 27.928 63.522 62.264.001 34.335-28.498 62.3-63.522 62.3z"
      }));

    case 'image':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 550.801 550.8"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M515.828 61.2H34.972C15.66 61.2 0 76.86 0 96.173V454.63c0 19.312 15.66 34.97 34.972 34.97h480.856c19.314 0 34.973-15.658 34.973-34.97V96.17c0-19.313-15.657-34.97-34.972-34.97zm0 34.972V350.51l-68.92-62.66c-10.36-9.416-26.29-9.04-36.186.866l-69.752 69.74L203.438 194.18c-10.396-12.416-29.438-12.538-39.99-.272L34.972 343.218V96.173h480.856zm-148.627 91.8c0-26.56 21.524-48.086 48.085-48.086 26.562 0 48.086 21.525 48.086 48.086 0 26.56-21.522 48.085-48.085 48.085-26.56 0-48.084-21.524-48.084-48.085z"
      }));

    case 'info':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 23.625 23.625"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M11.812 0C5.289 0 0 5.289 0 11.812s5.289 11.813 11.812 11.813 11.813-5.29 11.813-11.813S18.335 0 11.812 0zm2.459 18.307c-.608.24-1.092.422-1.455.548-.362.126-.783.189-1.262.189-.736 0-1.309-.18-1.717-.539s-.611-.814-.611-1.367c0-.215.015-.435.045-.659.031-.224.08-.476.147-.759l.761-2.688c.067-.258.125-.503.171-.731.046-.23.068-.441.068-.633 0-.342-.071-.582-.212-.717-.143-.135-.412-.201-.813-.201-.196 0-.398.029-.605.09-.205.063-.383.12-.529.176l.201-.828c.498-.203.975-.377 1.43-.521.455-.146.885-.218 1.29-.218.731 0 1.295.178 1.692.53.395.353.594.812.594 1.376 0 .117-.014.323-.041.617-.027.295-.078.564-.152.811l-.757 2.68c-.062.215-.117.461-.167.736-.049.275-.073.485-.073.626 0 .356.079.599.239.728.158.129.435.194.827.194.185 0 .392-.033.626-.097.232-.064.4-.121.506-.17l-.203.827zm-.134-10.878c-.353.328-.778.492-1.275.492-.496 0-.924-.164-1.28-.492-.354-.328-.533-.727-.533-1.193 0-.465.18-.865.533-1.196.356-.332.784-.497 1.28-.497.497 0 .923.165 1.275.497.353.331.53.731.53 1.196 0 .467-.177.865-.53 1.193z"
      }));

    case 'italic':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "438.543",
        height: "438.543",
        viewBox: "0 0 438.543 438.543"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M355.172.715c-6.659.478-13.134.909-19.417 1.287-28.171 1.709-48.54 2.568-61.099 2.568-6.472 0-13.422-.193-20.842-.571L163.312 0l-5.426 29.408c1.902.378 5.52.762 10.85 1.143 19.602 1.138 33.308 3.806 41.112 7.993v10.85l-2.284 14.272-6.28 38.544-4.57 17.988-8.28 44.824c0 .193-.334 1.288-1 3.287-.666 1.997-1.524 4.899-2.568 8.705a1415.803 1415.803 0 0 0-3.571 13.278c-1.335 5.042-2.856 11.421-4.57 19.13a631.423 631.423 0 0 0-4.853 24.124l-3.428 18.274-15.986 76.517-7.71 39.677c-2.285 12.189-6.184 21.802-11.704 28.838-7.614 3.81-18.654 7.519-33.12 11.14a12036.646 12036.646 0 0 1-21.982 5.708l-4.853 24.273c4.565-.38 13.891-1.235 27.978-2.573 25.315-2.283 41.874-3.33 49.676-3.139l56.532.568c23.979 2.478 37.777 4.093 41.391 4.859 3.617.568 6.283.855 7.994.855 3.429 0 7.423-.191 11.991-.571.951-.188 3.142-.284 6.567-.284.38-1.902 1.235-5.808 2.569-11.711a99.327 99.327 0 0 0 1.999-16.562 695.404 695.404 0 0 0-18.85-2.848c-10.461-1.143-21.792-3.145-33.975-5.996-.564-3.805-.661-6.375-.281-7.71l3.43-12.847 12.278-67.091 10.849-45.111 17.418-88.793c4.183-20.367 10.466-49.484 18.847-87.366.763-7.232 1.995-15.037 3.713-23.413 2.282-10.848 4.571-19.221 6.851-25.125 7.043-2.853 16.659-5.802 28.836-8.848 10.286-2.281 20.655-5.232 31.121-8.848a486.69 486.69 0 0 0 3.716-14.561A104.328 104.328 0 0 0 365.45.01c-.189-.007-3.618.23-10.278.705z"
      }));

    case 'laptop':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M426.667 394.667c23.573 0 42.453-19.093 42.453-42.667l.213-234.667c0-23.573-19.093-42.667-42.667-42.667H85.333c-23.573 0-42.667 19.093-42.667 42.667V352c0 23.573 19.093 42.667 42.667 42.667H0c0 23.573 19.093 42.667 42.667 42.667h426.667c23.573 0 42.667-19.093 42.667-42.667h-85.334zM85.333 117.333h341.333V352H85.333V117.333zM256 416c-11.733 0-21.333-9.6-21.333-21.333 0-11.733 9.6-21.333 21.333-21.333s21.333 9.6 21.333 21.333c0 11.733-9.6 21.333-21.333 21.333z"
      }));

    case 'lightning':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M400.3 175.6c-1.4-3-4.4-4.9-7.7-4.9h-101.1l99.8-157.6c1.7-2.6 1.8-6 0.3-8.7C390 1.7 387.1 0 384 0H247.5c-3.2 0-6.2 1.8-7.6 4.7l-128 256c-1.3 2.6-1.2 5.8 0.4 8.3 1.6 2.5 4.3 4.1 7.3 4.1h87.7l-95.6 227.1c-1.6 3.9-0.2 8.4 3.4 10.6 1.4 0.8 2.9 1.3 4.4 1.3 2.4 0 4.9-1 6.5-3l273.1-324.3C401.2 182.2 401.7 178.6 400.3 175.6z"
      }));

    case 'link':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 466 466"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M442 284.4l-59.4-59.4c-16-16-35.4-24-58.2-24 -23.2 0-43 8.4-59.4 25.1l-25.1-25.1c16.8-16.4 25.1-36.3 25.1-59.7 0-22.8-7.9-42.2-23.7-58l-58.8-59.1c-15.8-16.2-35.2-24.3-58.2-24.3 -22.8 0-42.2 7.9-58 23.7L24.3 65.4C8.1 81.2 0 100.5 0 123.3c0 22.8 8 42.3 24 58.2l59.4 59.4c16 16 35.4 24 58.2 24 23.2 0 43-8.4 59.4-25.1l25.1 25.1c-16.7 16.4-25.1 36.3-25.1 59.7 0 22.8 7.9 42.2 23.7 58l58.8 59.1c15.8 16.2 35.2 24.3 58.2 24.3 22.8 0 42.2-7.9 58-23.7l42-41.7c16.2-15.8 24.3-35.1 24.3-58C465.9 319.8 458 300.4 442 284.4zM201 162.2c-0.6-0.6-2.3-2.4-5.3-5.4 -2.9-3-5-5.1-6.1-6.1 -1.1-1-3-2.5-5.4-4.3 -2.5-1.8-4.9-3-7.3-3.7 -2.4-0.7-5-1-7.9-1 -7.6 0-14.1 2.7-19.4 8 -5.3 5.3-8 11.8-8 19.4 0 2.9 0.3 5.5 1 7.9 0.7 2.4 1.9 4.8 3.7 7.3 1.8 2.5 3.2 4.3 4.3 5.4 1 1.1 3.1 3.2 6.1 6.1 3 3 4.9 4.7 5.4 5.3 -5.7 5.9-12.6 8.8-20.6 8.8 -7.8 0-14.3-2.6-19.4-7.7L62.8 142.8c-5.3-5.3-8-11.8-8-19.4 0-7.4 2.7-13.8 8-19.1l42-41.7c5.5-5.1 12-7.7 19.4-7.7 7.6 0 14.1 2.7 19.4 8l58.8 59.1c5.3 5.3 8 11.8 8 19.4C210.4 149.3 207.3 156.3 201 162.2zM403.1 361.7l-42 41.7c-5.3 4.9-11.8 7.4-19.4 7.4 -7.8 0-14.3-2.6-19.4-7.7l-58.8-59.1c-5.3-5.3-8-11.8-8-19.4 0-8 3.1-14.9 9.4-20.8 0.6 0.6 2.3 2.4 5.3 5.4 3 3 5 5.1 6.1 6.1 1.1 1.1 2.9 2.5 5.4 4.3 2.5 1.8 4.9 3 7.3 3.7 2.4 0.7 5 1 7.9 1 7.6 0 14.1-2.7 19.4-8 5.3-5.3 8-11.8 8-19.4 0-2.9-0.3-5.5-1-7.9 -0.7-2.4-1.9-4.8-3.7-7.3 -1.8-2.5-3.2-4.3-4.3-5.4 -1-1.1-3.1-3.2-6.1-6.1 -3-2.9-4.9-4.7-5.4-5.3 5.7-6.1 12.6-9.1 20.6-9.1 7.6 0 14.1 2.7 19.4 8l59.4 59.4c5.3 5.3 8 11.8 8 19.4C411.1 350 408.5 356.4 403.1 361.7z"
      }));

    case 'list':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 511.626 511.626"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M54.818 201c-15.23 0-28.17 5.326-38.832 15.986C5.33 227.642 0 240.583 0 255.813c0 15.223 5.33 28.172 15.99 38.83 10.66 10.656 23.604 15.984 38.832 15.984 15.225 0 28.167-5.328 38.828-15.984 10.657-10.657 15.987-23.606 15.987-38.83 0-15.23-5.33-28.17-15.99-38.828C82.99 206.33 70.047 201 54.817 201zM54.82 54.817c-15.23 0-28.17 5.33-38.83 15.987C5.332 81.464.002 94.404.002 109.632c0 15.23 5.327 28.17 15.986 38.83 10.66 10.658 23.603 15.986 38.83 15.986 15.226 0 28.168-5.33 38.83-15.985 10.656-10.66 15.986-23.603 15.986-38.83 0-15.228-5.33-28.17-15.987-38.83-10.657-10.656-23.6-15.986-38.83-15.986zM54.82 347.18c-15.23 0-28.174 5.325-38.83 15.98C5.332 373.825.002 386.768.002 401.99c0 15.234 5.327 28.17 15.986 38.833 10.66 10.657 23.603 15.985 38.83 15.985 15.226 0 28.168-5.328 38.83-15.985 10.656-10.663 15.986-23.6 15.986-38.834 0-15.224-5.33-28.173-15.987-38.83-10.657-10.655-23.6-15.98-38.83-15.98zM508.917 75.8c-1.813-1.803-3.95-2.708-6.427-2.708H155.313c-2.473 0-4.615.902-6.423 2.708-1.807 1.812-2.712 3.95-2.712 6.423v54.82c0 2.476.905 4.612 2.712 6.425 1.81 1.805 3.95 2.708 6.423 2.708H502.49c2.478 0 4.616-.9 6.427-2.708 1.81-1.812 2.71-3.95 2.71-6.424v-54.82c0-2.474-.904-4.615-2.71-6.424zM502.49 219.27H155.313c-2.473 0-4.615.9-6.423 2.713-1.807 1.807-2.712 3.95-2.712 6.423v54.82c0 2.47.905 4.612 2.712 6.42 1.81 1.813 3.95 2.714 6.423 2.714H502.49c2.478 0 4.616-.9 6.427-2.714 1.81-1.808 2.71-3.95 2.71-6.42v-54.82c0-2.474-.903-4.62-2.71-6.423-1.814-1.808-3.95-2.712-6.427-2.712zM502.49 365.447H155.313c-2.473 0-4.615.903-6.423 2.714-1.807 1.81-2.712 3.95-2.712 6.42v54.82c0 2.478.905 4.616 2.712 6.427 1.81 1.807 3.95 2.707 6.423 2.707H502.49c2.478 0 4.616-.9 6.427-2.707 1.81-1.81 2.71-3.95 2.71-6.427v-54.82c0-2.47-.903-4.616-2.71-6.42-1.814-1.803-3.95-2.713-6.427-2.713z"
      }));

    case 'lock':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 486.733 486.733"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M403.88 196.563h-9.484v-44.388c0-82.1-65.15-150.68-146.582-152.145-2.225-.04-6.67-.04-8.895 0C157.485 1.494 92.335 70.076 92.335 152.175v44.388H82.85c-14.615 0-26.537 15.082-26.537 33.71v222.63c0 18.607 11.922 33.83 26.54 33.83H403.88c14.616 0 26.54-15.223 26.54-33.83v-222.63c0-18.627-11.923-33.71-26.54-33.71zm-130.438 144.8v67.27c0 7.703-6.45 14.222-14.158 14.222H227.45c-7.71 0-14.16-6.52-14.16-14.222v-67.27c-7.476-7.36-11.83-17.538-11.83-28.796 0-21.334 16.492-39.666 37.46-40.513 2.222-.09 6.673-.09 8.895 0 20.968.847 37.46 19.18 37.46 40.513-.003 11.258-4.356 21.435-11.833 28.795zm58.444-144.8h-177.04v-44.388c0-48.905 39.744-89.342 88.52-89.342 48.774 0 88.52 40.437 88.52 89.342v44.388z"
      }));

    case 'lock-open':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 486.866 486.866"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M393.904 214.852h-8.89v-72.198C385.013 65.692 323.937 1.4 247.6.03c-2.084-.04-6.254-.04-8.338 0-76.337 1.37-137.41 65.66-137.41 142.623v1.603c0 16.182 13.117 29.3 29.3 29.3 16.18 0 29.298-13.118 29.298-29.3v-1.603c0-45.845 37.257-83.752 82.98-83.752s82.98 37.908 82.98 83.753v72.198H92.963c-13.7 0-24.877 14.14-24.877 31.603v208.7c0 17.44 11.176 31.713 24.878 31.713h300.94c13.704 0 24.88-14.27 24.88-31.712V246.452c0-17.463-11.176-31.6-24.88-31.6zm-122.277 135.74v63.06c0 7.223-6.046 13.333-13.273 13.333h-29.84c-7.23 0-13.274-6.11-13.274-13.332V350.59c-7.01-6.9-11.09-16.44-11.09-26.992 0-20 15.46-37.185 35.115-37.977 2.083-.084 6.255-.084 8.337 0 19.656.793 35.115 17.98 35.115 37.978 0 10.55-4.08 20.092-11.09 26.993z"
      }));

    case 'maximize':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 533.333 533.333"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M533.333 0v216.667L450 133.333l-100 100-50-50 100-100L316.667 0h216.666zm-300 350l-100 100 83.333 83.333H0V316.667L83.333 400l100-100 50 50z"
      }));

    case 'menu-dots':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        viewBox: "0 0 211 211",
        xmlns: "http://www.w3.org/2000/svg"
      }, /*#__PURE__*/React__default['default'].createElement("g", null, /*#__PURE__*/React__default['default'].createElement("circle", {
        cx: "41.5",
        cy: "41.5",
        r: "41.5"
      }), /*#__PURE__*/React__default['default'].createElement("circle", {
        cx: "169.5",
        cy: "41.5",
        r: "41.5"
      }), /*#__PURE__*/React__default['default'].createElement("circle", {
        cx: "41.5",
        cy: "169.5",
        r: "41.5"
      }), /*#__PURE__*/React__default['default'].createElement("circle", {
        cx: "169.5",
        cy: "169.5",
        r: "41.5"
      })));

    case 'menu-squares':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 95.5 95.5"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M39.101 0H2C.896 0 0 .896 0 2v37.102c0 1.104.896 2 2 2h37.101c1.104 0 2-.896 2-2V2c0-1.104-.896-2-2-2zM93.5 0H56.398c-1.104 0-2 .896-2 2v37.102c0 1.104.896 2 2 2H93.5c1.104 0 2-.896 2-2V2c0-1.104-.895-2-2-2zM39.101 54.398H2c-1.104 0-2 .896-2 2V93.5c0 1.104.896 2 2 2h37.101c1.104 0 2-.896 2-2V56.398c0-1.103-.896-2-2-2zm54.399 0H56.398c-1.104 0-2 .896-2 2V93.5c0 1.104.896 2 2 2H93.5c1.104 0 2-.896 2-2V56.398c0-1.103-.895-2-2-2z"
      }));

    case 'minimize':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M224 288v208l-80-80-96 96-48-48 96-96-80-80h208zM512 48l-96 96 80 80H288V16l80 80 96-96 48 48z"
      }));

    case 'mobile':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 469.333 469.333"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M320 0H149.333C119.893 0 96 23.893 96 53.333V416c0 29.44 23.893 53.333 53.333 53.333H320c29.44 0 53.333-23.893 53.333-53.333V53.333C373.333 23.893 349.44 0 320 0zm-85.333 448c-17.707 0-32-14.293-32-32s14.293-32 32-32 32 14.293 32 32-14.294 32-32 32zm96-85.333h-192V64h192v298.667z"
      }));

    case 'mute':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 384 384"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M288 192c0-37.653-21.76-70.187-53.333-85.867v47.147l52.373 52.373c.64-4.48.96-9.066.96-13.653zm53.333 0c0 20.053-4.373 38.933-11.52 56.32l32.32 32.32C376 254.08 384 224 384 192c0-91.307-63.893-167.68-149.333-187.093V48.96C296.32 67.307 341.333 124.373 341.333 192zM192 21.333L147.413 65.92 192 110.507zM27.2 0L0 27.2 100.8 128H0v128h85.333L192 362.667V219.2l90.773 90.773c-14.293 10.987-30.4 19.84-48.107 25.173V379.2c29.333-6.72 56.107-20.16 78.613-38.613L356.8 384l27.2-27.2-192-192L27.2 0z"
      }));

    case 'nodes':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "314.014",
        height: "314.015",
        viewBox: "0 0 314.014 314.015"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M266.911 109.898c-20.498 0-37.894 13.125-44.354 31.408H116.406l51.734-51.732c6.147 2.936 13 4.631 20.27 4.631 26.004 0 47.104-21.095 47.104-47.104C235.513 21.087 214.414 0 188.41 0c-26.005 0-47.104 21.087-47.104 47.102 0 7.268 1.695 14.122 4.631 20.264l-61.278 61.288c-8.59-11.383-22.201-18.747-37.558-18.747C21.093 109.906 0 130.991 0 157.007c0 26.004 21.093 47.103 47.101 47.103 15.365 0 28.968-7.361 37.558-18.755l61.278 61.286c-2.936 6.151-4.631 13.004-4.631 20.27 0 26.004 21.099 47.104 47.104 47.104 26.004 0 47.104-21.1 47.104-47.104 0-26.017-21.1-47.1-47.104-47.1-7.27 0-14.122 1.691-20.27 4.629l-51.734-51.732h106.151c6.468 18.286 23.855 31.402 44.354 31.402 26.009 0 47.104-21.099 47.104-47.103-.001-26.016-21.096-47.109-47.104-47.109zM188.41 31.402c8.664 0 15.701 7.025 15.701 15.699 0 8.668-7.037 15.701-15.701 15.701s-15.701-7.033-15.701-15.701c-.001-8.673 7.037-15.699 15.701-15.699zM47.102 172.708c-8.666 0-15.699-7.037-15.699-15.701 0-8.674 7.033-15.701 15.699-15.701 8.668 0 15.701 7.027 15.701 15.701 0 8.664-7.033 15.701-15.701 15.701zm141.308 78.506c8.664 0 15.701 7.021 15.701 15.697 0 8.664-7.037 15.701-15.701 15.701s-15.701-7.037-15.701-15.701c-.001-8.677 7.037-15.697 15.701-15.697zm78.501-78.506c-8.66 0-15.697-7.037-15.697-15.701 0-8.674 7.037-15.701 15.697-15.701 8.664 0 15.701 7.027 15.701 15.701 0 8.664-7.037 15.701-15.701 15.701z"
      }));

    case 'ordered-list':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 232.582 232.582"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M11.326 107.724c0-2 .489-4.047 1.466-5.495.977-1.449 2.319-2.149 4.026-2.149 1.909 0 3.341.573 4.296 1.695.954 1.124 1.432 2.635 1.432 4.522 0 1.325-.472 2.889-1.415 4.685-.943 1.797-2.598 3.842-4.598 6.133L.582 133.693v7.031h34v-8H16.144l-.102-.392 6.638-7.203c4.313-4.694 7.271-8.28 8.878-10.661 1.605-2.381 2.408-5.145 2.408-8.244 0-4.604-1.511-8.243-4.531-10.895-3.021-2.649-7.227-3.98-12.617-3.98-5.076 0-9.153 1.575-12.23 4.73-3.077 3.155-4.56 6.953-4.447 11.49l.068.154h11.117zM11.582 57.724h-11v9h34v-9h-11V17.136l-23 3.436v8.152h11zM27.026 189.594c2.313-1.056 4.161-2.521 5.542-4.396 1.382-1.875 2.072-3.926 2.072-6.148 0-4.47-1.595-7.923-4.784-10.36-3.189-2.438-7.445-3.655-12.769-3.655-4.582 0-8.479 1.213-11.691 3.639C2.184 171.1.645 174.441.78 178.349l.068.377h11.051c0-2 .56-2.623 1.684-3.477 1.123-.854 2.426-1.367 3.908-1.367 1.887 0 3.324.484 4.313 1.54.988 1.056 1.482 2.336 1.482 3.886 0 1.954-.55 3.574-1.65 4.675-1.101 1.101-2.673 1.743-4.717 1.743h-5.337v8h5.337c2.269 0 4.026.67 5.273 1.759 1.247 1.09 1.87 2.888 1.87 5.268 0 1.708-.596 3.154-1.785 4.277-1.191 1.123-2.786 1.699-4.785 1.699-1.752 0-3.239-.755-4.464-1.821-1.225-1.066-1.836-2.182-1.836-4.182H.073l-.067.432c-.112 4.582 1.555 8.196 5.003 10.61 3.448 2.414 7.474 3.679 12.078 3.679 5.346 0 9.737-1.256 13.174-3.828 3.437-2.571 5.154-6.09 5.154-10.582 0-2.74-.74-5.085-2.223-7.051-1.483-1.967-3.538-3.426-6.166-4.392zM51.582 164.724h181v33h-181zM51.582 99.724h181v33h-181zM51.582 32.724h181v33h-181z"
      }));

    case 'palette':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 459 459"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M229.5 0C102 0 0 102 0 229.5S102 459 229.5 459c20.4 0 38.3-17.8 38.3-38.2 0-10.2-2.5-17.8-10.2-25.5 -5.1-7.6-10.2-15.3-10.2-25.5 0-20.4 17.9-38.2 38.3-38.2h45.9c71.4 0 127.5-56.1 127.5-127.5C459 91.8 357 0 229.5 0zM89.3 229.5c-20.4 0-38.2-17.8-38.2-38.2S68.9 153 89.3 153s38.3 17.9 38.3 38.3S109.7 229.5 89.3 229.5zM165.8 127.5c-20.4 0-38.2-17.8-38.2-38.2S145.4 51 165.8 51 204 68.9 204 89.3 186.2 127.5 165.8 127.5zM293.3 127.5c-20.4 0-38.2-17.8-38.2-38.2S272.9 51 293.3 51s38.3 17.9 38.3 38.3S313.7 127.5 293.3 127.5zM369.8 229.5c-20.4 0-38.2-17.8-38.2-38.2S349.4 153 369.8 153 408 170.9 408 191.3 390.2 229.5 369.8 229.5z"
      }));

    case 'pause':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 356.919 356.918"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M301.201 7.721V349.19c0 4.269-3.457 7.729-7.715 7.729h-63.705c-4.268 0-7.727-3.46-7.727-7.729V7.721c0-4.263 3.459-7.721 7.727-7.721h63.705c4.258 0 7.715 3.458 7.715 7.721zM127.142 0H63.438c-4.266 0-7.721 3.458-7.721 7.721V349.19c0 4.269 3.455 7.729 7.721 7.729h63.703c4.265 0 7.723-3.46 7.723-7.729V7.721c0-4.263-3.457-7.721-7.722-7.721z"
      }));

    case 'play':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 373.008 373.008"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M61.792 2.588C64.771.864 68.105 0 71.444 0c3.33 0 6.663.864 9.655 2.588l230.116 167.2c5.963 3.445 9.656 9.823 9.656 16.719 0 6.895-3.683 13.272-9.656 16.713L81.099 370.427c-5.972 3.441-13.334 3.441-19.302 0-5.973-3.453-9.66-9.833-9.66-16.724V19.305c0-6.892 3.681-13.269 9.655-16.717z"
      }));

    case 'plus':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 600 600"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        fill: "none",
        d: "M-1-1h602v602H-1z"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M493.00351 253.17801c-5.331-5.33-11.806-7.994-19.417-7.994h-118.772v-118.775c0-7.611-2.666-14.084-7.994-19.414-5.329-5.326-11.797-7.992-19.419-7.992h-54.812c-7.612 0-14.084 2.663-19.414 7.993-5.33 5.33-7.994 11.803-7.994 19.414v118.775h-118.771c-7.611 0-14.084 2.664-19.414 7.994s-7.993 11.797-7.993 19.413v54.819c0 7.618 2.662 14.086 7.992 19.411 5.33 5.332 11.803 7.994 19.414 7.994h118.771v118.777c0 7.611 2.664 14.089 7.994 19.417 5.33 5.325 11.802 7.987 19.414 7.987h54.816c7.617 0 14.086-2.662 19.417-7.987 5.332-5.331 7.994-11.806 7.994-19.417v-118.777h118.77c7.618 0 14.089-2.662 19.417-7.994 5.329-5.325 7.994-11.793 7.994-19.411v-54.819c-.002-7.616-2.661-14.087-7.993-19.414z"
      }));

    case 'puzzle':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 475.078 475.077"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M462.1 285.8c-8.66-11.24-20.8-16.86-36.4-16.86-8.2 0-16.1 1.43-23.7 4.28-7.62 2.86-13.76 6.05-18.42 9.57-4.66 3.5-9.7 6.7-15.13 9.55-5.42 2.86-10.23 4.3-14.4 4.3-8.58 0-17.05-4.4-25.43-13.14-6.66-7.04-10-18.17-10-33.4 0-18.08 2.3-41.4 6.86-69.95.2-.57.52-2.6 1-6.13.48-3.52.95-6.76 1.43-9.7.48-2.96.8-4.63 1-5v-.58c-8.94.38-24.46 2-46.54 4.85-22.08 2.85-39.2 4.28-51.4 4.28-11.6 0-21.4-2.52-29.4-7.57-8-5.03-12-12.98-12-23.83 0-7.04 1.68-13.8 5-20.27 3.34-6.47 6.96-11.85 10.86-16.14 3.9-4.28 7.52-9.9 10.85-16.84 3.33-6.94 5-14.32 5-22.12 0-15.04-5.14-26.8-15.42-35.26-10.28-8.47-23.03-12.7-38.25-12.7-16.18 0-29.88 4.32-41.12 12.98-11.22 8.66-16.84 20.8-16.84 36.4 0 8.2 1.43 16.1 4.28 23.7 2.85 7.6 6.04 13.75 9.56 18.42 3.53 4.66 6.7 9.7 9.57 15.13 2.85 5.43 4.28 10.23 4.28 14.42 0 8.55-4.38 17.02-13.14 25.4-7.05 6.66-18.18 10-33.4 10-18.1 0-41.4-2.3-69.96-6.86-.56-.2-2.6-.53-6.13-1-3.52-.48-6.75-.96-9.7-1.43-2.95-.47-4.62-.8-5-1v292.37c0 .2.2.3.57.3.38.17.67.27.86.27l3.7.57c1.73.38 4.34.77 7.86 1.15 3.5.38 6.13.77 7.85 1.14 28.54 4.56 51.86 6.84 69.94 6.84 15.22 0 26.35-3.33 33.4-10 8.75-8.37 13.13-16.84 13.13-25.4 0-4.2-1.42-9-4.28-14.42-2.85-5.43-6.05-10.47-9.56-15.13-3.53-4.67-6.72-10.8-9.58-18.43-2.85-7.6-4.28-15.5-4.28-23.7 0-15.6 5.62-27.74 16.85-36.4 11.2-8.66 24.82-13 40.8-13 15.43 0 28.28 4.25 38.55 12.7 10.28 8.48 15.42 20.24 15.42 35.28 0 7.8-1.67 15.18-5 22.12-3.33 6.95-6.95 12.56-10.85 16.85-3.9 4.28-7.5 9.66-10.85 16.13-3.33 6.47-5 13.23-5 20.27 0 10.85 4 18.8 12 23.84 8 5.04 17.8 7.56 29.4 7.56 8.76 0 18.1-.47 28-1.42 9.88-.95 20.87-2.24 32.96-3.86 12.1-1.62 21.36-2.72 27.83-3.28 2.1-.2 5.24-.3 9.43-.3v-1.4c.18-7.44-1.25-18.38-4.3-32.85-3.04-14.45-4.57-25.4-4.57-32.82 0-23.6 10.47-35.4 31.4-35.4 7.06 0 13.8 1.66 20.28 5 6.5 3.33 11.86 6.95 16.14 10.84 4.3 3.9 9.9 7.52 16.86 10.86 6.94 3.32 14.3 5 22.1 5 15.05 0 26.8-5.15 35.28-15.42 8.47-10.3 12.7-23.13 12.7-38.54 0-16-4.33-29.6-13-40.83z"
      }));

    case 'quote':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 16 16"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M9 9V2h7v7.1c0 4.8-4.5 5.4-4.5 5.4l-.6-1.4s2-.3 2.4-1.9c.4-1.2-.4-2.2-.4-2.2H9zM0 9V2h7v7.1c0 4.8-4.5 5.4-4.5 5.4l-.6-1.4s2-.3 2.4-1.9C4.7 10 3.9 9 3.9 9H0z"
      }));

    case 'refresh':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 438.529 438.528"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M433.109 23.694c-3.614-3.612-7.898-5.424-12.848-5.424-4.948 0-9.226 1.812-12.847 5.424l-37.113 36.835c-20.365-19.226-43.684-34.123-69.948-44.684C274.091 5.283 247.056.003 219.266.003c-52.344 0-98.022 15.843-137.042 47.536-39.021 31.689-64.715 73.035-77.087 124.048v1.997c0 2.474.903 4.617 2.712 6.423 1.809 1.809 3.949 2.712 6.423 2.712h56.814c4.189 0 7.042-2.19 8.566-6.565 7.993-19.032 13.035-30.166 15.131-33.403 13.322-21.698 31.023-38.734 53.103-51.106 22.082-12.371 45.873-18.559 71.376-18.559 38.261 0 71.473 13.039 99.645 39.115l-39.406 39.397c-3.607 3.617-5.421 7.902-5.421 12.851 0 4.948 1.813 9.231 5.421 12.847 3.621 3.617 7.905 5.424 12.854 5.424h127.906c4.949 0 9.233-1.807 12.848-5.424 3.613-3.616 5.42-7.898 5.42-12.847V36.542c0-4.949-1.796-9.23-5.42-12.848zM422.253 255.813h-54.816c-4.188 0-7.043 2.187-8.562 6.566-7.99 19.034-13.038 30.163-15.129 33.4-13.326 21.693-31.028 38.735-53.102 51.106-22.083 12.375-45.874 18.556-71.378 18.556-18.461 0-36.259-3.423-53.387-10.273-17.13-6.858-32.454-16.567-45.966-29.13l39.115-39.112c3.615-3.613 5.424-7.901 5.424-12.847 0-4.948-1.809-9.236-5.424-12.847-3.617-3.62-7.898-5.431-12.847-5.431H18.274c-4.952 0-9.235 1.811-12.851 5.431C1.807 264.844 0 269.132 0 274.08v127.907c0 4.945 1.807 9.232 5.424 12.847 3.619 3.61 7.902 5.428 12.851 5.428 4.948 0 9.229-1.817 12.847-5.428l36.829-36.833c20.367 19.41 43.542 34.355 69.523 44.823 25.981 10.472 52.866 15.701 80.653 15.701 52.155 0 97.643-15.845 136.471-47.534 38.828-31.688 64.333-73.042 76.52-124.05.191-.38.281-1.047.281-1.995 0-2.478-.907-4.612-2.715-6.427-1.81-1.799-3.953-2.706-6.431-2.706z"
      }));

    case 'remove':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 339.2 339.2"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M247.2 169.6l83.9-83.9c5.3-5.3 8-11.8 8-19.4 0-7.6-2.7-14.1-8-19.4L292.4 8C287 2.7 280.6 0 272.9 0c-7.6 0-14.1 2.7-19.4 8L169.6 91.9 85.7 8C80.3 2.7 73.9 0 66.2 0c-7.6 0-14.1 2.7-19.4 8L8 46.8C2.7 52.2 0 58.6 0 66.2c0 7.6 2.7 14.1 8 19.4l83.9 83.9L8 253.5C2.7 258.9 0 265.3 0 272.9c0 7.6 2.7 14.1 8 19.4l38.8 38.8c5.3 5.3 11.8 8 19.4 8 7.6 0 14.1-2.7 19.4-8l83.9-83.9 83.9 83.9c5.3 5.3 11.8 8 19.4 8 7.6 0 14.1-2.7 19.4-8l38.8-38.8c5.3-5.3 8-11.8 8-19.4 0-7.6-2.7-14.1-8-19.4L247.2 169.6z"
      }));

    case 'repeat':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 438.542 438.542"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M427.408 19.697c-7.803-3.23-14.463-1.902-19.986 4L370.306 60.53C349.94 41.305 326.672 26.412 300.5 15.848 274.328 5.285 247.25.003 219.27.003c-29.69 0-58.05 5.808-85.08 17.417-27.03 11.61-50.346 27.215-69.95 46.82-19.605 19.607-35.214 42.92-46.824 69.95S0 189.574 0 219.27c0 29.688 5.807 58.05 17.417 85.08 11.613 27.03 27.218 50.347 46.824 69.952 19.605 19.6 42.922 35.207 69.952 46.818 27.028 11.61 55.388 17.42 85.08 17.42 32.736 0 63.865-6.9 93.363-20.7 29.5-13.796 54.625-33.26 75.377-58.387 1.52-1.903 2.234-4.045 2.136-6.424-.09-2.38-1-4.33-2.71-5.853l-39.11-39.4c-2.1-1.71-4.472-2.565-7.138-2.565-3.045.38-5.232 1.526-6.566 3.43-13.895 18.085-30.93 32.07-51.107 41.976-20.173 9.894-41.586 14.84-64.237 14.84-19.792 0-38.684-3.855-56.67-11.565-17.99-7.706-33.552-18.127-46.683-31.26-13.13-13.136-23.55-28.692-31.26-46.683-7.71-17.987-11.564-36.874-11.564-56.67s3.858-38.692 11.563-56.675c7.707-17.985 18.127-33.547 31.26-46.678 13.136-13.134 28.694-23.555 46.683-31.265C180.59 76.955 199.487 73.1 219.28 73.1c38.26 0 71.475 13.038 99.646 39.115l-39.41 39.394c-5.902 5.71-7.23 12.278-4 19.7 3.24 7.614 8.856 11.42 16.854 11.42h127.906c4.95 0 9.23-1.807 12.848-5.424 3.613-3.616 5.42-7.898 5.42-12.847V36.55c-.002-7.992-3.704-13.607-11.136-16.853z"
      }));

    case 'rocket':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 466.227 466.227"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M463.36 2.85c-1.9-1.8-4.2-2.7-6.85-2.7-49.67 0-90.7 6.74-123.04 20.26-32.36 13.53-66.43 38.08-102.2 73.67-15.24 15.42-32 33.98-50.26 55.68l-108.2 5.7c-3.05.4-5.53 1.9-7.43 4.58L1.42 269.67c-2.3 3.8-1.8 7.5 1.42 11.13l18.28 18.27c1.7 1.72 3.9 2.57 6.56 2.57 1.15 0 2-.1 2.57-.28l78.8-24.28 80.23 80.23L165 436.1c-.94 3.44-.18 6.48 2.3 9.15l18.27 18.27c2.1 1.7 4.28 2.57 6.57 2.57 1.7 0 3.23-.4 4.57-1.16L306.34 401c2.67-1.9 4.2-4.38 4.57-7.43l5.72-108.2c21.7-18.28 40.26-35.03 55.68-50.26 33.9-34.06 58-68.37 72.37-102.9 14.37-34.56 21.56-75.53 21.56-122.92 0-2.48-.96-4.62-2.87-6.43zm-69.08 108.07c-5.33 5.33-11.8 8-19.42 8s-14.08-2.67-19.4-8c-5.34-5.33-8-11.8-8-19.42 0-7.6 2.66-14.08 8-19.4 5.32-5.34 11.8-8 19.4-8s14.1 2.66 19.42 8 8 11.8 8 19.4c0 7.62-2.67 14.1-8 19.42z"
      }));

    case 'search':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 475.084 475.084"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M464.524 412.846l-97.93-97.925c23.6-34.067 35.407-72.046 35.407-113.916 0-27.218-5.283-53.25-15.85-78.087-10.562-24.842-24.84-46.254-42.826-64.24-17.987-17.988-39.396-32.265-64.233-42.827C254.247 5.285 228.218.003 201 .003c-27.217 0-53.248 5.282-78.086 15.847-24.842 10.562-46.254 24.84-64.24 42.826-17.99 17.987-32.265 39.403-42.828 64.24C5.282 147.76 0 173.787 0 201.005c0 27.216 5.282 53.238 15.846 78.083 10.562 24.838 24.838 46.247 42.827 64.234 17.987 17.994 39.403 32.265 64.24 42.833 24.842 10.563 50.87 15.844 78.086 15.844 41.878 0 79.85-11.807 113.92-35.405l97.93 97.64c6.852 7.232 15.406 10.85 25.693 10.85 9.897 0 18.467-3.617 25.694-10.85 7.23-7.23 10.848-15.795 10.848-25.692.003-10.082-3.518-18.65-10.56-25.694zm-173.16-121.488c-25.03 25.033-55.15 37.55-90.365 37.55-35.21 0-65.33-12.52-90.36-37.55-25.032-25.03-37.547-55.144-37.547-90.36 0-35.21 12.518-65.334 37.546-90.36 25.025-25.032 55.15-37.546 90.36-37.546s65.33 12.52 90.363 37.546 37.548 55.15 37.548 90.36c0 35.216-12.518 65.33-37.547 90.36z"
      }));

    case 'star':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 443.442 443.442"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M436.083 190.376l-115.52 83.927 44.13 135.8c2.388 7.354-.236 15.404-6.48 19.955-3.138 2.27-6.81 3.405-10.497 3.405-3.682 0-7.364-1.135-10.48-3.405l-115.513-83.933-115.508 83.92c-6.266 4.553-14.733 4.553-20.986 0-6.24-4.538-8.867-12.59-6.476-19.94l44.118-135.808-115.508-83.92c-6.254-4.546-8.88-12.594-6.49-19.95 2.397-7.353 9.256-12.33 16.98-12.33h142.78l44.117-135.79c2.392-7.353 9.246-12.327 16.98-12.327s14.576 4.974 16.964 12.327l44.118 135.79h142.792c7.72 0 14.576 4.978 16.976 12.33 2.37 7.356-.26 15.404-6.497 19.95z"
      }));

    case 'strikethrough':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "511.626",
        height: "511.626",
        viewBox: "0 0 511.626 511.626"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M137.901 237.533h212.124c-7.042-4.563-16.084-9.515-27.124-14.845-19.786-8.754-36.261-15.037-49.396-18.842-40.537-11.798-67.089-24.078-79.652-36.829-12.563-12.753-18.843-26.075-18.843-39.971 0-16.753 6.379-30.649 19.13-41.687 12.943-11.227 30.264-16.846 51.962-16.846 23.221 0 43.206 8.66 59.958 25.981 10.085 10.656 19.893 30.166 29.406 58.529l4.004.568 23.982 1.712 3.43-.854c.951-5.142 1.43-9.419 1.43-12.85 0-11.421-1.334-28.833-4.004-52.246-2.101-15.222-4.093-26.457-5.995-33.691-21.122-6.849-37.973-11.419-50.535-13.701-22.268-3.617-38.167-5.426-47.674-5.426-49.493 0-86.891 12.091-112.209 36.26-25.505 24.362-38.256 53.774-38.256 88.225 0 17.318 4.568 35.208 13.706 53.672 4.372 8.568 9.226 16.182 14.556 22.841zM282.65 310.624c19.605 7.994 32.647 14.756 39.115 20.27 15.42 13.897 23.127 28.838 23.127 44.823 0 12.946-4.477 25.222-13.422 36.833-8.562 11.416-20.17 19.612-34.83 24.551-14.268 5.15-27.501 7.713-39.677 7.713-13.893 0-26.455-2.098-37.685-6.283-11.8-4-21.794-9.418-29.98-16.275-8.564-7.043-16.18-15.988-22.841-26.84-.953-1.517-2.144-4.09-3.571-7.703-1.425-3.621-3.571-8.946-6.423-15.985a719.995 719.995 0 0 0-8.564-20.272l-29.121.571v12.562l-.571 10.571c-.188 7.228-.188 13.699 0 19.41.378 9.134.571 23.982.571 44.543v3.713c0 2.666.76 4.754 2.281 6.283 2.855 2.275 9.707 4.945 20.557 7.991l39.969 11.419c15.415 4.381 33.975 6.571 55.673 6.571 23.414 0 42.723-1.999 57.958-5.999 13.897-3.433 28.444-9.713 43.684-18.843 13.702-8.761 24.078-16.464 31.121-23.134 9.127-9.322 15.893-19.219 20.27-29.694 7.81-19.222 11.707-39.399 11.707-60.521 0-10.092-.66-18.843-1.988-26.269H282.65v-.006zM509.06 258.374c-1.718-1.711-3.901-2.566-6.57-2.566H9.135c-2.666 0-4.853.855-6.567 2.566C.859 260.085 0 262.275 0 264.945v18.267c0 2.67.855 4.856 2.568 6.571 1.714 1.711 3.905 2.56 6.567 2.56H502.49c2.669 0 4.853-.849 6.57-2.56 1.711-1.715 2.566-3.901 2.566-6.571v-18.267c0-2.67-.855-4.86-2.566-6.571z"
      }));

    case 'structure':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 384 384"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M213.333 0H384v128H213.333zM0 0h170.667v213.333H0zM0 256h170.667v128H0zM213.333 170.667H384V384H213.333z"
      }));

    case 'tag':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 432.5 432.5"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M422 229.8L217.8 26c-7.2-7.2-16.9-13.4-29.1-18.4C176.5 2.5 165.4 0 155.3 0H36.5C26.6 0 18.1 3.6 10.9 10.8 3.6 18.1 0 26.6 0 36.5v118.8c0 10.1 2.5 21.2 7.6 33.4s11.2 21.8 18.4 28.8L230.1 422c7 7 15.6 10.6 25.7 10.6 9.9 0 18.6-3.5 26-10.6l140.2-140.5c7-7 10.6-15.6 10.6-25.7C432.5 245.9 429 237.3 422 229.8zM117.2 117.2c-7.1 7.1-15.8 10.7-25.8 10.7 -10.1 0-18.7-3.6-25.8-10.7 -7.1-7.1-10.7-15.7-10.7-25.8 0-10.1 3.6-18.7 10.7-25.8 7.1-7.1 15.8-10.7 25.8-10.7 10.1 0 18.7 3.6 25.8 10.7 7.1 7.1 10.7 15.7 10.7 25.8C127.9 101.5 124.3 110.1 117.2 117.2z"
      }));

    case 'tools':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M450 138.3l-47.7 48.5-2.7 2.8-1.6 1.7c-1.1.8-2.4 1.2-3.9 1.2-1.6 0-3.1-.6-4.3-1.6l-.9-.9-2.7-2.7-41.3-42.1-2.2-2.2-1.7-1.7c-1-1.5-1.6-3.4-1.6-5.3 0-1.7.6-3.2 1.6-4.4l.7-.8 2.6-2.6 47.9-48.7c-5.1-10.1-24.7-14.9-35.1-14.1-17.1 1.3-34.7 7-52.8 25.5-.7.8-1.5 1.6-2.2 2.3-24.6 26.8-29.5 62.8-19.5 95.8.7 1.4 1.3 3.1 1.6 4.6 1.1 5.5-.4 10.2-4 13.5l-37.9 36.4c-11.8-12-13.5-13.6-13.5-13.6-2-2-6-3.3-9.5-1.2l-5.9 3.6c-22.7-23.1-32.3-32.4-35.4-43.6-3.2-11.7-.3-27.3 2.7-33.1 2.5-4.6 10.3-8.9 16.9-9.4l8.6 8.8c2 2 5.1 2 7.1 0l30.9-31.4c2-2 2-5.3 0-7.3l-49.9-50.7c-2-2-5.2-2-7.1 0L156.3 97c-2 2-2 5.3 0 7.3l3.3 3.4c0 4.9-.7 12.5-4.7 16.6-6.2 6.3-18.5-1-26.5 4.7-7.9 5.6-17.9 14.6-24.3 21-6.3 6.4-30.5 31.8-47.8 74.6-17.3 42.8-4 82.5 5.4 92.9 5 5.5 14.1 11.1 12.5.7-1.6-10.5-4.2-46.9 7.7-61.8 11.9-14.9 27.6-27.1 48-28.1 19.6-1 30.9 5.7 56.3 31.5l-2.8 5.2c-1.8 3.4-.8 7.7 1.2 9.7 0 0 1.5 1.6 12.1 12.4l-97.2 93.2c-16.2 14.3-15.3 40.5-.3 56 15.2 15.2 41.1 16.3 55.2-.2l91.4-98.6c49.1 52.3 93.3 107.4 93.3 107.4 2 2 5.2 2 7.1 0l49.9-50.7c2-2 2-5.2 0-7.3 0 0-55.2-45.7-107-96.2l35.5-38.3c3.3-3.7 7.9-5.2 13.3-4.1 1.5.3 3.1 1 4.5 1.7 32.4 10.2 67.8 5.2 94-19.8.8-.7 1.5-1.5 2.3-2.3 18.1-18.4 23.7-36.4 25-53.8 1-10.6-3.5-30.3-13.7-35.8z"
      }));

    case 'trash':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 459 459"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M76.5 408c0 28.05 22.95 51 51 51h204c28.05 0 51-22.95 51-51V102h-306v306zM408 25.5h-89.25L293.25 0h-127.5l-25.5 25.5H51v51h357v-51z"
      }));

    case 'twitter':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 612 612"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M612 116.258c-22.525 9.981-46.694 16.75-72.088 19.772 25.929-15.527 45.777-40.155 55.184-69.411-24.322 14.379-51.169 24.82-79.775 30.48-22.907-24.437-55.49-39.658-91.63-39.658-69.334 0-125.551 56.217-125.551 125.513 0 9.828 1.109 19.427 3.251 28.606-104.326-5.24-196.835-55.223-258.75-131.174-10.823 18.51-16.98 40.078-16.98 63.101 0 43.559 22.181 81.993 55.835 104.479-20.575-.688-39.926-6.348-56.867-15.756v1.568c0 60.806 43.291 111.554 100.693 123.104-10.517 2.83-21.607 4.398-33.08 4.398-8.107 0-15.947-.803-23.634-2.333 15.985 49.907 62.336 86.199 117.253 87.194-42.947 33.654-97.099 53.655-155.916 53.655-10.134 0-20.116-.612-29.944-1.721 55.567 35.681 121.536 56.485 192.438 56.485 230.948 0 357.188-191.291 357.188-357.188l-.421-16.253c24.666-17.593 46.005-39.697 62.794-64.861z"
      }));

    case 'underline':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        width: "438.543",
        height: "438.543",
        viewBox: "0 0 438.543 438.543"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M13.706 27.131c23.223.572 37.212 4.286 41.967 11.122 3.234 4.764 4.854 25.031 4.854 60.813v95.076c0 29.886 1.52 52.438 4.565 67.666 4.192 22.648 12.09 41.21 23.7 55.672 11.416 14.277 28.455 25.893 51.103 34.834 22.27 8.754 49.298 13.131 81.082 13.131 27.787 0 52.058-3.135 72.81-9.417 20.361-6.092 37.685-14.565 51.955-25.413 14.093-11.037 24.749-22.744 31.977-35.118 4.948-8.754 8.856-20.369 11.711-34.824 3.997-20.745 5.428-49.687 4.284-86.8-2.662-71.761-4.757-109.446-6.283-113.063 0-2.091-.144-5.042-.424-8.848-.288-3.809-.432-6.374-.432-7.708 0-4.949 1.431-8.854 4.285-11.706 1.149-1.141 8.661-2.762 22.555-4.856 7.427-.19 15.424-1.431 23.986-3.711.767-4.567 1.14-7.517 1.14-8.852 0-2.474-.564-7.329-1.708-14.558L431.693 0c-22.843 2.475-41.494 3.424-55.963 2.854L317.205 0h-23.982l-.575 24.556 4 .854 28.552-.57c8.179-.19 15.509 3.047 21.98 9.71 3.613 3.997 5.903 12.369 6.851 25.122l1.137 16.849c1.149 16.368 2.43 31.545 3.86 45.533 1.431 13.99 2.478 25.649 3.142 34.973.664 9.329.999 21.51.999 36.547 0 29.694-1.999 51.48-5.996 65.374-3.23 11.04-8.281 21.895-15.126 32.552-3.244 5.331-9.428 11.42-18.568 18.277-8.179 6.276-17.597 11.129-28.26 14.555-16.563 5.332-34.738 7.994-54.529 7.994-16.946 0-33.783-4.47-50.535-13.422-11.61-6.276-20.745-15.03-27.407-26.262-8.563-14.842-13.418-34.074-14.561-57.677l-3.997-79.938-.291-65.374c0-1.138-.049-3.566-.144-7.277a369.601 369.601 0 0 1-.144-9.276c0-22.459 1.237-35.019 3.71-37.685 3.621-4.76 11.137-7.139 22.557-7.139 12.185 0 23.984-.855 35.404-2.568v-2.57l-.57-18.271.283-3.999c-5.708.38-13.891.572-24.551.572-5.708.19-19.605.666-41.684 1.427-15.612.572-31.599.854-47.967.854-6.473 0-22.27-.662-47.395-1.997C33.501.964 22.841.585 11.421.585 6.281.585 2.474.677.002.869l.857 25.126c1.521.376 5.804.758 12.847 1.136zM429.4 402.001H9.14c-2.664 0-4.854.855-6.567 2.57-1.715 1.715-2.568 3.901-2.568 6.567v18.271c0 2.666.857 4.856 2.568 6.567 1.713 1.715 3.899 2.566 6.567 2.566H429.4c2.669 0 4.859-.852 6.57-2.566 1.711-1.711 2.563-3.901 2.563-6.567v-18.271c0-2.666-.853-4.853-2.563-6.567s-3.901-2.57-6.57-2.57z"
      }));

    case 'unmute':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 384 384"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M288 192c0-37.653-21.76-70.187-53.333-85.867v171.84C266.24 262.187 288 229.653 288 192zM0 128v128h85.333L192 362.667V21.333L85.333 128z"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M234.667 4.907V48.96C296.32 67.307 341.333 124.373 341.333 192S296.32 316.693 234.667 335.04v44.053C320.107 359.68 384 283.413 384 192S320.107 24.32 234.667 4.907z"
      }));

    case 'upload':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 548.176 548.176"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M524.326 297.352c-15.896-19.89-36.21-32.782-60.959-38.684 7.81-11.8 11.704-24.934 11.704-39.399 0-20.177-7.139-37.401-21.409-51.678-14.273-14.272-31.498-21.411-51.675-21.411-18.083 0-33.879 5.901-47.39 17.703-11.225-27.41-29.171-49.393-53.817-65.95-24.646-16.562-51.818-24.842-81.514-24.842-40.349 0-74.802 14.279-103.353 42.83-28.553 28.544-42.825 62.999-42.825 103.351 0 2.474.191 6.567.571 12.275-22.459 10.469-40.349 26.171-53.676 47.106C6.661 299.594 0 322.43 0 347.179c0 35.214 12.517 65.329 37.544 90.358 25.028 25.037 55.15 37.548 90.362 37.548h310.636c30.259 0 56.096-10.711 77.512-32.12 21.413-21.409 32.121-47.246 32.121-77.516-.003-25.505-7.952-48.201-23.849-68.097zm-161.597-7.704c-1.813 1.804-3.949 2.707-6.42 2.707h-63.953v100.502c0 2.471-.903 4.613-2.711 6.42-1.813 1.813-3.949 2.711-6.42 2.711h-54.826c-2.474 0-4.615-.897-6.423-2.711-1.804-1.807-2.712-3.949-2.712-6.42V292.355H155.31c-2.662 0-4.853-.855-6.563-2.563-1.713-1.714-2.568-3.904-2.568-6.566 0-2.286.95-4.572 2.852-6.855l100.213-100.21c1.713-1.714 3.903-2.57 6.567-2.57 2.666 0 4.856.856 6.567 2.57l100.499 100.495c1.714 1.712 2.562 3.901 2.562 6.571-.001 2.469-.904 4.618-2.71 6.421z"
      }));

    case 'user':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 60 60"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M48.014 42.889l-9.553-4.776C37.56 37.662 37 36.756 37 35.748v-3.381c.229-.28.47-.599.719-.951 1.239-1.75 2.232-3.698 2.954-5.799C42.084 24.97 43 23.575 43 22v-4c0-.963-.36-1.896-1-2.625v-5.319c.056-.55.276-3.824-2.092-6.525C37.854 1.188 34.521 0 30 0s-7.854 1.188-9.908 3.53C17.724 6.231 17.944 9.506 18 10.056v5.319c-.64.729-1 1.662-1 2.625v4c0 1.217.553 2.352 1.497 3.109.916 3.627 2.833 6.36 3.503 7.237v3.309c0 .968-.528 1.856-1.377 2.32l-8.921 4.866C8.801 44.424 7 47.458 7 50.762V54c0 4.746 15.045 6 23 6s23-1.254 23-6v-3.043c0-3.438-1.911-6.53-4.986-8.068z"
      }));

    case 'user-add':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M429 328v-51h51v-42h-51v-51h-42v51h-51v42h51v51"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M416 448s0-26.4-2.2-40.2c-1.8-10.9-16.9-25.3-81.1-48.9-63.2-23.2-59.3-11.9-59.3-54.6 0-27.7 14.1-11.6 23.1-64.2 3.5-20.7 6.3-6.9 13.9-40.1 4-17.4-2.7-18.7-1.9-27 .8-8.3 1.6-15.7 3.1-32.7 1.8-21-17.7-76.3-87.6-76.3-69.9 0-89.4 55.3-87.5 76.4 1.5 16.9 2.3 24.4 3.1 32.7.8 8.3-5.9 9.6-1.9 27 7.6 33.1 10.4 19.3 13.9 40.1 9 52.6 23.1 36.5 23.1 64.2 0 42.8 3.9 31.5-59.3 54.6-64.2 23.5-79.4 38-81.1 48.9C32 421.6 32 448 32 448h384z"
      }));

    case 'users':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 512 512"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M425.3 324.8c-41.4-15.7-38.9-9.4-38.9-38.5 0-18.8 9.3-11.9 15.2-47.7 2.3-14.1 4.2-4.7 9.1-27.3 2.6-11.8-1.8-12.7-1.2-18.3.5-5.6 1-10.7 2-22.2 1.2-14.4-11.6-52-57.4-52s-58.6 37.6-57.4 52c.9 11.6 1.5 16.6 2 22.2.5 5.6-3.8 6.5-1.2 18.3 4.9 22.6 6.8 13.1 9.1 27.3 5.9 35.8 15.1 29 15.1 47.7 0 13.4 3.1 19-14.9 27.5 5.4 1.9 11.7 4.2 19.3 7.1 54.4 20.7 53.1 40.8 54.5 50.3 1 6.5 1.5 58.3 1.7 76.8H480s0-80.5-1.5-89.9c-1.1-7.4-11-17.2-53.2-33.3z"
      }), /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M357 448s0-14.1-.2-30.4c-.2-18.6-.7-40-1.7-46.4-1.5-9.5-14.3-22.2-68.6-42.9-7.5-2.8-13.8-5.1-19.3-7.1-33.3-11.8-30.9-15.7-30.9-48 0-24.3 12-8.5 19.6-54.6 3-18.2 5.4-6.1 11.7-35.2 3.4-15.2-2.3-16.4-1.6-23.7.7-7.3 1.4-13.8 2.6-28.7 1.6-18.5-14.9-67.1-74.1-67.1-59.2 0-75.6 48.5-74.1 67.1 1.2 14.9 1.9 21.4 2.7 28.7.7 7.3-5 8.4-1.6 23.7 6.4 29.1 8.8 17 11.8 35.2 7.6 46.1 19.5 30.3 19.5 54.6 0 37.6 3.3 34.8-50.2 55.1C48.3 349 35.5 361.7 34 371.2c-2 12.1-2 76.8-2 76.8h325z"
      }));

    case 'warning':
      return /*#__PURE__*/React__default['default'].createElement("svg", {
        xmlns: "http://www.w3.org/2000/svg",
        viewBox: "0 0 483.537 483.537"
      }, /*#__PURE__*/React__default['default'].createElement("path", {
        d: "M479.963 425.047L269.051 29.854c-5.259-9.88-15.565-16.081-26.782-16.081h-.03c-11.217 0-21.492 6.171-26.782 16.051L3.603 425.016c-5.046 9.485-4.773 20.854.699 29.974 5.502 9.15 15.413 14.774 26.083 14.774H453.12c10.701 0 20.58-5.594 26.083-14.774 5.502-9.15 5.776-20.519.76-29.943zm-237.724-16.082c-16.781 0-30.399-13.619-30.399-30.399s13.619-30.399 30.399-30.399c16.75 0 30.399 13.619 30.399 30.399s-13.618 30.399-30.399 30.399zm30.43-121.111c0 16.811-13.649 30.399-30.399 30.399-16.781 0-30.399-13.589-30.399-30.399V166.256c0-16.781 13.619-30.399 30.399-30.399 16.75 0 30.399 13.619 30.399 30.399v121.598z"
      }));
  }
};

var styles$2 = undefined;

var LoaderHorizontal = function LoaderHorizontal() {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$2.base
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$2.bar
  }));
};

var Button = function Button(props) {
  var _classNames;

  var history = reactRouterDom.useHistory();
  var color = props.color,
      size = props.size,
      active = props.active,
      circle = props.circle,
      square = props.square,
      icon = props.icon,
      iconRight = props.iconRight,
      iconColor = props.iconColor,
      labelColor = props.labelColor,
      hideIcon = props.hideIcon,
      hideLabel = props.hideLabel,
      className = props.className,
      type = props.type,
      disabled = props.disabled,
      children = props.children,
      title = props.title,
      busy = props.busy,
      propagate = props.propagate,
      link = props.link,
      href = props.href,
      onClick = props.onClick;
  /**
   * Handle on click
   * @param event
   */

  var handleClick = function handleClick(event) {
    // Event propagation
    if (!propagate) {
      event.stopPropagation();
    } // Link


    if (link) {
      history.push(link);
    } // Href
    else if (href) {
        var win = window.open(href, "_blank");
        win.focus();
      } // Handler
      else if (onClick) {
          onClick(event);
        }
  }; // Classnames


  var buttonClasses = classNames__default['default'](styles.base, (_classNames = {}, _defineProperty(_classNames, styles.colorPrimary, color === "primary"), _defineProperty(_classNames, styles.colorSuccess, color === "success"), _defineProperty(_classNames, styles.colorWarning, color === "warning"), _defineProperty(_classNames, styles.colorError, color === "error"), _defineProperty(_classNames, styles.colorInfo, color === "info"), _defineProperty(_classNames, styles.sizeSmall, size === "small"), _defineProperty(_classNames, styles.sizeBig, size === "big"), _defineProperty(_classNames, styles.silent, color === "silent"), _defineProperty(_classNames, styles.active, active), _defineProperty(_classNames, styles.circle, circle), _defineProperty(_classNames, styles.square, square), _defineProperty(_classNames, styles.iconRight, iconRight), _defineProperty(_classNames, styles.hideIcon, hideIcon || busy), _defineProperty(_classNames, styles.hideLabel, hideLabel || busy), _defineProperty(_classNames, styles.iconPrimary, iconColor === "primary"), _defineProperty(_classNames, styles.iconInfo, iconColor === "info"), _defineProperty(_classNames, styles.iconSuccess, iconColor === "success"), _defineProperty(_classNames, styles.iconWarning, iconColor === "warning"), _defineProperty(_classNames, styles.iconError, iconColor === "error"), _defineProperty(_classNames, styles.labelSuccess, labelColor === "success"), _defineProperty(_classNames, styles.labelWarning, labelColor === "warning"), _defineProperty(_classNames, styles.labelError, labelColor === "error"), _classNames), className); // Properties

  var properties = {
    className: buttonClasses,
    type: type || "button",
    onClick: handleClick,
    disabled: disabled || busy,
    title: title
  };
  return /*#__PURE__*/React__default['default'].createElement("button", properties, busy ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles.loader
  }, /*#__PURE__*/React__default['default'].createElement(LoaderHorizontal, null)) : null, icon && !iconRight ? /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles.icon,
    name: icon
  }) : null, children, icon && iconRight ? /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles.icon,
    name: icon
  }) : null);
};
Button.propTypes = {
  /**
   * Click handler
   */
  onClick: PropTypes__default['default'].func,

  /**
   * Link if using React Router
   */
  link: PropTypes__default['default'].string,

  /**
   * Hard HTML link
   */
  href: PropTypes__default['default'].string,

  /**
   * Color of button
   */
  color: PropTypes__default['default'].oneOf(["primary", "secondary", "info", "success", "warning", "error"]),

  /**
   * Size of button
   */
  size: PropTypes__default['default'].oneOf(["small", "big"]),

  /**
   * Renders a pressed state of the button
   */
  active: PropTypes__default['default'].bool,

  /**
   * Disabled button
   */
  disabled: PropTypes__default['default'].bool,

  /**
   * Shows a loading indicator on the button
   */
  busy: PropTypes__default['default'].bool,

  /**
   * Display button as a circle. Use with icon.
   */
  circle: PropTypes__default['default'].bool,

  /**
   * Display button as a square. Use with icon.
   */
  square: PropTypes__default['default'].bool,

  /**
   * Add icon to button.
   */
  icon: PropTypes__default['default'].string,

  /**
   * Color of the icon on the button
   */
  iconColor: PropTypes__default['default'].oneOf(["primary", "secondary", "info", "success", "warning", "error"]),

  /**
   * Display the icon to the right of the label.
   */
  iconRight: PropTypes__default['default'].bool,

  /**
   * Change the color of the text label.
   */
  labelColor: PropTypes__default['default'].oneOf(["success", "warning", "error"])
};

var styles$3 = undefined;

var ButtonGroup = function ButtonGroup(_ref) {
  var children = _ref.children,
      className = _ref.className;
  // Button elements
  var buttons = React__default['default'].Children.map(children, function (child) {
    if (child && child.type === Button) {
      return /*#__PURE__*/React__default['default'].cloneElement(child, {
        className: styles$3.item
      });
    }
  });
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$3.base, className)
  }, buttons);
};
ButtonGroup.propTypes = {
  /**
   * Add custom classname
   */
  className: PropTypes__default['default'].string
};

var Clickable = function Clickable(props) {
  var inline = props.inline,
      children = props.children,
      link = props.link,
      onClick = props.onClick,
      className = props.className;
  var tagType = link ? reactRouterDom.Link : inline ? "span" : "div";
  return /*#__PURE__*/React__default['default'].createElement(tagType, {
    children: children,
    link: link,
    onClick: onClick,
    className: className,
    to: link
  });
};
Clickable.propTypes = {
  /**
   * Inlined element (span)
   */
  inline: PropTypes__default['default'].bool,

  /**
   * React router link
   */
  link: PropTypes__default['default'].string,

  /**
   * Click handler
   */
  onClick: PropTypes__default['default'].func,

  /**
   * HTML link
   */
  href: PropTypes__default['default'].string,

  /**
   * Link target
   */
  target: PropTypes__default['default'].string,

  /**
   * Custom class name
   */
  className: PropTypes__default['default'].string
};

var styles$4 = undefined;

var styles$5 = undefined;

var Row = function Row(props) {
  var _classNames;

  var className = props.className,
      children = props.children,
      gutter = props.gutter,
      spacing = props.spacing;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$5.row, (_classNames = {}, _defineProperty(_classNames, styles$5["gutter_ver_".concat(gutter[0])], gutter[0]), _defineProperty(_classNames, styles$5["gutter_hor_".concat(gutter[1])], gutter[1]), _defineProperty(_classNames, styles$5["spacing_".concat(spacing)], spacing), _classNames), className)
  }, React__default['default'].Children.map(children, function (child) {
    return /*#__PURE__*/React__default['default'].cloneElement(child, {
      gutter: gutter
    });
  }));
};
Row.defaultProps = {
  spacing: null,
  gutter: ["regular", "regular"]
};
Row.propTypes = {
  /**
   * Define vertical/horizontal gutter
   */
  gutter: PropTypes__default['default'].array,

  /**
   * Bottom spacing on the row
   */
  spacing: PropTypes__default['default'].oneOf([null, "small", "regular", "large"]),

  /**
   * Custom class name
   */
  className: PropTypes__default['default'].string
};

var styles$6 = undefined;

var styles$7 = undefined;

var Filler = function Filler(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$7.base
  }, children);
};

var Col = function Col(props) {
  var _classNames;

  var span = props.span,
      order = props.order,
      offset = props.offset,
      push = props.push,
      pull = props.pull,
      gutter = props.gutter,
      className = props.className,
      children = props.children;
  var spanLabel = 0;
  var sizeClassObj = {};
  ['xs', 'sm', 'md', 'lg'].forEach(function (size) {
    var _Object$assign;

    var sizeProps = {
      span: span,
      order: order,
      offset: offset,
      push: push,
      pull: pull
    };

    if (typeof props[size] === 'number') {
      sizeProps.span = props[size];
    } else if (_typeof(props[size]) === 'object') {
      sizeProps = props[size] || {};
    } // Set span label


    if (sizeProps.span > spanLabel) {
      spanLabel = sizeProps.span;
    }

    sizeClassObj = Object.assign({}, sizeClassObj, (_Object$assign = {}, _defineProperty(_Object$assign, styles$6["grid_col_".concat(size, "_").concat(sizeProps.span)], sizeProps.span !== undefined), _defineProperty(_Object$assign, styles$6["grid_col_".concat(size, "_order_").concat(sizeProps.order)], sizeProps.order || sizeProps.order === 0), _defineProperty(_Object$assign, styles$6["grid_col_".concat(size, "_offset_").concat(sizeProps.offset)], sizeProps.offset || sizeProps.offset === 0), _defineProperty(_Object$assign, styles$6["grid_col_".concat(size, "_push_").concat(sizeProps.push)], sizeProps.push || sizeProps.push === 0), _defineProperty(_Object$assign, styles$6["grid_col_".concat(size, "_pull_").concat(sizeProps.pull)], sizeProps.pull || sizeProps.pull === 0), _Object$assign));
  });
  var colClasses = classNames__default['default']((_classNames = {}, _defineProperty(_classNames, styles$6["grid_col_".concat(span)], span !== undefined), _defineProperty(_classNames, styles$6["grid_col_order_".concat(order)], order), _defineProperty(_classNames, styles$6["grid_col_offset_".concat(offset)], offset), _defineProperty(_classNames, styles$6["grid_col_push_".concat(push)], push), _defineProperty(_classNames, styles$6["grid_col_pull_".concat(pull)], pull), _defineProperty(_classNames, styles$6["gutter_ver_".concat(gutter[0])], gutter[0]), _defineProperty(_classNames, styles$6["gutter_hor_".concat(gutter[1])], gutter[1]), _classNames), className, sizeClassObj);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: colClasses
  }, children ? children : /*#__PURE__*/React__default['default'].createElement(Filler, null, spanLabel));
};
var stringOrNumber = PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].number]);
var objectOrNumber = PropTypes__default['default'].oneOfType([PropTypes__default['default'].object, PropTypes__default['default'].number]);
Col.propTypes = {
  /**
   * Span units of given column.
   */
  span: stringOrNumber,

  /**
   * Order of columns if flex
   */
  order: stringOrNumber,

  /**
   * Left offset units of given column.
   */
  offset: stringOrNumber,

  /**
   * Push the column number of units to the right.
   */
  push: stringOrNumber,

  /**
   * Pull the column number of units to the left.
   */
  pull: stringOrNumber,

  /**
   * Add custom class name
   */
  className: PropTypes__default['default'].string,

  /**
   * Define span and offset for extra small screens.
   */
  xs: objectOrNumber,

  /**
   * Define span and offset for small screens.
   */
  sm: objectOrNumber,

  /**
   * Define span and offset for medium screens.
   */
  md: objectOrNumber,

  /**
   * Define span and offset for large screens.
   */
  lg: objectOrNumber
};

var ConfirmActionButton = function ConfirmActionButton(props) {
  var label = props.label,
      question = props.question,
      onConfirm = props.onConfirm,
      size = props.size,
      lang = props.lang;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      promptConfirm = _useState2[0],
      setPromptConfirm = _useState2[1];

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$4.base
  }, promptConfirm ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$4.prompt
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$4.question
  }, question), /*#__PURE__*/React__default['default'].createElement(Row, {
    gutter: ["small"]
  }, /*#__PURE__*/React__default['default'].createElement(Col, {
    span: 12
  }, /*#__PURE__*/React__default['default'].createElement(Button, {
    block: true,
    size: size,
    icon: "check",
    iconColor: "success",
    onClick: function onClick() {
      setPromptConfirm(false);
      onConfirm();
    }
  }, lang.yes)), /*#__PURE__*/React__default['default'].createElement(Col, {
    span: 12
  }, /*#__PURE__*/React__default['default'].createElement(Button, {
    block: true,
    size: size,
    icon: "close",
    iconColor: "error",
    onClick: function onClick() {
      return setPromptConfirm(false);
    }
  }, lang.no)))) : /*#__PURE__*/React__default['default'].createElement(Button, {
    size: size,
    labelColor: "error",
    className: styles$4.button,
    block: true,
    onClick: function onClick() {
      return setPromptConfirm(true);
    }
  }, label));
};
ConfirmActionButton.defaultProps = {
  lang: {
    yes: "Yes",
    no: "No"
  }
};
ConfirmActionButton.propTypes = {
  /**
   * Button label
   */
  label: PropTypes__default['default'].string,

  /**
   * Question to confirm
   */
  question: PropTypes__default['default'].string,

  /**
   * Confirm (yes) handler
   */
  onConfirm: PropTypes__default['default'].func,

  /**
   * Size of buttons
   */
  size: PropTypes__default['default'].oneOf(['small', 'big']),

  /**
   * Override yes/no labels
   */
  lang: PropTypes__default['default'].object
};

var styles$8 = undefined;

var DotsButton = function DotsButton(_ref) {
  var active = _ref.active,
      onClick = _ref.onClick;
  // Classes
  var classes = classNames__default['default'](styles$8.base, _defineProperty({}, styles$8.active, active));
  return /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: classes,
    onClick: onClick
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$8.icon,
    name: "menu-dots"
  }));
};

var styles$9 = undefined;

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */

function __awaiter(thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
}

function __generator(thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
}

function __read(o, n) {
    var m = typeof Symbol === "function" && o[Symbol.iterator];
    if (!m) return o;
    var i = m.call(o), r, ar = [], e;
    try {
        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);
    }
    catch (error) { e = { error: error }; }
    finally {
        try {
            if (r && !r.done && (m = i["return"])) m.call(i);
        }
        finally { if (e) throw e.error; }
    }
    return ar;
}

function __spread() {
    for (var ar = [], i = 0; i < arguments.length; i++)
        ar = ar.concat(__read(arguments[i]));
    return ar;
}

var COMMON_MIME_TYPES = new Map([
    ['avi', 'video/avi'],
    ['gif', 'image/gif'],
    ['ico', 'image/x-icon'],
    ['jpeg', 'image/jpeg'],
    ['jpg', 'image/jpeg'],
    ['mkv', 'video/x-matroska'],
    ['mov', 'video/quicktime'],
    ['mp4', 'video/mp4'],
    ['pdf', 'application/pdf'],
    ['png', 'image/png'],
    ['zip', 'application/zip'],
    ['doc', 'application/msword'],
    ['docx', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document']
]);
function toFileWithPath(file, path) {
    var f = withMimeType(file);
    if (typeof f.path !== 'string') { // on electron, path is already set to the absolute path
        var webkitRelativePath = file.webkitRelativePath;
        Object.defineProperty(f, 'path', {
            value: typeof path === 'string'
                ? path
                // If <input webkitdirectory> is set,
                // the File will have a {webkitRelativePath} property
                // https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/webkitdirectory
                : typeof webkitRelativePath === 'string' && webkitRelativePath.length > 0
                    ? webkitRelativePath
                    : file.name,
            writable: false,
            configurable: false,
            enumerable: true
        });
    }
    return f;
}
function withMimeType(file) {
    var name = file.name;
    var hasExtension = name && name.lastIndexOf('.') !== -1;
    if (hasExtension && !file.type) {
        var ext = name.split('.')
            .pop().toLowerCase();
        var type = COMMON_MIME_TYPES.get(ext);
        if (type) {
            Object.defineProperty(file, 'type', {
                value: type,
                writable: false,
                configurable: false,
                enumerable: true
            });
        }
    }
    return file;
}

var FILES_TO_IGNORE = [
    // Thumbnail cache files for macOS and Windows
    '.DS_Store',
    'Thumbs.db' // Windows
];
/**
 * Convert a DragEvent's DataTrasfer object to a list of File objects
 * NOTE: If some of the items are folders,
 * everything will be flattened and placed in the same list but the paths will be kept as a {path} property.
 * @param evt
 */
function fromEvent(evt) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, isDragEvt(evt) && evt.dataTransfer
                    ? getDataTransferFiles(evt.dataTransfer, evt.type)
                    : getInputFiles(evt)];
        });
    });
}
function isDragEvt(value) {
    return !!value.dataTransfer;
}
function getInputFiles(evt) {
    var files = isInput(evt.target)
        ? evt.target.files
            ? fromList(evt.target.files)
            : []
        : [];
    return files.map(function (file) { return toFileWithPath(file); });
}
function isInput(value) {
    return value !== null;
}
function getDataTransferFiles(dt, type) {
    return __awaiter(this, void 0, void 0, function () {
        var items, files;
        return __generator(this, function (_a) {
            switch (_a.label) {
                case 0:
                    if (!dt.items) return [3 /*break*/, 2];
                    items = fromList(dt.items)
                        .filter(function (item) { return item.kind === 'file'; });
                    // According to https://html.spec.whatwg.org/multipage/dnd.html#dndevents,
                    // only 'dragstart' and 'drop' has access to the data (source node)
                    if (type !== 'drop') {
                        return [2 /*return*/, items];
                    }
                    return [4 /*yield*/, Promise.all(items.map(toFilePromises))];
                case 1:
                    files = _a.sent();
                    return [2 /*return*/, noIgnoredFiles(flatten(files))];
                case 2: return [2 /*return*/, noIgnoredFiles(fromList(dt.files)
                        .map(function (file) { return toFileWithPath(file); }))];
            }
        });
    });
}
function noIgnoredFiles(files) {
    return files.filter(function (file) { return FILES_TO_IGNORE.indexOf(file.name) === -1; });
}
// IE11 does not support Array.from()
// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/from#Browser_compatibility
// https://developer.mozilla.org/en-US/docs/Web/API/FileList
// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItemList
function fromList(items) {
    var files = [];
    // tslint:disable: prefer-for-of
    for (var i = 0; i < items.length; i++) {
        var file = items[i];
        files.push(file);
    }
    return files;
}
// https://developer.mozilla.org/en-US/docs/Web/API/DataTransferItem
function toFilePromises(item) {
    if (typeof item.webkitGetAsEntry !== 'function') {
        return fromDataTransferItem(item);
    }
    var entry = item.webkitGetAsEntry();
    // Safari supports dropping an image node from a different window and can be retrieved using
    // the DataTransferItem.getAsFile() API
    // NOTE: FileSystemEntry.file() throws if trying to get the file
    if (entry && entry.isDirectory) {
        return fromDirEntry(entry);
    }
    return fromDataTransferItem(item);
}
function flatten(items) {
    return items.reduce(function (acc, files) { return __spread(acc, (Array.isArray(files) ? flatten(files) : [files])); }, []);
}
function fromDataTransferItem(item) {
    var file = item.getAsFile();
    if (!file) {
        return Promise.reject(item + " is not a File");
    }
    var fwp = toFileWithPath(file);
    return Promise.resolve(fwp);
}
// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemEntry
function fromEntry(entry) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
        });
    });
}
// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry
function fromDirEntry(entry) {
    var reader = entry.createReader();
    return new Promise(function (resolve, reject) {
        var entries = [];
        function readEntries() {
            var _this = this;
            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryEntry/createReader
            // https://developer.mozilla.org/en-US/docs/Web/API/FileSystemDirectoryReader/readEntries
            reader.readEntries(function (batch) { return __awaiter(_this, void 0, void 0, function () {
                var files, err_1, items;
                return __generator(this, function (_a) {
                    switch (_a.label) {
                        case 0:
                            if (!!batch.length) return [3 /*break*/, 5];
                            _a.label = 1;
                        case 1:
                            _a.trys.push([1, 3, , 4]);
                            return [4 /*yield*/, Promise.all(entries)];
                        case 2:
                            files = _a.sent();
                            resolve(files);
                            return [3 /*break*/, 4];
                        case 3:
                            err_1 = _a.sent();
                            reject(err_1);
                            return [3 /*break*/, 4];
                        case 4: return [3 /*break*/, 6];
                        case 5:
                            items = Promise.all(batch.map(fromEntry));
                            entries.push(items);
                            // Continue reading
                            readEntries();
                            _a.label = 6;
                        case 6: return [2 /*return*/];
                    }
                });
            }); }, function (err) {
                reject(err);
            });
        }
        readEntries();
    });
}
// https://developer.mozilla.org/en-US/docs/Web/API/FileSystemFileEntry
function fromFileEntry(entry) {
    return __awaiter(this, void 0, void 0, function () {
        return __generator(this, function (_a) {
            return [2 /*return*/, new Promise(function (resolve, reject) {
                    entry.file(function (file) {
                        var fwp = toFileWithPath(file, entry.fullPath);
                        resolve(fwp);
                    }, function (err) {
                        reject(err);
                    });
                })];
        });
    });
}

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function unwrapExports (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function createCommonjsModule(fn, module) {
	return module = { exports: {} }, fn(module, module.exports), module.exports;
}

var es = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

exports.default = function (file, acceptedFiles) {
  if (file && acceptedFiles) {
    var acceptedFilesArray = Array.isArray(acceptedFiles) ? acceptedFiles : acceptedFiles.split(',');
    var fileName = file.name || '';
    var mimeType = (file.type || '').toLowerCase();
    var baseMimeType = mimeType.replace(/\/.*$/, '');
    return acceptedFilesArray.some(function (type) {
      var validType = type.trim().toLowerCase();

      if (validType.charAt(0) === '.') {
        return fileName.toLowerCase().endsWith(validType);
      } else if (validType.endsWith('/*')) {
        // This is something like a image/* mime type
        return baseMimeType === validType.replace(/\/.*$/, '');
      }

      return mimeType === validType;
    });
  }

  return true;
};
});

var accepts = unwrapExports(es);

function _slicedToArray$1(arr, i) { return _arrayWithHoles$1(arr) || _iterableToArrayLimit$1(arr, i) || _unsupportedIterableToArray$1(arr, i) || _nonIterableRest$1(); }

function _nonIterableRest$1() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$1(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$1(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }

function _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit$1(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles$1(arr) { if (Array.isArray(arr)) return arr; }

var FILE_INVALID_TYPE = 'file-invalid-type';
var FILE_TOO_LARGE = 'file-too-large';
var FILE_TOO_SMALL = 'file-too-small';
var TOO_MANY_FILES = 'too-many-files'; // File Errors

var getInvalidTypeRejectionErr = function getInvalidTypeRejectionErr(accept) {
  accept = Array.isArray(accept) && accept.length === 1 ? accept[0] : accept;
  var messageSuffix = Array.isArray(accept) ? "one of ".concat(accept.join(', ')) : accept;
  return {
    code: FILE_INVALID_TYPE,
    message: "File type must be ".concat(messageSuffix)
  };
};
var getTooLargeRejectionErr = function getTooLargeRejectionErr(maxSize) {
  return {
    code: FILE_TOO_LARGE,
    message: "File is larger than ".concat(maxSize, " bytes")
  };
};
var getTooSmallRejectionErr = function getTooSmallRejectionErr(minSize) {
  return {
    code: FILE_TOO_SMALL,
    message: "File is smaller than ".concat(minSize, " bytes")
  };
};
var TOO_MANY_FILES_REJECTION = {
  code: TOO_MANY_FILES,
  message: 'Too many files'
}; // Firefox versions prior to 53 return a bogus MIME type for every file drag, so dragovers with
// that MIME type will always be accepted

function fileAccepted(file, accept) {
  var isAcceptable = file.type === 'application/x-moz-file' || accepts(file, accept);
  return [isAcceptable, isAcceptable ? null : getInvalidTypeRejectionErr(accept)];
}
function fileMatchSize(file, minSize, maxSize) {
  if (isDefined(file.size)) {
    if (isDefined(minSize) && isDefined(maxSize)) {
      if (file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
      if (file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];
    } else if (isDefined(minSize) && file.size < minSize) return [false, getTooSmallRejectionErr(minSize)];else if (isDefined(maxSize) && file.size > maxSize) return [false, getTooLargeRejectionErr(maxSize)];
  }

  return [true, null];
}

function isDefined(value) {
  return value !== undefined && value !== null;
}

function allFilesAccepted(_ref) {
  var files = _ref.files,
      accept = _ref.accept,
      minSize = _ref.minSize,
      maxSize = _ref.maxSize,
      multiple = _ref.multiple,
      maxFiles = _ref.maxFiles;

  if (!multiple && files.length > 1 || multiple && maxFiles >= 1 && files.length > maxFiles) {
    return false;
  }

  return files.every(function (file) {
    var _fileAccepted = fileAccepted(file, accept),
        _fileAccepted2 = _slicedToArray$1(_fileAccepted, 1),
        accepted = _fileAccepted2[0];

    var _fileMatchSize = fileMatchSize(file, minSize, maxSize),
        _fileMatchSize2 = _slicedToArray$1(_fileMatchSize, 1),
        sizeMatch = _fileMatchSize2[0];

    return accepted && sizeMatch;
  });
} // React's synthetic events has event.isPropagationStopped,
// but to remain compatibility with other libs (Preact) fall back
// to check event.cancelBubble

function isPropagationStopped(event) {
  if (typeof event.isPropagationStopped === 'function') {
    return event.isPropagationStopped();
  } else if (typeof event.cancelBubble !== 'undefined') {
    return event.cancelBubble;
  }

  return false;
}
function isEvtWithFiles(event) {
  if (!event.dataTransfer) {
    return !!event.target && !!event.target.files;
  } // https://developer.mozilla.org/en-US/docs/Web/API/DataTransfer/types
  // https://developer.mozilla.org/en-US/docs/Web/API/HTML_Drag_and_Drop_API/Recommended_drag_types#file


  return Array.prototype.some.call(event.dataTransfer.types, function (type) {
    return type === 'Files' || type === 'application/x-moz-file';
  });
}

function onDocumentDragOver(event) {
  event.preventDefault();
}

function isIe(userAgent) {
  return userAgent.indexOf('MSIE') !== -1 || userAgent.indexOf('Trident/') !== -1;
}

function isEdge(userAgent) {
  return userAgent.indexOf('Edge/') !== -1;
}

function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
/**
 * This is intended to be used to compose event handlers
 * They are executed in order until one of them calls `event.isPropagationStopped()`.
 * Note that the check is done on the first invoke too,
 * meaning that if propagation was stopped before invoking the fns,
 * no handlers will be executed.
 *
 * @param {Function} fns the event hanlder functions
 * @return {Function} the event handler to add to an element
 */

function composeEventHandlers() {
  for (var _len = arguments.length, fns = new Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }

  return function (event) {
    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }

    return fns.some(function (fn) {
      if (!isPropagationStopped(event) && fn) {
        fn.apply(void 0, [event].concat(args));
      }

      return isPropagationStopped(event);
    });
  };
}

function _toConsumableArray$1(arr) { return _arrayWithoutHoles$1(arr) || _iterableToArray$1(arr) || _unsupportedIterableToArray$2(arr) || _nonIterableSpread$1(); }

function _nonIterableSpread$1() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray$1(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles$1(arr) { if (Array.isArray(arr)) return _arrayLikeToArray$2(arr); }

function _slicedToArray$2(arr, i) { return _arrayWithHoles$2(arr) || _iterableToArrayLimit$2(arr, i) || _unsupportedIterableToArray$2(arr, i) || _nonIterableRest$2(); }

function _nonIterableRest$2() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray$2(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray$2(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }

function _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit$2(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles$2(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty$1(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty$1(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
/**
 * Convenience wrapper component for the `useDropzone` hook
 *
 * ```jsx
 * <Dropzone>
 *   {({getRootProps, getInputProps}) => (
 *     <div {...getRootProps()}>
 *       <input {...getInputProps()} />
 *       <p>Drag 'n' drop some files here, or click to select files</p>
 *     </div>
 *   )}
 * </Dropzone>
 * ```
 */

var Dropzone = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var children = _ref.children,
      params = _objectWithoutProperties(_ref, ["children"]);

  var _useDropzone = useDropzone(params),
      open = _useDropzone.open,
      props = _objectWithoutProperties(_useDropzone, ["open"]);

  React.useImperativeHandle(ref, function () {
    return {
      open: open
    };
  }, [open]); // TODO: Figure out why react-styleguidist cannot create docs if we don't return a jsx element

  return /*#__PURE__*/React__default['default'].createElement(React.Fragment, null, children(_objectSpread(_objectSpread({}, props), {}, {
    open: open
  })));
});
Dropzone.displayName = 'Dropzone'; // Add default props for react-docgen

var defaultProps = {
  disabled: false,
  getFilesFromEvent: fromEvent,
  maxSize: Infinity,
  minSize: 0,
  multiple: true,
  maxFiles: 0,
  preventDropOnDocument: true,
  noClick: false,
  noKeyboard: false,
  noDrag: false,
  noDragEventsBubbling: false
};
Dropzone.defaultProps = defaultProps;
Dropzone.propTypes = {
  /**
   * Render function that exposes the dropzone state and prop getter fns
   *
   * @param {object} params
   * @param {Function} params.getRootProps Returns the props you should apply to the root drop container you render
   * @param {Function} params.getInputProps Returns the props you should apply to hidden file input you render
   * @param {Function} params.open Open the native file selection dialog
   * @param {boolean} params.isFocused Dropzone area is in focus
   * @param {boolean} params.isFileDialogActive File dialog is opened
   * @param {boolean} params.isDragActive Active drag is in progress
   * @param {boolean} params.isDragAccept Dragged files are accepted
   * @param {boolean} params.isDragReject Some dragged files are rejected
   * @param {File[]} params.draggedFiles Files in active drag
   * @param {File[]} params.acceptedFiles Accepted files
   * @param {FileRejection[]} params.fileRejections Rejected files and why they were rejected
   */
  children: PropTypes__default['default'].func,

  /**
   * Set accepted file types.
   * See https://github.com/okonet/attr-accept for more information.
   * Keep in mind that mime type determination is not reliable across platforms. CSV files,
   * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
   * Windows. In some cases there might not be a mime type set at all.
   * See: https://github.com/react-dropzone/react-dropzone/issues/276
   */
  accept: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].arrayOf(PropTypes__default['default'].string)]),

  /**
   * Allow drag 'n' drop (or selection from the file dialog) of multiple files
   */
  multiple: PropTypes__default['default'].bool,

  /**
   * If false, allow dropped items to take over the current browser window
   */
  preventDropOnDocument: PropTypes__default['default'].bool,

  /**
   * If true, disables click to open the native file selection dialog
   */
  noClick: PropTypes__default['default'].bool,

  /**
   * If true, disables SPACE/ENTER to open the native file selection dialog.
   * Note that it also stops tracking the focus state.
   */
  noKeyboard: PropTypes__default['default'].bool,

  /**
   * If true, disables drag 'n' drop
   */
  noDrag: PropTypes__default['default'].bool,

  /**
   * If true, stops drag event propagation to parents
   */
  noDragEventsBubbling: PropTypes__default['default'].bool,

  /**
   * Minimum file size (in bytes)
   */
  minSize: PropTypes__default['default'].number,

  /**
   * Maximum file size (in bytes)
   */
  maxSize: PropTypes__default['default'].number,

  /**
   * Maximum accepted number of files
   * The default value is 0 which means there is no limitation to how many files are accepted.
   */
  maxFiles: PropTypes__default['default'].number,

  /**
   * Enable/disable the dropzone
   */
  disabled: PropTypes__default['default'].bool,

  /**
   * Use this to provide a custom file aggregator
   *
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  getFilesFromEvent: PropTypes__default['default'].func,

  /**
   * Cb for when closing the file dialog with no selection
   */
  onFileDialogCancel: PropTypes__default['default'].func,

  /**
   * Cb for when the `dragenter` event occurs.
   *
   * @param {DragEvent} event
   */
  onDragEnter: PropTypes__default['default'].func,

  /**
   * Cb for when the `dragleave` event occurs
   *
   * @param {DragEvent} event
   */
  onDragLeave: PropTypes__default['default'].func,

  /**
   * Cb for when the `dragover` event occurs
   *
   * @param {DragEvent} event
   */
  onDragOver: PropTypes__default['default'].func,

  /**
   * Cb for when the `drop` event occurs.
   * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
   *
   * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
   * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
   * If `multiple` is set to false and additional files are dropped,
   * all files besides the first will be rejected.
   * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
   *
   * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
   * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
   *
   * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
   * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
   *
   * ```js
   * function onDrop(acceptedFiles) {
   *   const req = request.post('/upload')
   *   acceptedFiles.forEach(file => {
   *     req.attach(file.name, file)
   *   })
   *   req.end(callback)
   * }
   * ```
   *
   * @param {File[]} acceptedFiles
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
   */
  onDrop: PropTypes__default['default'].func,

  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are accepted, this callback is not invoked.
   *
   * @param {File[]} files
   * @param {(DragEvent|Event)} event
   */
  onDropAccepted: PropTypes__default['default'].func,

  /**
   * Cb for when the `drop` event occurs.
   * Note that if no files are rejected, this callback is not invoked.
   *
   * @param {FileRejection[]} fileRejections
   * @param {(DragEvent|Event)} event
   */
  onDropRejected: PropTypes__default['default'].func
};
/**
 * A function that is invoked for the `dragenter`,
 * `dragover` and `dragleave` events.
 * It is not invoked if the items are not files (such as link, text, etc.).
 *
 * @callback dragCb
 * @param {DragEvent} event
 */

/**
 * A function that is invoked for the `drop` or input change event.
 * It is not invoked if the items are not files (such as link, text, etc.).
 *
 * @callback dropCb
 * @param {File[]} acceptedFiles List of accepted files
 * @param {FileRejection[]} fileRejections List of rejected files and why they were rejected
 * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
 */

/**
 * A function that is invoked for the `drop` or input change event.
 * It is not invoked if the items are files (such as link, text, etc.).
 *
 * @callback dropAcceptedCb
 * @param {File[]} files List of accepted files that meet the given criteria
 * (`accept`, `multiple`, `minSize`, `maxSize`)
 * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
 */

/**
 * A function that is invoked for the `drop` or input change event.
 *
 * @callback dropRejectedCb
 * @param {File[]} files List of rejected files that do not meet the given criteria
 * (`accept`, `multiple`, `minSize`, `maxSize`)
 * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
 */

/**
 * A function that is used aggregate files,
 * in a asynchronous fashion, from drag or input change events.
 *
 * @callback getFilesFromEvent
 * @param {(DragEvent|Event)} event A drag event or input change event (if files were selected via the file dialog)
 * @returns {(File[]|Promise<File[]>)}
 */

/**
 * An object with the current dropzone state and some helper functions.
 *
 * @typedef {object} DropzoneState
 * @property {Function} getRootProps Returns the props you should apply to the root drop container you render
 * @property {Function} getInputProps Returns the props you should apply to hidden file input you render
 * @property {Function} open Open the native file selection dialog
 * @property {boolean} isFocused Dropzone area is in focus
 * @property {boolean} isFileDialogActive File dialog is opened
 * @property {boolean} isDragActive Active drag is in progress
 * @property {boolean} isDragAccept Dragged files are accepted
 * @property {boolean} isDragReject Some dragged files are rejected
 * @property {File[]} draggedFiles Files in active drag
 * @property {File[]} acceptedFiles Accepted files
 * @property {FileRejection[]} fileRejections Rejected files and why they were rejected
 */

var initialState = {
  isFocused: false,
  isFileDialogActive: false,
  isDragActive: false,
  isDragAccept: false,
  isDragReject: false,
  draggedFiles: [],
  acceptedFiles: [],
  fileRejections: []
};
/**
 * A React hook that creates a drag 'n' drop area.
 *
 * ```jsx
 * function MyDropzone(props) {
 *   const {getRootProps, getInputProps} = useDropzone({
 *     onDrop: acceptedFiles => {
 *       // do something with the File objects, e.g. upload to some server
 *     }
 *   });
 *   return (
 *     <div {...getRootProps()}>
 *       <input {...getInputProps()} />
 *       <p>Drag and drop some files here, or click to select files</p>
 *     </div>
 *   )
 * }
 * ```
 *
 * @function useDropzone
 *
 * @param {object} props
 * @param {string|string[]} [props.accept] Set accepted file types.
 * See https://github.com/okonet/attr-accept for more information.
 * Keep in mind that mime type determination is not reliable across platforms. CSV files,
 * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
 * Windows. In some cases there might not be a mime type set at all.
 * See: https://github.com/react-dropzone/react-dropzone/issues/276
 * @param {boolean} [props.multiple=true] Allow drag 'n' drop (or selection from the file dialog) of multiple files
 * @param {boolean} [props.preventDropOnDocument=true] If false, allow dropped items to take over the current browser window
 * @param {boolean} [props.noClick=false] If true, disables click to open the native file selection dialog
 * @param {boolean} [props.noKeyboard=false] If true, disables SPACE/ENTER to open the native file selection dialog.
 * Note that it also stops tracking the focus state.
 * @param {boolean} [props.noDrag=false] If true, disables drag 'n' drop
 * @param {boolean} [props.noDragEventsBubbling=false] If true, stops drag event propagation to parents
 * @param {number} [props.minSize=0] Minimum file size (in bytes)
 * @param {number} [props.maxSize=Infinity] Maximum file size (in bytes)
 * @param {boolean} [props.disabled=false] Enable/disable the dropzone
 * @param {getFilesFromEvent} [props.getFilesFromEvent] Use this to provide a custom file aggregator
 * @param {Function} [props.onFileDialogCancel] Cb for when closing the file dialog with no selection
 * @param {dragCb} [props.onDragEnter] Cb for when the `dragenter` event occurs.
 * @param {dragCb} [props.onDragLeave] Cb for when the `dragleave` event occurs
 * @param {dragCb} [props.onDragOver] Cb for when the `dragover` event occurs
 * @param {dropCb} [props.onDrop] Cb for when the `drop` event occurs.
 * Note that this callback is invoked after the `getFilesFromEvent` callback is done.
 *
 * Files are accepted or rejected based on the `accept`, `multiple`, `minSize` and `maxSize` props.
 * `accept` must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
 * If `multiple` is set to false and additional files are dropped,
 * all files besides the first will be rejected.
 * Any file which does not have a size in the [`minSize`, `maxSize`] range, will be rejected as well.
 *
 * Note that the `onDrop` callback will always be invoked regardless if the dropped files were accepted or rejected.
 * If you'd like to react to a specific scenario, use the `onDropAccepted`/`onDropRejected` props.
 *
 * `onDrop` will provide you with an array of [File](https://developer.mozilla.org/en-US/docs/Web/API/File) objects which you can then process and send to a server.
 * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
 *
 * ```js
 * function onDrop(acceptedFiles) {
 *   const req = request.post('/upload')
 *   acceptedFiles.forEach(file => {
 *     req.attach(file.name, file)
 *   })
 *   req.end(callback)
 * }
 * ```
 * @param {dropAcceptedCb} [props.onDropAccepted]
 * @param {dropRejectedCb} [props.onDropRejected]
 *
 * @returns {DropzoneState}
 */

function useDropzone() {
  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

  var _defaultProps$options = _objectSpread(_objectSpread({}, defaultProps), options),
      accept = _defaultProps$options.accept,
      disabled = _defaultProps$options.disabled,
      getFilesFromEvent = _defaultProps$options.getFilesFromEvent,
      maxSize = _defaultProps$options.maxSize,
      minSize = _defaultProps$options.minSize,
      multiple = _defaultProps$options.multiple,
      maxFiles = _defaultProps$options.maxFiles,
      onDragEnter = _defaultProps$options.onDragEnter,
      onDragLeave = _defaultProps$options.onDragLeave,
      onDragOver = _defaultProps$options.onDragOver,
      onDrop = _defaultProps$options.onDrop,
      onDropAccepted = _defaultProps$options.onDropAccepted,
      onDropRejected = _defaultProps$options.onDropRejected,
      onFileDialogCancel = _defaultProps$options.onFileDialogCancel,
      preventDropOnDocument = _defaultProps$options.preventDropOnDocument,
      noClick = _defaultProps$options.noClick,
      noKeyboard = _defaultProps$options.noKeyboard,
      noDrag = _defaultProps$options.noDrag,
      noDragEventsBubbling = _defaultProps$options.noDragEventsBubbling;

  var rootRef = React.useRef(null);
  var inputRef = React.useRef(null);

  var _useReducer = React.useReducer(reducer, initialState),
      _useReducer2 = _slicedToArray$2(_useReducer, 2),
      state = _useReducer2[0],
      dispatch = _useReducer2[1];

  var isFocused = state.isFocused,
      isFileDialogActive = state.isFileDialogActive,
      draggedFiles = state.draggedFiles; // Fn for opening the file dialog programmatically

  var openFileDialog = React.useCallback(function () {
    if (inputRef.current) {
      dispatch({
        type: 'openDialog'
      });
      inputRef.current.value = null;
      inputRef.current.click();
    }
  }, [dispatch]); // Update file dialog active state when the window is focused on

  var onWindowFocus = function onWindowFocus() {
    // Execute the timeout only if the file dialog is opened in the browser
    if (isFileDialogActive) {
      setTimeout(function () {
        if (inputRef.current) {
          var files = inputRef.current.files;

          if (!files.length) {
            dispatch({
              type: 'closeDialog'
            });

            if (typeof onFileDialogCancel === 'function') {
              onFileDialogCancel();
            }
          }
        }
      }, 300);
    }
  };

  React.useEffect(function () {
    window.addEventListener('focus', onWindowFocus, false);
    return function () {
      window.removeEventListener('focus', onWindowFocus, false);
    };
  }, [inputRef, isFileDialogActive, onFileDialogCancel]); // Cb to open the file dialog when SPACE/ENTER occurs on the dropzone

  var onKeyDownCb = React.useCallback(function (event) {
    // Ignore keyboard events bubbling up the DOM tree
    if (!rootRef.current || !rootRef.current.isEqualNode(event.target)) {
      return;
    }

    if (event.keyCode === 32 || event.keyCode === 13) {
      event.preventDefault();
      openFileDialog();
    }
  }, [rootRef, inputRef]); // Update focus state for the dropzone

  var onFocusCb = React.useCallback(function () {
    dispatch({
      type: 'focus'
    });
  }, []);
  var onBlurCb = React.useCallback(function () {
    dispatch({
      type: 'blur'
    });
  }, []); // Cb to open the file dialog when click occurs on the dropzone

  var onClickCb = React.useCallback(function () {
    if (noClick) {
      return;
    } // In IE11/Edge the file-browser dialog is blocking, therefore, use setTimeout()
    // to ensure React can handle state changes
    // See: https://github.com/react-dropzone/react-dropzone/issues/450


    if (isIeOrEdge()) {
      setTimeout(openFileDialog, 0);
    } else {
      openFileDialog();
    }
  }, [inputRef, noClick]);
  var dragTargetsRef = React.useRef([]);

  var onDocumentDrop = function onDocumentDrop(event) {
    if (rootRef.current && rootRef.current.contains(event.target)) {
      // If we intercepted an event for our instance, let it propagate down to the instance's onDrop handler
      return;
    }

    event.preventDefault();
    dragTargetsRef.current = [];
  };

  React.useEffect(function () {
    if (preventDropOnDocument) {
      document.addEventListener('dragover', onDocumentDragOver, false);
      document.addEventListener('drop', onDocumentDrop, false);
    }

    return function () {
      if (preventDropOnDocument) {
        document.removeEventListener('dragover', onDocumentDragOver);
        document.removeEventListener('drop', onDocumentDrop);
      }
    };
  }, [rootRef, preventDropOnDocument]);
  var onDragEnterCb = React.useCallback(function (event) {
    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done

    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [].concat(_toConsumableArray$1(dragTargetsRef.current), [event.target]);

    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function (draggedFiles) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }

        dispatch({
          draggedFiles: draggedFiles,
          isDragActive: true,
          type: 'setDraggedFiles'
        });

        if (onDragEnter) {
          onDragEnter(event);
        }
      });
    }
  }, [getFilesFromEvent, onDragEnter, noDragEventsBubbling]);
  var onDragOverCb = React.useCallback(function (event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event);

    if (event.dataTransfer) {
      try {
        event.dataTransfer.dropEffect = 'copy';
      } catch (_unused) {}
      /* eslint-disable-line no-empty */

    }

    if (isEvtWithFiles(event) && onDragOver) {
      onDragOver(event);
    }

    return false;
  }, [onDragOver, noDragEventsBubbling]);
  var onDragLeaveCb = React.useCallback(function (event) {
    event.preventDefault();
    event.persist();
    stopPropagation(event); // Only deactivate once the dropzone and all children have been left

    var targets = dragTargetsRef.current.filter(function (target) {
      return rootRef.current && rootRef.current.contains(target);
    }); // Make sure to remove a target present multiple times only once
    // (Firefox may fire dragenter/dragleave multiple times on the same element)

    var targetIdx = targets.indexOf(event.target);

    if (targetIdx !== -1) {
      targets.splice(targetIdx, 1);
    }

    dragTargetsRef.current = targets;

    if (targets.length > 0) {
      return;
    }

    dispatch({
      isDragActive: false,
      type: 'setDraggedFiles',
      draggedFiles: []
    });

    if (isEvtWithFiles(event) && onDragLeave) {
      onDragLeave(event);
    }
  }, [rootRef, onDragLeave, noDragEventsBubbling]);
  var onDropCb = React.useCallback(function (event) {
    event.preventDefault(); // Persist here because we need the event later after getFilesFromEvent() is done

    event.persist();
    stopPropagation(event);
    dragTargetsRef.current = [];

    if (isEvtWithFiles(event)) {
      Promise.resolve(getFilesFromEvent(event)).then(function (files) {
        if (isPropagationStopped(event) && !noDragEventsBubbling) {
          return;
        }

        var acceptedFiles = [];
        var fileRejections = [];
        files.forEach(function (file) {
          var _fileAccepted = fileAccepted(file, accept),
              _fileAccepted2 = _slicedToArray$2(_fileAccepted, 2),
              accepted = _fileAccepted2[0],
              acceptError = _fileAccepted2[1];

          var _fileMatchSize = fileMatchSize(file, minSize, maxSize),
              _fileMatchSize2 = _slicedToArray$2(_fileMatchSize, 2),
              sizeMatch = _fileMatchSize2[0],
              sizeError = _fileMatchSize2[1];

          if (accepted && sizeMatch) {
            acceptedFiles.push(file);
          } else {
            var errors = [acceptError, sizeError].filter(function (e) {
              return e;
            });
            fileRejections.push({
              file: file,
              errors: errors
            });
          }
        });

        if (!multiple && acceptedFiles.length > 1 || multiple && maxFiles >= 1 && acceptedFiles.length > maxFiles) {
          // Reject everything and empty accepted files
          acceptedFiles.forEach(function (file) {
            fileRejections.push({
              file: file,
              errors: [TOO_MANY_FILES_REJECTION]
            });
          });
          acceptedFiles.splice(0);
        }

        dispatch({
          acceptedFiles: acceptedFiles,
          fileRejections: fileRejections,
          type: 'setFiles'
        });

        if (onDrop) {
          onDrop(acceptedFiles, fileRejections, event);
        }

        if (fileRejections.length > 0 && onDropRejected) {
          onDropRejected(fileRejections, event);
        }

        if (acceptedFiles.length > 0 && onDropAccepted) {
          onDropAccepted(acceptedFiles, event);
        }
      });
    }

    dispatch({
      type: 'reset'
    });
  }, [multiple, accept, minSize, maxSize, maxFiles, getFilesFromEvent, onDrop, onDropAccepted, onDropRejected, noDragEventsBubbling]);

  var composeHandler = function composeHandler(fn) {
    return disabled ? null : fn;
  };

  var composeKeyboardHandler = function composeKeyboardHandler(fn) {
    return noKeyboard ? null : composeHandler(fn);
  };

  var composeDragHandler = function composeDragHandler(fn) {
    return noDrag ? null : composeHandler(fn);
  };

  var stopPropagation = function stopPropagation(event) {
    if (noDragEventsBubbling) {
      event.stopPropagation();
    }
  };

  var getRootProps = React.useMemo(function () {
    return function () {
      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref2$refKey = _ref2.refKey,
          refKey = _ref2$refKey === void 0 ? 'ref' : _ref2$refKey,
          onKeyDown = _ref2.onKeyDown,
          onFocus = _ref2.onFocus,
          onBlur = _ref2.onBlur,
          onClick = _ref2.onClick,
          onDragEnter = _ref2.onDragEnter,
          onDragOver = _ref2.onDragOver,
          onDragLeave = _ref2.onDragLeave,
          onDrop = _ref2.onDrop,
          rest = _objectWithoutProperties(_ref2, ["refKey", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"]);

      return _objectSpread(_objectSpread(_defineProperty$1({
        onKeyDown: composeKeyboardHandler(composeEventHandlers(onKeyDown, onKeyDownCb)),
        onFocus: composeKeyboardHandler(composeEventHandlers(onFocus, onFocusCb)),
        onBlur: composeKeyboardHandler(composeEventHandlers(onBlur, onBlurCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onClickCb)),
        onDragEnter: composeDragHandler(composeEventHandlers(onDragEnter, onDragEnterCb)),
        onDragOver: composeDragHandler(composeEventHandlers(onDragOver, onDragOverCb)),
        onDragLeave: composeDragHandler(composeEventHandlers(onDragLeave, onDragLeaveCb)),
        onDrop: composeDragHandler(composeEventHandlers(onDrop, onDropCb))
      }, refKey, rootRef), !disabled && !noKeyboard ? {
        tabIndex: 0
      } : {}), rest);
    };
  }, [rootRef, onKeyDownCb, onFocusCb, onBlurCb, onClickCb, onDragEnterCb, onDragOverCb, onDragLeaveCb, onDropCb, noKeyboard, noDrag, disabled]);
  var onInputElementClick = React.useCallback(function (event) {
    event.stopPropagation();
  }, []);
  var getInputProps = React.useMemo(function () {
    return function () {
      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
          _ref3$refKey = _ref3.refKey,
          refKey = _ref3$refKey === void 0 ? 'ref' : _ref3$refKey,
          onChange = _ref3.onChange,
          onClick = _ref3.onClick,
          rest = _objectWithoutProperties(_ref3, ["refKey", "onChange", "onClick"]);

      var inputProps = _defineProperty$1({
        accept: accept,
        multiple: multiple,
        type: 'file',
        style: {
          display: 'none'
        },
        onChange: composeHandler(composeEventHandlers(onChange, onDropCb)),
        onClick: composeHandler(composeEventHandlers(onClick, onInputElementClick)),
        autoComplete: 'off',
        tabIndex: -1
      }, refKey, inputRef);

      return _objectSpread(_objectSpread({}, inputProps), rest);
    };
  }, [inputRef, accept, multiple, onDropCb, disabled]);
  var fileCount = draggedFiles.length;
  var isDragAccept = fileCount > 0 && allFilesAccepted({
    files: draggedFiles,
    accept: accept,
    minSize: minSize,
    maxSize: maxSize,
    multiple: multiple,
    maxFiles: maxFiles
  });
  var isDragReject = fileCount > 0 && !isDragAccept;
  return _objectSpread(_objectSpread({}, state), {}, {
    isDragAccept: isDragAccept,
    isDragReject: isDragReject,
    isFocused: isFocused && !disabled,
    getRootProps: getRootProps,
    getInputProps: getInputProps,
    rootRef: rootRef,
    inputRef: inputRef,
    open: composeHandler(openFileDialog)
  });
}

function reducer(state, action) {
  /* istanbul ignore next */
  switch (action.type) {
    case 'focus':
      return _objectSpread(_objectSpread({}, state), {}, {
        isFocused: true
      });

    case 'blur':
      return _objectSpread(_objectSpread({}, state), {}, {
        isFocused: false
      });

    case 'openDialog':
      return _objectSpread(_objectSpread({}, state), {}, {
        isFileDialogActive: true
      });

    case 'closeDialog':
      return _objectSpread(_objectSpread({}, state), {}, {
        isFileDialogActive: false
      });

    case 'setDraggedFiles':
      /* eslint no-case-declarations: 0 */
      var isDragActive = action.isDragActive,
          draggedFiles = action.draggedFiles;
      return _objectSpread(_objectSpread({}, state), {}, {
        draggedFiles: draggedFiles,
        isDragActive: isDragActive
      });

    case 'setFiles':
      return _objectSpread(_objectSpread({}, state), {}, {
        acceptedFiles: action.acceptedFiles,
        fileRejections: action.fileRejections
      });

    case 'reset':
      return _objectSpread(_objectSpread({}, state), {}, {
        isFileDialogActive: false,
        isDragActive: false,
        draggedFiles: [],
        acceptedFiles: [],
        fileRejections: []
      });

    default:
      return state;
  }
}

var FileSelectButton = function FileSelectButton(props) {
  var onSelect = props.onSelect,
      children = props.children,
      accept = props.accept,
      className = props.className,
      busy = props.busy,
      disabled = props.disabled,
      multiple = props.multiple;
  /**
   * Callback when files are selected
   * @private
   */

  var handleFilesSelected = function handleFilesSelected(acceptedFiles) {
    onSelect && onSelect(acceptedFiles);
  };

  return /*#__PURE__*/React__default['default'].createElement(Dropzone, {
    onDrop: handleFilesSelected,
    multiple: multiple,
    accept: accept,
    disableClick: true,
    disabled: busy || disabled
  }, function (_ref) {
    var getRootProps = _ref.getRootProps,
        getInputProps = _ref.getInputProps,
        open = _ref.open;
    return /*#__PURE__*/React__default['default'].createElement("div", _extends({
      className: classNames__default['default'](styles$9.base, className)
    }, getRootProps()), /*#__PURE__*/React__default['default'].createElement("input", _extends({
      className: styles$9.input
    }, getInputProps())), /*#__PURE__*/React__default['default'].createElement(Button, _extends({
      onClick: function onClick() {
        return open();
      }
    }, props), children));
  });
};
FileSelectButton.defaultProps = {
  accept: "image/*",
  multiple: false
};
FileSelectButton.propTypes = {
  /**
   * Select file callback
   */
  onSelect: PropTypes__default['default'].func,

  /**
   * Accept MIME-types
   */
  accept: PropTypes__default['default'].string,

  /**
   * Select multiple files
   */
  multiple: PropTypes__default['default'].bool
};

var styles$a = undefined;

var MenuButton = function MenuButton(props) {
  return /*#__PURE__*/React__default['default'].createElement(Clickable, _extends({}, props, {
    className: styles$a.base
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$a.wrapper
  }, /*#__PURE__*/React__default['default'].createElement("span", null), /*#__PURE__*/React__default['default'].createElement("span", null), /*#__PURE__*/React__default['default'].createElement("span", null)));
};

var styles$b = undefined;

var Card = function Card(_ref) {
  var className = _ref.className,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$b.base, className)
  }, children);
};
Card.propTypes = {
  /**
   * Custom class name
   */
  className: PropTypes__default['default'].string
};

var styles$c = undefined;

var CardContent = function CardContent(props) {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$c.base
  }, props.children);
};

var styles$d = undefined;

var CardTitle = function CardTitle(props) {
  var title = props.title,
      actions = props.actions,
      children = props.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$d.base
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$d.title
  }, title), children ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$d.addons
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$d.wrapper
  }, children)) : null, actions && actions.length ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$d.actions
  }, actions.map(function (action, index) {
    return /*#__PURE__*/React__default['default'].createElement(Clickable, {
      key: "CardTitleAction-".concat(index),
      onClick: action.onClick,
      className: styles$d.action
    }, /*#__PURE__*/React__default['default'].createElement(Icon, {
      name: action.icon || 'ligtning'
    }));
  })) : null);
};
CardTitle.propTypes = {
  /**
   * Addons to be displayed
   */
  children: PropTypes__default['default'].object,

  /**
   * Title to be displayed
   */
  title: PropTypes__default['default'].string,

  /**
   * Actions to be displayed
   */
  actions: PropTypes__default['default'].array
};

var styles$e = undefined;

var CardUserHead = function CardUserHead(props) {
  var picture = props.picture,
      name = props.name,
      email = props.email,
      alt = props.alt;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.base
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.content
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.image
  }, picture ? /*#__PURE__*/React__default['default'].createElement("img", {
    alt: alt,
    src: picture
  }) : /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.placeholder
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: "user"
  }))), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.details
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.name
  }, name), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.email
  }, email))), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$e.background
  }, /*#__PURE__*/React__default['default'].createElement("img", {
    alt: alt,
    src: picture
  })));
};
CardUserHead.propTypes = {
  /**
   * User image URL
   */
  picture: PropTypes__default['default'].string,

  /**
   * Name of user
   */
  name: PropTypes__default['default'].string,

  /**
   * Email of user
   */
  email: PropTypes__default['default'].string
};

var styles$f = undefined;

var Checkbox = function Checkbox(_ref) {
  var _classNames;

  var checked = _ref.checked,
      onChange = _ref.onChange,
      className = _ref.className,
      children = _ref.children,
      embedded = _ref.embedded;

  var _useState = React.useState("cb-".concat(Math.round(Math.random() * 100000))),
      _useState2 = _slicedToArray(_useState, 1),
      uniqueId = _useState2[0];

  var toggleChecked = function toggleChecked(e) {
    e.stopPropagation();
    onChange && onChange(!checked);
  }; // Base class


  var baseClasses = classNames__default['default'](styles$f.base, (_classNames = {}, _defineProperty(_classNames, styles$f.isChecked, checked), _defineProperty(_classNames, styles$f.embedded, embedded), _classNames), className);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement("input", {
    id: uniqueId,
    type: "checkbox",
    checked: checked,
    onChange: toggleChecked
  }), /*#__PURE__*/React__default['default'].createElement("label", {
    htmlFor: uniqueId
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$f.check
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: "check",
    className: styles$f.icon
  })), children ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$f.label
  }, children) : null));
};
Checkbox.propTypes = {
  /**
   * Value to indicate weather it's checked or not
   */
  checked: PropTypes__default['default'].bool,

  /**
   * Toggle checked value callback
   */
  onChange: PropTypes__default['default'].func
};

var styles$g = undefined;

var Form = function Form(_ref) {
  var onSubmit = _ref.onSubmit,
      children = _ref.children,
      className = _ref.className,
      responsive = _ref.responsive;

  /**
   * Handle form submit
   * @private
   */
  var handleSubmit = function handleSubmit(event) {
    event.preventDefault();
    onSubmit && onSubmit(event);
  };

  var baseClasses = classNames__default['default'](styles$g.base, className);
  return /*#__PURE__*/React__default['default'].createElement("form", {
    className: baseClasses,
    onSubmit: handleSubmit
  }, React__default['default'].Children.map(children, function (child) {
    return child ? /*#__PURE__*/React__default['default'].cloneElement(child, {
      responsive: responsive
    }) : null;
  }));
};
Form.defaultProps = {
  responsive: false
};
Form.propTypes = {
  /**
   * Submit form handler
   */
  onSubmit: PropTypes__default['default'].func,

  /**
   * Display form items horizontally on large screens
   */
  responsive: PropTypes__default['default'].bool
};

var styles$h = undefined;

var FormItem = function FormItem(_ref) {
  var _classNames;

  var children = _ref.children,
      label = _ref.label,
      error = _ref.error,
      className = _ref.className,
      info = _ref.info,
      responsive = _ref.responsive;
  // Classes
  var baseClasses = classNames__default['default'](styles$h.base, (_classNames = {}, _defineProperty(_classNames, styles$h.responsive, responsive), _defineProperty(_classNames, styles$h.error, error), _classNames), className);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement(Row, {
    gutter: ["regular", "none"]
  }, /*#__PURE__*/React__default['default'].createElement(Col, {
    lg: responsive ? 6 : 24,
    className: styles$h.label
  }, label ? /*#__PURE__*/React__default['default'].createElement("label", null, label, /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$h.colon
  }, ":")) : /*#__PURE__*/React__default['default'].createElement("span", null)), /*#__PURE__*/React__default['default'].createElement(Col, {
    lg: responsive ? 12 : 24,
    className: styles$h.field
  }, React__default['default'].Children.map(children, function (child) {
    // Check if null
    if (!child) {
      return null;
    }

    return /*#__PURE__*/React__default['default'].cloneElement(child, {
      error: error
    });
  }), info || error && typeof error === "string" ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$h.infoText
  }, info, " ", error) : null)));
};
FormItem.propTypes = {
  /**
   * Form item label
   */
  label: PropTypes__default['default'].string,

  /**
   * Visual error on field
   */
  error: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].bool]),

  /**
   * Supply extra info to the form item
   */
  info: PropTypes__default['default'].string
};

var styles$i = undefined;

var Input = function Input(props) {
  var _classNames;

  var value = props.value,
      onPrependClick = props.onPrependClick,
      onAppendClick = props.onAppendClick,
      size = props.size,
      icon = props.icon,
      error = props.error,
      prepend = props.prepend,
      append = props.append,
      className = props.className,
      counter = props.counter,
      disabled = props.disabled; // Base classes

  var baseClasses = classNames__default['default'](styles$i.base, (_classNames = {}, _defineProperty(_classNames, styles$i.sizeSmall, size === "small"), _defineProperty(_classNames, styles$i.sizeBig, size === "big"), _defineProperty(_classNames, styles$i.error, error), _defineProperty(_classNames, styles$i.inputIcon, icon), _defineProperty(_classNames, styles$i.inputPrepend, prepend), _defineProperty(_classNames, styles$i.inputAppend, append), _classNames), className);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement(IconPart, {
    icon: icon
  }), /*#__PURE__*/React__default['default'].createElement(PrependPart, {
    prepend: prepend,
    onPrependClick: onPrependClick,
    disabled: disabled
  }), /*#__PURE__*/React__default['default'].createElement(InputPart, props), /*#__PURE__*/React__default['default'].createElement(AppendPart, {
    append: append,
    onAppendClick: onAppendClick
  }), /*#__PURE__*/React__default['default'].createElement(CounterPart, {
    counter: counter,
    value: value
  }));
};
/**
 * PART:
 * Icon
 */

var IconPart = function IconPart(_ref) {
  var icon = _ref.icon;
  return icon ? /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: icon,
    className: styles$i.icon
  }) : null;
};
/**
 * PART:
 * Prepend
 */


var PrependPart = function PrependPart(_ref2) {
  var _classNames2;

  var prepend = _ref2.prepend,
      onPrependClick = _ref2.onPrependClick,
      disabled = _ref2.disabled;
  return prepend ? /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: classNames__default['default'](styles$i.prepend, (_classNames2 = {}, _defineProperty(_classNames2, styles$i.clickable, !disabled && onPrependClick), _defineProperty(_classNames2, styles$i.disabled, disabled), _classNames2)),
    onClick: function onClick(e) {
      return !disabled && onPrependClick ? onPrependClick(e) : null;
    }
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$i.content
  }, prepend)) : null;
};
/**
 * PART:
 * Input
 */


var InputPart = function InputPart(props) {
  var placeholder = props.placeholder,
      inputClassName = props.inputClassName,
      disabled = props.disabled,
      maxLength = props.maxLength,
      max = props.max,
      min = props.min,
      step = props.step,
      value = props.value,
      type = props.type,
      onClick = props.onClick,
      onFocus = props.onFocus,
      onBlur = props.onBlur,
      onChange = props.onChange,
      onEnter = props.onEnter;
  /**
   * When input changes
   * @param e
   * @private
   */

  var handleChange = function handleChange(e) {
    // Check id exceeding max length
    if (maxLength && e.target.value.length > maxLength) {
      e.target.value = e.target.value.slice(0, maxLength);
    } // Callback


    onChange && onChange(e.target.value);
  };
  /**
   * Handle key press
   * @private
   */


  var handleKeyPress = function handleKeyPress(e) {
    if (e.key === "Enter") {
      onEnter && onEnter(e);
    }
  };

  return /*#__PURE__*/React__default['default'].createElement("input", {
    type: type,
    className: classNames__default['default'](styles$i.input, inputClassName),
    placeholder: placeholder,
    disabled: disabled,
    maxLength: maxLength,
    max: max,
    min: min,
    step: step,
    value: typeof value !== "undefined" && value !== null ? value : "",
    onChange: handleChange,
    onClick: onClick,
    onKeyPress: handleKeyPress,
    onFocus: onFocus,
    onBlur: onBlur
  });
};
/**
 * PART:
 * Append
 */


var AppendPart = function AppendPart(_ref3) {
  var append = _ref3.append,
      onAppendClick = _ref3.onAppendClick;
  return append ? /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: classNames__default['default'](styles$i.append, _defineProperty({}, styles$i.clickable, onAppendClick)),
    onClick: function onClick() {
      return onAppendClick && onAppendClick();
    }
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$i.content
  }, append)) : null;
};
/**
 * PART:
 * Counter
 */


var CounterPart = function CounterPart(_ref4) {
  var counter = _ref4.counter,
      value = _ref4.value;
  return counter ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$i.counter
  }, value ? value.length : 0) : null;
};

Input.defaultProps = {
  type: "text",
  maxLength: 255
};
Input.propTypes = {
  /**
   * Size of input field
   */
  size: PropTypes__default['default'].oneOf(["small", "big"]),

  /**
   * Input placeholder
   */
  placeholder: PropTypes__default['default'].string,

  /**
   * On value change callback
   */
  onChange: PropTypes__default['default'].func,

  /**
   * Input type (text, password, tel etc.)
   */
  type: PropTypes__default['default'].string,

  /**
   * Maximum allowed characters
   */
  maxLength: PropTypes__default['default'].number,

  /**
   * Max value if number type
   */
  max: PropTypes__default['default'].number,

  /**
   * Min value if number type
   */
  min: PropTypes__default['default'].number,

  /**
   * Step
   */
  step: PropTypes__default['default'].number,

  /**
   * Render input error indication
   */
  error: PropTypes__default['default'].oneOfType([PropTypes__default['default'].bool, PropTypes__default['default'].string]),

  /**
   * Show character counter
   */
  counter: PropTypes__default['default'].bool,

  /**
   * Show a prepended icon
   */
  icon: PropTypes__default['default'].string,

  /**
   * Prepend icon or content
   */
  prepend: PropTypes__default['default'].object,

  /**
   * Callback for when prepend is clicked
   */
  onPrependClick: PropTypes__default['default'].func
};

var styles$j = undefined;

var OnOffSwitch = function OnOffSwitch(_ref) {
  var _classNames;

  var value = _ref.value,
      onChange = _ref.onChange,
      disabled = _ref.disabled,
      children = _ref.children;

  var toggleSwitch = function toggleSwitch() {
    // Check if disabled
    if (disabled) {
      return false;
    } // Callback


    onChange && onChange(!value);
  };

  var classes = classNames__default['default'](styles$j.base, (_classNames = {}, _defineProperty(_classNames, styles$j.isOff, !value), _defineProperty(_classNames, styles$j.disabled, disabled), _defineProperty(_classNames, styles$j.noLabel, !children), _classNames));
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classes,
    onClick: toggleSwitch
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$j["switch"]
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$j.handle
  }), /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$j.onIcon,
    name: "check",
    small: true
  }), /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$j.offIcon,
    name: "close",
    small: true
  })), children ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$j.label
  }, children) : null);
};
OnOffSwitch.propTypes = {
  /**
   * The value of the switch.
   */
  value: PropTypes__default['default'].bool,

  /**
   * Change callback function
   */
  onChange: PropTypes__default['default'].func,

  /**
   * Disabled state
   */
  disabled: PropTypes__default['default'].bool,

  /**
   * Text to display along with the switch
   */
  children: PropTypes__default['default'].any
};

var styles$k = undefined;

var Select = function Select(props) {
  var _classNames;

  var value = props.value,
      onChange = props.onChange,
      size = props.size,
      error = props.error,
      className = props.className,
      selectClassName = props.selectClassName,
      children = props.children,
      placeholder = props.placeholder,
      disabled = props.disabled;

  var handleChange = function handleChange(e) {
    onChange && onChange(e.target.value);
  }; // Select classes


  var baseClasses = classNames__default['default'](styles$k.base, (_classNames = {}, _defineProperty(_classNames, styles$k.placeholder, !value), _defineProperty(_classNames, styles$k.error, error), _defineProperty(_classNames, styles$k.disabled, disabled), _defineProperty(_classNames, styles$k.sizeSmall, size === "small"), _defineProperty(_classNames, styles$k.sizeBig, size === "big"), _classNames), className); // Select classes

  var selectClasses = classNames__default['default'](styles$k.select, selectClassName);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$k.arrow
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$k.icon,
    name: "caret-down"
  })), /*#__PURE__*/React__default['default'].createElement("select", {
    value: value,
    onChange: handleChange,
    className: selectClasses,
    disabled: disabled
  }, !value ? /*#__PURE__*/React__default['default'].createElement("option", null, placeholder) : null, children));
};
Select.propTypes = {
  /**
   * The value of the select.
   */
  value: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].number]),

  /**
   * Triggered when another value is selected.
   */
  onChange: PropTypes__default['default'].func,

  /**
   * The placeholder of the select field.
   */
  placeholder: PropTypes__default['default'].string,

  /**
   * Change the size of the select.
   */
  size: PropTypes__default['default'].oneOf(["small", "big"]),

  /**
   * Disabled state.
   */
  disabled: PropTypes__default['default'].bool,

  /**
   * Visualize error state.
   */
  error: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].bool]),

  /**
   * Custom class name.
   */
  className: PropTypes__default['default'].string,

  /**
   * Custom class name of the select element.
   */
  selectClassName: PropTypes__default['default'].string
};

var Option = function Option(_ref) {
  var value = _ref.value,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("option", {
    value: value,
    className: styles$k.option
  }, children);
};

var styles$l = undefined;

var Textarea = function Textarea(props) {
  var value = props.value,
      onChange = props.onChange,
      maxLength = props.maxLength,
      placeholder = props.placeholder,
      error = props.error,
      className = props.className,
      disabled = props.disabled,
      rows = props.rows;

  var handleChange = function handleChange(e) {
    // Check if exceeding max length
    if (maxLength && e.target.value.length > maxLength) {
      e.target.value = e.target.value.slice(0, maxLength);
    } // Callback


    onChange && onChange(e.target.value);
  };

  return /*#__PURE__*/React__default['default'].createElement("textarea", {
    className: classNames__default['default'](styles$l.base, _defineProperty({}, styles$l.error, error), className),
    placeholder: placeholder,
    disabled: disabled,
    maxLength: maxLength,
    rows: rows,
    value: value || "",
    onChange: handleChange
  });
};
Textarea.defaultProps = {
  maxLength: 2000,
  rows: 3
};
Textarea.propTypes = {
  /**
   * Field value
   */
  value: PropTypes__default['default'].string,

  /**
   * Change handler
   */
  onChange: PropTypes__default['default'].func,

  /**
   * Number of visible rows
   */
  rows: PropTypes__default['default'].number,

  /**
   * Max number of characters
   */
  maxLength: PropTypes__default['default'].number,

  /**
   * Placeholder text
   */
  placeholder: PropTypes__default['default'].string,

  /**
   * Visually show field error
   */
  error: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].bool]),

  /**
   * Disabled field
   */
  disabled: PropTypes__default['default'].bool,

  /**
   * Custom class name
   */
  className: PropTypes__default['default'].string
};

var styles$m = undefined;

var Arrow = function Arrow(_ref) {
  var _classNames;

  var className = _ref.className,
      color = _ref.color,
      style = _ref.style;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$m.base, (_classNames = {}, _defineProperty(_classNames, styles$m.colorContrast, color === "contrast"), _defineProperty(_classNames, styles$m.colorPrimary, color === "primary"), _defineProperty(_classNames, styles$m.colorAccent, color === "accent"), _classNames), className),
    style: style
  }, /*#__PURE__*/React__default['default'].createElement("svg", {
    width: "253",
    height: "123",
    viewBox: "0 0 253 123",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React__default['default'].createElement("path", {
    d: "M126.5.5c9.5 0 28.5 27.22 72 74.11 29 31.26 47.167 47.13 54.5 47.613H0c10.333-3.002 29.167-18.873 56.5-47.613C97.5 31.5 117 .5 126.5.5z",
    fillRule: "evenodd"
  })));
};

var Logo = function Logo(_ref) {
  var fill = _ref.fill,
      width = _ref.width,
      height = _ref.height;
  return /*#__PURE__*/React__default['default'].createElement("svg", {
    height: height,
    width: width,
    fill: fill || "#fff",
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 106 27"
  }, /*#__PURE__*/React__default['default'].createElement("path", {
    fill: "#FFF",
    fillRule: "nonzero",
    d: "M4.984 26H.34V.98L4.984.584v14.328l7.488-6.876 2.628 3.312-4.896 4.284L16.612 26h-5.364l-4.392-7.38-1.872 1.656V26zm29.268-8.784v1.44H22.48c.24 1.224.762 2.16 1.566 2.808.804.648 2.034.972 3.69.972.96 0 1.824-.132 2.592-.396s1.596-.648 2.484-1.152l1.368 3.384a10.317 10.317 0 01-2.88 1.602c-1.032.372-2.256.558-3.672.558-3.312 0-5.826-.81-7.542-2.43-1.716-1.62-2.574-3.858-2.574-6.714 0-1.848.354-3.468 1.062-4.86.708-1.392 1.722-2.466 3.042-3.222 1.32-.756 2.88-1.134 4.68-1.134 1.752 0 3.228.408 4.428 1.224 1.2.816 2.088 1.914 2.664 3.294.576 1.38.864 2.922.864 4.626zm-11.736-1.692h7.308c-.24-1.152-.666-2.016-1.278-2.592-.612-.576-1.398-.864-2.358-.864-.96 0-1.764.294-2.412.882-.648.588-1.068 1.446-1.26 2.574zm35.964-7.56c1.992 0 3.426.534 4.302 1.602.876 1.068 1.314 2.658 1.314 4.77V26h-4.68V15.272c0-1.128-.174-1.98-.522-2.556-.348-.576-.894-.864-1.638-.864-.72 0-1.38.168-1.98.504-.6.336-1.368.84-2.304 1.512V26h-4.68V15.272c0-1.128-.174-1.98-.522-2.556-.348-.576-.894-.864-1.638-.864-.72 0-1.38.168-1.98.504-.6.336-1.38.852-2.34 1.548V26h-4.68V8.54h3.06l.792 1.872a14.65 14.65 0 013.348-1.8c1.152-.432 2.16-.648 3.024-.648 2.376 0 3.984.792 4.824 2.376a15.173 15.173 0 013.312-1.746c1.128-.42 2.124-.63 2.988-.63zm17.712.108c2.712 0 4.854.822 6.426 2.466 1.572 1.644 2.358 3.87 2.358 6.678 0 1.824-.354 3.432-1.062 4.824a7.64 7.64 0 01-3.078 3.24c-1.344.768-2.94 1.152-4.788 1.152-.72 0-1.476-.156-2.268-.468a10.18 10.18 0 01-2.196-1.188L70.648 26h-2.376V.98l4.644-.396v8.28a7.24 7.24 0 013.276-.792zm-.18 14.364c1.272 0 2.28-.486 3.024-1.458.744-.972 1.116-2.226 1.116-3.762s-.366-2.778-1.098-3.726c-.732-.948-1.746-1.422-3.042-1.422-1.008 0-2.04.348-3.096 1.044v8.316c.984.672 2.016 1.008 3.096 1.008zm29.412-5.22c0 1.848-.384 3.468-1.152 4.86a7.95 7.95 0 01-3.258 3.222c-1.404.756-3.042 1.134-4.914 1.134-1.872 0-3.51-.372-4.914-1.116a7.865 7.865 0 01-3.258-3.186c-.768-1.38-1.152-2.994-1.152-4.842 0-1.848.384-3.468 1.152-4.86a7.95 7.95 0 013.258-3.222c1.404-.756 3.042-1.134 4.914-1.134 1.872 0 3.51.372 4.914 1.116a7.865 7.865 0 013.258 3.186c.768 1.38 1.152 2.994 1.152 4.842zm-9.324 5.22c1.296 0 2.37-.492 3.222-1.476.852-.984 1.278-2.232 1.278-3.744s-.42-2.748-1.26-3.708c-.84-.96-1.92-1.44-3.24-1.44-1.296 0-2.37.492-3.222 1.476-.852.984-1.278 2.232-1.278 3.744s.42 2.748 1.26 3.708c.84.96 1.92 1.44 3.24 1.44z"
  }));
};

var styles$n = undefined;

var AppContext = /*#__PURE__*/React__default['default'].createContext(null);

var AppBar = function AppBar(_ref) {
  var title = _ref.title,
      children = _ref.children;
  var layout = React.useContext(AppContext); // Classes

  var baseClasses = classNames__default['default'](styles$n.base, _defineProperty({}, styles$n.subBarActive, layout.subBarActive));
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.mainBar
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.left
  }, /*#__PURE__*/React__default['default'].createElement(MenuButton, {
    onClick: function onClick() {
      return layout.setNavActive(!layout.navActive);
    }
  })), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.center
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.text
  }, title)), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.right
  }, /*#__PURE__*/React__default['default'].createElement(DotsButton, {
    onClick: function onClick() {
      return layout.setSubBarActive(!layout.subBarActive);
    },
    active: layout.subBarActive
  }))), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.subBar
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.left
  }, React__default['default'].Children.toArray(children).filter(function (c) {
    return c.props.placeLeft;
  })), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$n.right
  }, React__default['default'].Children.toArray(children).filter(function (c) {
    return c.props.placeRight;
  }))));
};
AppBar.propTypes = {
  /**
   * Title displayed on mobile devices
   */
  title: PropTypes__default['default'].string
};

var styles$o = undefined;

var Item = function Item(props) {
  return /*#__PURE__*/React__default['default'].createElement(Clickable, _extends({}, props, {
    className: styles$o.item
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$o.wrapper
  }, props.children));
};
Item.propTypes = {
  placeLeft: PropTypes__default['default'].bool,
  placeRight: PropTypes__default['default'].bool
};

AppBar.Item = Item;

var styles$p = undefined;

var AppContent = function AppContent(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$p.base
  }, children);
};

var styles$q = undefined;

var styles$r = undefined;

/*!
 * perfect-scrollbar v1.5.0
 * Copyright 2020 Hyunje Jun, MDBootstrap and Contributors
 * Licensed under MIT
 */

function get(element) {
  return getComputedStyle(element);
}

function set(element, obj) {
  for (var key in obj) {
    var val = obj[key];
    if (typeof val === 'number') {
      val = val + "px";
    }
    element.style[key] = val;
  }
  return element;
}

function div(className) {
  var div = document.createElement('div');
  div.className = className;
  return div;
}

var elMatches =
  typeof Element !== 'undefined' &&
  (Element.prototype.matches ||
    Element.prototype.webkitMatchesSelector ||
    Element.prototype.mozMatchesSelector ||
    Element.prototype.msMatchesSelector);

function matches(element, query) {
  if (!elMatches) {
    throw new Error('No element matching method supported');
  }

  return elMatches.call(element, query);
}

function remove(element) {
  if (element.remove) {
    element.remove();
  } else {
    if (element.parentNode) {
      element.parentNode.removeChild(element);
    }
  }
}

function queryChildren(element, selector) {
  return Array.prototype.filter.call(element.children, function (child) { return matches(child, selector); }
  );
}

var cls = {
  main: 'ps',
  rtl: 'ps__rtl',
  element: {
    thumb: function (x) { return ("ps__thumb-" + x); },
    rail: function (x) { return ("ps__rail-" + x); },
    consuming: 'ps__child--consume',
  },
  state: {
    focus: 'ps--focus',
    clicking: 'ps--clicking',
    active: function (x) { return ("ps--active-" + x); },
    scrolling: function (x) { return ("ps--scrolling-" + x); },
  },
};

/*
 * Helper methods
 */
var scrollingClassTimeout = { x: null, y: null };

function addScrollingClass(i, x) {
  var classList = i.element.classList;
  var className = cls.state.scrolling(x);

  if (classList.contains(className)) {
    clearTimeout(scrollingClassTimeout[x]);
  } else {
    classList.add(className);
  }
}

function removeScrollingClass(i, x) {
  scrollingClassTimeout[x] = setTimeout(
    function () { return i.isAlive && i.element.classList.remove(cls.state.scrolling(x)); },
    i.settings.scrollingThreshold
  );
}

function setScrollingClassInstantly(i, x) {
  addScrollingClass(i, x);
  removeScrollingClass(i, x);
}

var EventElement = function EventElement(element) {
  this.element = element;
  this.handlers = {};
};

var prototypeAccessors = { isEmpty: { configurable: true } };

EventElement.prototype.bind = function bind (eventName, handler) {
  if (typeof this.handlers[eventName] === 'undefined') {
    this.handlers[eventName] = [];
  }
  this.handlers[eventName].push(handler);
  this.element.addEventListener(eventName, handler, false);
};

EventElement.prototype.unbind = function unbind (eventName, target) {
    var this$1 = this;

  this.handlers[eventName] = this.handlers[eventName].filter(function (handler) {
    if (target && handler !== target) {
      return true;
    }
    this$1.element.removeEventListener(eventName, handler, false);
    return false;
  });
};

EventElement.prototype.unbindAll = function unbindAll () {
  for (var name in this.handlers) {
    this.unbind(name);
  }
};

prototypeAccessors.isEmpty.get = function () {
    var this$1 = this;

  return Object.keys(this.handlers).every(
    function (key) { return this$1.handlers[key].length === 0; }
  );
};

Object.defineProperties( EventElement.prototype, prototypeAccessors );

var EventManager = function EventManager() {
  this.eventElements = [];
};

EventManager.prototype.eventElement = function eventElement (element) {
  var ee = this.eventElements.filter(function (ee) { return ee.element === element; })[0];
  if (!ee) {
    ee = new EventElement(element);
    this.eventElements.push(ee);
  }
  return ee;
};

EventManager.prototype.bind = function bind (element, eventName, handler) {
  this.eventElement(element).bind(eventName, handler);
};

EventManager.prototype.unbind = function unbind (element, eventName, handler) {
  var ee = this.eventElement(element);
  ee.unbind(eventName, handler);

  if (ee.isEmpty) {
    // remove
    this.eventElements.splice(this.eventElements.indexOf(ee), 1);
  }
};

EventManager.prototype.unbindAll = function unbindAll () {
  this.eventElements.forEach(function (e) { return e.unbindAll(); });
  this.eventElements = [];
};

EventManager.prototype.once = function once (element, eventName, handler) {
  var ee = this.eventElement(element);
  var onceHandler = function (evt) {
    ee.unbind(eventName, onceHandler);
    handler(evt);
  };
  ee.bind(eventName, onceHandler);
};

function createEvent(name) {
  if (typeof window.CustomEvent === 'function') {
    return new CustomEvent(name);
  } else {
    var evt = document.createEvent('CustomEvent');
    evt.initCustomEvent(name, false, false, undefined);
    return evt;
  }
}

function processScrollDiff(
  i,
  axis,
  diff,
  useScrollingClass,
  forceFireReachEvent
) {
  if ( useScrollingClass === void 0 ) useScrollingClass = true;
  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;

  var fields;
  if (axis === 'top') {
    fields = [
      'contentHeight',
      'containerHeight',
      'scrollTop',
      'y',
      'up',
      'down' ];
  } else if (axis === 'left') {
    fields = [
      'contentWidth',
      'containerWidth',
      'scrollLeft',
      'x',
      'left',
      'right' ];
  } else {
    throw new Error('A proper axis should be provided');
  }

  processScrollDiff$1(i, diff, fields, useScrollingClass, forceFireReachEvent);
}

function processScrollDiff$1(
  i,
  diff,
  ref,
  useScrollingClass,
  forceFireReachEvent
) {
  var contentHeight = ref[0];
  var containerHeight = ref[1];
  var scrollTop = ref[2];
  var y = ref[3];
  var up = ref[4];
  var down = ref[5];
  if ( useScrollingClass === void 0 ) useScrollingClass = true;
  if ( forceFireReachEvent === void 0 ) forceFireReachEvent = false;

  var element = i.element;

  // reset reach
  i.reach[y] = null;

  // 1 for subpixel rounding
  if (element[scrollTop] < 1) {
    i.reach[y] = 'start';
  }

  // 1 for subpixel rounding
  if (element[scrollTop] > i[contentHeight] - i[containerHeight] - 1) {
    i.reach[y] = 'end';
  }

  if (diff) {
    element.dispatchEvent(createEvent(("ps-scroll-" + y)));

    if (diff < 0) {
      element.dispatchEvent(createEvent(("ps-scroll-" + up)));
    } else if (diff > 0) {
      element.dispatchEvent(createEvent(("ps-scroll-" + down)));
    }

    if (useScrollingClass) {
      setScrollingClassInstantly(i, y);
    }
  }

  if (i.reach[y] && (diff || forceFireReachEvent)) {
    element.dispatchEvent(createEvent(("ps-" + y + "-reach-" + (i.reach[y]))));
  }
}

function toInt(x) {
  return parseInt(x, 10) || 0;
}

function isEditable(el) {
  return (
    matches(el, 'input,[contenteditable]') ||
    matches(el, 'select,[contenteditable]') ||
    matches(el, 'textarea,[contenteditable]') ||
    matches(el, 'button,[contenteditable]')
  );
}

function outerWidth(element) {
  var styles = get(element);
  return (
    toInt(styles.width) +
    toInt(styles.paddingLeft) +
    toInt(styles.paddingRight) +
    toInt(styles.borderLeftWidth) +
    toInt(styles.borderRightWidth)
  );
}

var env = {
  isWebKit:
    typeof document !== 'undefined' &&
    'WebkitAppearance' in document.documentElement.style,
  supportsTouch:
    typeof window !== 'undefined' &&
    ('ontouchstart' in window ||
      ('maxTouchPoints' in window.navigator &&
        window.navigator.maxTouchPoints > 0) ||
      (window.DocumentTouch && document instanceof window.DocumentTouch)),
  supportsIePointer:
    typeof navigator !== 'undefined' && navigator.msMaxTouchPoints,
  isChrome:
    typeof navigator !== 'undefined' &&
    /Chrome/i.test(navigator && navigator.userAgent),
};

function updateGeometry(i) {
  var element = i.element;
  var roundedScrollTop = Math.floor(element.scrollTop);
  var rect = element.getBoundingClientRect();

  i.containerWidth = Math.ceil(rect.width);
  i.containerHeight = Math.ceil(rect.height);
  i.contentWidth = element.scrollWidth;
  i.contentHeight = element.scrollHeight;

  if (!element.contains(i.scrollbarXRail)) {
    // clean up and append
    queryChildren(element, cls.element.rail('x')).forEach(function (el) { return remove(el); }
    );
    element.appendChild(i.scrollbarXRail);
  }
  if (!element.contains(i.scrollbarYRail)) {
    // clean up and append
    queryChildren(element, cls.element.rail('y')).forEach(function (el) { return remove(el); }
    );
    element.appendChild(i.scrollbarYRail);
  }

  if (
    !i.settings.suppressScrollX &&
    i.containerWidth + i.settings.scrollXMarginOffset < i.contentWidth
  ) {
    i.scrollbarXActive = true;
    i.railXWidth = i.containerWidth - i.railXMarginWidth;
    i.railXRatio = i.containerWidth / i.railXWidth;
    i.scrollbarXWidth = getThumbSize(
      i,
      toInt((i.railXWidth * i.containerWidth) / i.contentWidth)
    );
    i.scrollbarXLeft = toInt(
      ((i.negativeScrollAdjustment + element.scrollLeft) *
        (i.railXWidth - i.scrollbarXWidth)) /
        (i.contentWidth - i.containerWidth)
    );
  } else {
    i.scrollbarXActive = false;
  }

  if (
    !i.settings.suppressScrollY &&
    i.containerHeight + i.settings.scrollYMarginOffset < i.contentHeight
  ) {
    i.scrollbarYActive = true;
    i.railYHeight = i.containerHeight - i.railYMarginHeight;
    i.railYRatio = i.containerHeight / i.railYHeight;
    i.scrollbarYHeight = getThumbSize(
      i,
      toInt((i.railYHeight * i.containerHeight) / i.contentHeight)
    );
    i.scrollbarYTop = toInt(
      (roundedScrollTop * (i.railYHeight - i.scrollbarYHeight)) /
        (i.contentHeight - i.containerHeight)
    );
  } else {
    i.scrollbarYActive = false;
  }

  if (i.scrollbarXLeft >= i.railXWidth - i.scrollbarXWidth) {
    i.scrollbarXLeft = i.railXWidth - i.scrollbarXWidth;
  }
  if (i.scrollbarYTop >= i.railYHeight - i.scrollbarYHeight) {
    i.scrollbarYTop = i.railYHeight - i.scrollbarYHeight;
  }

  updateCss(element, i);

  if (i.scrollbarXActive) {
    element.classList.add(cls.state.active('x'));
  } else {
    element.classList.remove(cls.state.active('x'));
    i.scrollbarXWidth = 0;
    i.scrollbarXLeft = 0;
    element.scrollLeft = i.isRtl === true ? i.contentWidth : 0;
  }
  if (i.scrollbarYActive) {
    element.classList.add(cls.state.active('y'));
  } else {
    element.classList.remove(cls.state.active('y'));
    i.scrollbarYHeight = 0;
    i.scrollbarYTop = 0;
    element.scrollTop = 0;
  }
}

function getThumbSize(i, thumbSize) {
  if (i.settings.minScrollbarLength) {
    thumbSize = Math.max(thumbSize, i.settings.minScrollbarLength);
  }
  if (i.settings.maxScrollbarLength) {
    thumbSize = Math.min(thumbSize, i.settings.maxScrollbarLength);
  }
  return thumbSize;
}

function updateCss(element, i) {
  var xRailOffset = { width: i.railXWidth };
  var roundedScrollTop = Math.floor(element.scrollTop);

  if (i.isRtl) {
    xRailOffset.left =
      i.negativeScrollAdjustment +
      element.scrollLeft +
      i.containerWidth -
      i.contentWidth;
  } else {
    xRailOffset.left = element.scrollLeft;
  }
  if (i.isScrollbarXUsingBottom) {
    xRailOffset.bottom = i.scrollbarXBottom - roundedScrollTop;
  } else {
    xRailOffset.top = i.scrollbarXTop + roundedScrollTop;
  }
  set(i.scrollbarXRail, xRailOffset);

  var yRailOffset = { top: roundedScrollTop, height: i.railYHeight };
  if (i.isScrollbarYUsingRight) {
    if (i.isRtl) {
      yRailOffset.right =
        i.contentWidth -
        (i.negativeScrollAdjustment + element.scrollLeft) -
        i.scrollbarYRight -
        i.scrollbarYOuterWidth -
        9;
    } else {
      yRailOffset.right = i.scrollbarYRight - element.scrollLeft;
    }
  } else {
    if (i.isRtl) {
      yRailOffset.left =
        i.negativeScrollAdjustment +
        element.scrollLeft +
        i.containerWidth * 2 -
        i.contentWidth -
        i.scrollbarYLeft -
        i.scrollbarYOuterWidth;
    } else {
      yRailOffset.left = i.scrollbarYLeft + element.scrollLeft;
    }
  }
  set(i.scrollbarYRail, yRailOffset);

  set(i.scrollbarX, {
    left: i.scrollbarXLeft,
    width: i.scrollbarXWidth - i.railBorderXWidth,
  });
  set(i.scrollbarY, {
    top: i.scrollbarYTop,
    height: i.scrollbarYHeight - i.railBorderYWidth,
  });
}

function clickRail(i) {
  var element = i.element;

  i.event.bind(i.scrollbarY, 'mousedown', function (e) { return e.stopPropagation(); });
  i.event.bind(i.scrollbarYRail, 'mousedown', function (e) {
    var positionTop =
      e.pageY -
      window.pageYOffset -
      i.scrollbarYRail.getBoundingClientRect().top;
    var direction = positionTop > i.scrollbarYTop ? 1 : -1;

    i.element.scrollTop += direction * i.containerHeight;
    updateGeometry(i);

    e.stopPropagation();
  });

  i.event.bind(i.scrollbarX, 'mousedown', function (e) { return e.stopPropagation(); });
  i.event.bind(i.scrollbarXRail, 'mousedown', function (e) {
    var positionLeft =
      e.pageX -
      window.pageXOffset -
      i.scrollbarXRail.getBoundingClientRect().left;
    var direction = positionLeft > i.scrollbarXLeft ? 1 : -1;

    i.element.scrollLeft += direction * i.containerWidth;
    updateGeometry(i);

    e.stopPropagation();
  });
}

function dragThumb(i) {
  bindMouseScrollHandler(i, [
    'containerWidth',
    'contentWidth',
    'pageX',
    'railXWidth',
    'scrollbarX',
    'scrollbarXWidth',
    'scrollLeft',
    'x',
    'scrollbarXRail' ]);
  bindMouseScrollHandler(i, [
    'containerHeight',
    'contentHeight',
    'pageY',
    'railYHeight',
    'scrollbarY',
    'scrollbarYHeight',
    'scrollTop',
    'y',
    'scrollbarYRail' ]);
}

function bindMouseScrollHandler(
  i,
  ref
) {
  var containerHeight = ref[0];
  var contentHeight = ref[1];
  var pageY = ref[2];
  var railYHeight = ref[3];
  var scrollbarY = ref[4];
  var scrollbarYHeight = ref[5];
  var scrollTop = ref[6];
  var y = ref[7];
  var scrollbarYRail = ref[8];

  var element = i.element;

  var startingScrollTop = null;
  var startingMousePageY = null;
  var scrollBy = null;

  function mouseMoveHandler(e) {
    if (e.touches && e.touches[0]) {
      e[pageY] = e.touches[0].pageY;
    }
    element[scrollTop] =
      startingScrollTop + scrollBy * (e[pageY] - startingMousePageY);
    addScrollingClass(i, y);
    updateGeometry(i);

    e.stopPropagation();
    e.preventDefault();
  }

  function mouseUpHandler() {
    removeScrollingClass(i, y);
    i[scrollbarYRail].classList.remove(cls.state.clicking);
    i.event.unbind(i.ownerDocument, 'mousemove', mouseMoveHandler);
  }

  function bindMoves(e, touchMode) {
    startingScrollTop = element[scrollTop];
    if (touchMode && e.touches) {
      e[pageY] = e.touches[0].pageY;
    }
    startingMousePageY = e[pageY];
    scrollBy =
      (i[contentHeight] - i[containerHeight]) /
      (i[railYHeight] - i[scrollbarYHeight]);
    if (!touchMode) {
      i.event.bind(i.ownerDocument, 'mousemove', mouseMoveHandler);
      i.event.once(i.ownerDocument, 'mouseup', mouseUpHandler);
      e.preventDefault();
    } else {
      i.event.bind(i.ownerDocument, 'touchmove', mouseMoveHandler);
    }

    i[scrollbarYRail].classList.add(cls.state.clicking);

    e.stopPropagation();
  }

  i.event.bind(i[scrollbarY], 'mousedown', function (e) {
    bindMoves(e);
  });
  i.event.bind(i[scrollbarY], 'touchstart', function (e) {
    bindMoves(e, true);
  });
}

function keyboard(i) {
  var element = i.element;

  var elementHovered = function () { return matches(element, ':hover'); };
  var scrollbarFocused = function () { return matches(i.scrollbarX, ':focus') || matches(i.scrollbarY, ':focus'); };

  function shouldPreventDefault(deltaX, deltaY) {
    var scrollTop = Math.floor(element.scrollTop);
    if (deltaX === 0) {
      if (!i.scrollbarYActive) {
        return false;
      }
      if (
        (scrollTop === 0 && deltaY > 0) ||
        (scrollTop >= i.contentHeight - i.containerHeight && deltaY < 0)
      ) {
        return !i.settings.wheelPropagation;
      }
    }

    var scrollLeft = element.scrollLeft;
    if (deltaY === 0) {
      if (!i.scrollbarXActive) {
        return false;
      }
      if (
        (scrollLeft === 0 && deltaX < 0) ||
        (scrollLeft >= i.contentWidth - i.containerWidth && deltaX > 0)
      ) {
        return !i.settings.wheelPropagation;
      }
    }
    return true;
  }

  i.event.bind(i.ownerDocument, 'keydown', function (e) {
    if (
      (e.isDefaultPrevented && e.isDefaultPrevented()) ||
      e.defaultPrevented
    ) {
      return;
    }

    if (!elementHovered() && !scrollbarFocused()) {
      return;
    }

    var activeElement = document.activeElement
      ? document.activeElement
      : i.ownerDocument.activeElement;
    if (activeElement) {
      if (activeElement.tagName === 'IFRAME') {
        activeElement = activeElement.contentDocument.activeElement;
      } else {
        // go deeper if element is a webcomponent
        while (activeElement.shadowRoot) {
          activeElement = activeElement.shadowRoot.activeElement;
        }
      }
      if (isEditable(activeElement)) {
        return;
      }
    }

    var deltaX = 0;
    var deltaY = 0;

    switch (e.which) {
      case 37: // left
        if (e.metaKey) {
          deltaX = -i.contentWidth;
        } else if (e.altKey) {
          deltaX = -i.containerWidth;
        } else {
          deltaX = -30;
        }
        break;
      case 38: // up
        if (e.metaKey) {
          deltaY = i.contentHeight;
        } else if (e.altKey) {
          deltaY = i.containerHeight;
        } else {
          deltaY = 30;
        }
        break;
      case 39: // right
        if (e.metaKey) {
          deltaX = i.contentWidth;
        } else if (e.altKey) {
          deltaX = i.containerWidth;
        } else {
          deltaX = 30;
        }
        break;
      case 40: // down
        if (e.metaKey) {
          deltaY = -i.contentHeight;
        } else if (e.altKey) {
          deltaY = -i.containerHeight;
        } else {
          deltaY = -30;
        }
        break;
      case 32: // space bar
        if (e.shiftKey) {
          deltaY = i.containerHeight;
        } else {
          deltaY = -i.containerHeight;
        }
        break;
      case 33: // page up
        deltaY = i.containerHeight;
        break;
      case 34: // page down
        deltaY = -i.containerHeight;
        break;
      case 36: // home
        deltaY = i.contentHeight;
        break;
      case 35: // end
        deltaY = -i.contentHeight;
        break;
      default:
        return;
    }

    if (i.settings.suppressScrollX && deltaX !== 0) {
      return;
    }
    if (i.settings.suppressScrollY && deltaY !== 0) {
      return;
    }

    element.scrollTop -= deltaY;
    element.scrollLeft += deltaX;
    updateGeometry(i);

    if (shouldPreventDefault(deltaX, deltaY)) {
      e.preventDefault();
    }
  });
}

function wheel(i) {
  var element = i.element;

  function shouldPreventDefault(deltaX, deltaY) {
    var roundedScrollTop = Math.floor(element.scrollTop);
    var isTop = element.scrollTop === 0;
    var isBottom =
      roundedScrollTop + element.offsetHeight === element.scrollHeight;
    var isLeft = element.scrollLeft === 0;
    var isRight =
      element.scrollLeft + element.offsetWidth === element.scrollWidth;

    var hitsBound;

    // pick axis with primary direction
    if (Math.abs(deltaY) > Math.abs(deltaX)) {
      hitsBound = isTop || isBottom;
    } else {
      hitsBound = isLeft || isRight;
    }

    return hitsBound ? !i.settings.wheelPropagation : true;
  }

  function getDeltaFromEvent(e) {
    var deltaX = e.deltaX;
    var deltaY = -1 * e.deltaY;

    if (typeof deltaX === 'undefined' || typeof deltaY === 'undefined') {
      // OS X Safari
      deltaX = (-1 * e.wheelDeltaX) / 6;
      deltaY = e.wheelDeltaY / 6;
    }

    if (e.deltaMode && e.deltaMode === 1) {
      // Firefox in deltaMode 1: Line scrolling
      deltaX *= 10;
      deltaY *= 10;
    }

    if (deltaX !== deltaX && deltaY !== deltaY /* NaN checks */) {
      // IE in some mouse drivers
      deltaX = 0;
      deltaY = e.wheelDelta;
    }

    if (e.shiftKey) {
      // reverse axis with shift key
      return [-deltaY, -deltaX];
    }
    return [deltaX, deltaY];
  }

  function shouldBeConsumedByChild(target, deltaX, deltaY) {
    // FIXME: this is a workaround for <select> issue in FF and IE #571
    if (!env.isWebKit && element.querySelector('select:focus')) {
      return true;
    }

    if (!element.contains(target)) {
      return false;
    }

    var cursor = target;

    while (cursor && cursor !== element) {
      if (cursor.classList.contains(cls.element.consuming)) {
        return true;
      }

      var style = get(cursor);

      // if deltaY && vertical scrollable
      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {
        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;
        if (maxScrollTop > 0) {
          if (
            (cursor.scrollTop > 0 && deltaY < 0) ||
            (cursor.scrollTop < maxScrollTop && deltaY > 0)
          ) {
            return true;
          }
        }
      }
      // if deltaX && horizontal scrollable
      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {
        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;
        if (maxScrollLeft > 0) {
          if (
            (cursor.scrollLeft > 0 && deltaX < 0) ||
            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)
          ) {
            return true;
          }
        }
      }

      cursor = cursor.parentNode;
    }

    return false;
  }

  function mousewheelHandler(e) {
    var ref = getDeltaFromEvent(e);
    var deltaX = ref[0];
    var deltaY = ref[1];

    if (shouldBeConsumedByChild(e.target, deltaX, deltaY)) {
      return;
    }

    var shouldPrevent = false;
    if (!i.settings.useBothWheelAxes) {
      // deltaX will only be used for horizontal scrolling and deltaY will
      // only be used for vertical scrolling - this is the default
      element.scrollTop -= deltaY * i.settings.wheelSpeed;
      element.scrollLeft += deltaX * i.settings.wheelSpeed;
    } else if (i.scrollbarYActive && !i.scrollbarXActive) {
      // only vertical scrollbar is active and useBothWheelAxes option is
      // active, so let's scroll vertical bar using both mouse wheel axes
      if (deltaY) {
        element.scrollTop -= deltaY * i.settings.wheelSpeed;
      } else {
        element.scrollTop += deltaX * i.settings.wheelSpeed;
      }
      shouldPrevent = true;
    } else if (i.scrollbarXActive && !i.scrollbarYActive) {
      // useBothWheelAxes and only horizontal bar is active, so use both
      // wheel axes for horizontal bar
      if (deltaX) {
        element.scrollLeft += deltaX * i.settings.wheelSpeed;
      } else {
        element.scrollLeft -= deltaY * i.settings.wheelSpeed;
      }
      shouldPrevent = true;
    }

    updateGeometry(i);

    shouldPrevent = shouldPrevent || shouldPreventDefault(deltaX, deltaY);
    if (shouldPrevent && !e.ctrlKey) {
      e.stopPropagation();
      e.preventDefault();
    }
  }

  if (typeof window.onwheel !== 'undefined') {
    i.event.bind(element, 'wheel', mousewheelHandler);
  } else if (typeof window.onmousewheel !== 'undefined') {
    i.event.bind(element, 'mousewheel', mousewheelHandler);
  }
}

function touch(i) {
  if (!env.supportsTouch && !env.supportsIePointer) {
    return;
  }

  var element = i.element;

  function shouldPrevent(deltaX, deltaY) {
    var scrollTop = Math.floor(element.scrollTop);
    var scrollLeft = element.scrollLeft;
    var magnitudeX = Math.abs(deltaX);
    var magnitudeY = Math.abs(deltaY);

    if (magnitudeY > magnitudeX) {
      // user is perhaps trying to swipe up/down the page

      if (
        (deltaY < 0 && scrollTop === i.contentHeight - i.containerHeight) ||
        (deltaY > 0 && scrollTop === 0)
      ) {
        // set prevent for mobile Chrome refresh
        return window.scrollY === 0 && deltaY > 0 && env.isChrome;
      }
    } else if (magnitudeX > magnitudeY) {
      // user is perhaps trying to swipe left/right across the page

      if (
        (deltaX < 0 && scrollLeft === i.contentWidth - i.containerWidth) ||
        (deltaX > 0 && scrollLeft === 0)
      ) {
        return true;
      }
    }

    return true;
  }

  function applyTouchMove(differenceX, differenceY) {
    element.scrollTop -= differenceY;
    element.scrollLeft -= differenceX;

    updateGeometry(i);
  }

  var startOffset = {};
  var startTime = 0;
  var speed = {};
  var easingLoop = null;

  function getTouch(e) {
    if (e.targetTouches) {
      return e.targetTouches[0];
    } else {
      // Maybe IE pointer
      return e;
    }
  }

  function shouldHandle(e) {
    if (e.pointerType && e.pointerType === 'pen' && e.buttons === 0) {
      return false;
    }
    if (e.targetTouches && e.targetTouches.length === 1) {
      return true;
    }
    if (
      e.pointerType &&
      e.pointerType !== 'mouse' &&
      e.pointerType !== e.MSPOINTER_TYPE_MOUSE
    ) {
      return true;
    }
    return false;
  }

  function touchStart(e) {
    if (!shouldHandle(e)) {
      return;
    }

    var touch = getTouch(e);

    startOffset.pageX = touch.pageX;
    startOffset.pageY = touch.pageY;

    startTime = new Date().getTime();

    if (easingLoop !== null) {
      clearInterval(easingLoop);
    }
  }

  function shouldBeConsumedByChild(target, deltaX, deltaY) {
    if (!element.contains(target)) {
      return false;
    }

    var cursor = target;

    while (cursor && cursor !== element) {
      if (cursor.classList.contains(cls.element.consuming)) {
        return true;
      }

      var style = get(cursor);

      // if deltaY && vertical scrollable
      if (deltaY && style.overflowY.match(/(scroll|auto)/)) {
        var maxScrollTop = cursor.scrollHeight - cursor.clientHeight;
        if (maxScrollTop > 0) {
          if (
            (cursor.scrollTop > 0 && deltaY < 0) ||
            (cursor.scrollTop < maxScrollTop && deltaY > 0)
          ) {
            return true;
          }
        }
      }
      // if deltaX && horizontal scrollable
      if (deltaX && style.overflowX.match(/(scroll|auto)/)) {
        var maxScrollLeft = cursor.scrollWidth - cursor.clientWidth;
        if (maxScrollLeft > 0) {
          if (
            (cursor.scrollLeft > 0 && deltaX < 0) ||
            (cursor.scrollLeft < maxScrollLeft && deltaX > 0)
          ) {
            return true;
          }
        }
      }

      cursor = cursor.parentNode;
    }

    return false;
  }

  function touchMove(e) {
    if (shouldHandle(e)) {
      var touch = getTouch(e);

      var currentOffset = { pageX: touch.pageX, pageY: touch.pageY };

      var differenceX = currentOffset.pageX - startOffset.pageX;
      var differenceY = currentOffset.pageY - startOffset.pageY;

      if (shouldBeConsumedByChild(e.target, differenceX, differenceY)) {
        return;
      }

      applyTouchMove(differenceX, differenceY);
      startOffset = currentOffset;

      var currentTime = new Date().getTime();

      var timeGap = currentTime - startTime;
      if (timeGap > 0) {
        speed.x = differenceX / timeGap;
        speed.y = differenceY / timeGap;
        startTime = currentTime;
      }

      if (shouldPrevent(differenceX, differenceY)) {
        e.preventDefault();
      }
    }
  }
  function touchEnd() {
    if (i.settings.swipeEasing) {
      clearInterval(easingLoop);
      easingLoop = setInterval(function() {
        if (i.isInitialized) {
          clearInterval(easingLoop);
          return;
        }

        if (!speed.x && !speed.y) {
          clearInterval(easingLoop);
          return;
        }

        if (Math.abs(speed.x) < 0.01 && Math.abs(speed.y) < 0.01) {
          clearInterval(easingLoop);
          return;
        }

        applyTouchMove(speed.x * 30, speed.y * 30);

        speed.x *= 0.8;
        speed.y *= 0.8;
      }, 10);
    }
  }

  if (env.supportsTouch) {
    i.event.bind(element, 'touchstart', touchStart);
    i.event.bind(element, 'touchmove', touchMove);
    i.event.bind(element, 'touchend', touchEnd);
  } else if (env.supportsIePointer) {
    if (window.PointerEvent) {
      i.event.bind(element, 'pointerdown', touchStart);
      i.event.bind(element, 'pointermove', touchMove);
      i.event.bind(element, 'pointerup', touchEnd);
    } else if (window.MSPointerEvent) {
      i.event.bind(element, 'MSPointerDown', touchStart);
      i.event.bind(element, 'MSPointerMove', touchMove);
      i.event.bind(element, 'MSPointerUp', touchEnd);
    }
  }
}

var defaultSettings = function () { return ({
  handlers: ['click-rail', 'drag-thumb', 'keyboard', 'wheel', 'touch'],
  maxScrollbarLength: null,
  minScrollbarLength: null,
  scrollingThreshold: 1000,
  scrollXMarginOffset: 0,
  scrollYMarginOffset: 0,
  suppressScrollX: false,
  suppressScrollY: false,
  swipeEasing: true,
  useBothWheelAxes: false,
  wheelPropagation: true,
  wheelSpeed: 1,
}); };

var handlers = {
  'click-rail': clickRail,
  'drag-thumb': dragThumb,
  keyboard: keyboard,
  wheel: wheel,
  touch: touch,
};

var PerfectScrollbar = function PerfectScrollbar(element, userSettings) {
  var this$1 = this;
  if ( userSettings === void 0 ) userSettings = {};

  if (typeof element === 'string') {
    element = document.querySelector(element);
  }

  if (!element || !element.nodeName) {
    throw new Error('no element is specified to initialize PerfectScrollbar');
  }

  this.element = element;

  element.classList.add(cls.main);

  this.settings = defaultSettings();
  for (var key in userSettings) {
    this.settings[key] = userSettings[key];
  }

  this.containerWidth = null;
  this.containerHeight = null;
  this.contentWidth = null;
  this.contentHeight = null;

  var focus = function () { return element.classList.add(cls.state.focus); };
  var blur = function () { return element.classList.remove(cls.state.focus); };

  this.isRtl = get(element).direction === 'rtl';
  if (this.isRtl === true) {
    element.classList.add(cls.rtl);
  }
  this.isNegativeScroll = (function () {
    var originalScrollLeft = element.scrollLeft;
    var result = null;
    element.scrollLeft = -1;
    result = element.scrollLeft < 0;
    element.scrollLeft = originalScrollLeft;
    return result;
  })();
  this.negativeScrollAdjustment = this.isNegativeScroll
    ? element.scrollWidth - element.clientWidth
    : 0;
  this.event = new EventManager();
  this.ownerDocument = element.ownerDocument || document;

  this.scrollbarXRail = div(cls.element.rail('x'));
  element.appendChild(this.scrollbarXRail);
  this.scrollbarX = div(cls.element.thumb('x'));
  this.scrollbarXRail.appendChild(this.scrollbarX);
  this.scrollbarX.setAttribute('tabindex', 0);
  this.event.bind(this.scrollbarX, 'focus', focus);
  this.event.bind(this.scrollbarX, 'blur', blur);
  this.scrollbarXActive = null;
  this.scrollbarXWidth = null;
  this.scrollbarXLeft = null;
  var railXStyle = get(this.scrollbarXRail);
  this.scrollbarXBottom = parseInt(railXStyle.bottom, 10);
  if (isNaN(this.scrollbarXBottom)) {
    this.isScrollbarXUsingBottom = false;
    this.scrollbarXTop = toInt(railXStyle.top);
  } else {
    this.isScrollbarXUsingBottom = true;
  }
  this.railBorderXWidth =
    toInt(railXStyle.borderLeftWidth) + toInt(railXStyle.borderRightWidth);
  // Set rail to display:block to calculate margins
  set(this.scrollbarXRail, { display: 'block' });
  this.railXMarginWidth =
    toInt(railXStyle.marginLeft) + toInt(railXStyle.marginRight);
  set(this.scrollbarXRail, { display: '' });
  this.railXWidth = null;
  this.railXRatio = null;

  this.scrollbarYRail = div(cls.element.rail('y'));
  element.appendChild(this.scrollbarYRail);
  this.scrollbarY = div(cls.element.thumb('y'));
  this.scrollbarYRail.appendChild(this.scrollbarY);
  this.scrollbarY.setAttribute('tabindex', 0);
  this.event.bind(this.scrollbarY, 'focus', focus);
  this.event.bind(this.scrollbarY, 'blur', blur);
  this.scrollbarYActive = null;
  this.scrollbarYHeight = null;
  this.scrollbarYTop = null;
  var railYStyle = get(this.scrollbarYRail);
  this.scrollbarYRight = parseInt(railYStyle.right, 10);
  if (isNaN(this.scrollbarYRight)) {
    this.isScrollbarYUsingRight = false;
    this.scrollbarYLeft = toInt(railYStyle.left);
  } else {
    this.isScrollbarYUsingRight = true;
  }
  this.scrollbarYOuterWidth = this.isRtl ? outerWidth(this.scrollbarY) : null;
  this.railBorderYWidth =
    toInt(railYStyle.borderTopWidth) + toInt(railYStyle.borderBottomWidth);
  set(this.scrollbarYRail, { display: 'block' });
  this.railYMarginHeight =
    toInt(railYStyle.marginTop) + toInt(railYStyle.marginBottom);
  set(this.scrollbarYRail, { display: '' });
  this.railYHeight = null;
  this.railYRatio = null;

  this.reach = {
    x:
      element.scrollLeft <= 0
        ? 'start'
        : element.scrollLeft >= this.contentWidth - this.containerWidth
        ? 'end'
        : null,
    y:
      element.scrollTop <= 0
        ? 'start'
        : element.scrollTop >= this.contentHeight - this.containerHeight
        ? 'end'
        : null,
  };

  this.isAlive = true;

  this.settings.handlers.forEach(function (handlerName) { return handlers[handlerName](this$1); });

  this.lastScrollTop = Math.floor(element.scrollTop); // for onScroll only
  this.lastScrollLeft = element.scrollLeft; // for onScroll only
  this.event.bind(this.element, 'scroll', function (e) { return this$1.onScroll(e); });
  updateGeometry(this);
};

PerfectScrollbar.prototype.update = function update () {
  if (!this.isAlive) {
    return;
  }

  // Recalcuate negative scrollLeft adjustment
  this.negativeScrollAdjustment = this.isNegativeScroll
    ? this.element.scrollWidth - this.element.clientWidth
    : 0;

  // Recalculate rail margins
  set(this.scrollbarXRail, { display: 'block' });
  set(this.scrollbarYRail, { display: 'block' });
  this.railXMarginWidth =
    toInt(get(this.scrollbarXRail).marginLeft) +
    toInt(get(this.scrollbarXRail).marginRight);
  this.railYMarginHeight =
    toInt(get(this.scrollbarYRail).marginTop) +
    toInt(get(this.scrollbarYRail).marginBottom);

  // Hide scrollbars not to affect scrollWidth and scrollHeight
  set(this.scrollbarXRail, { display: 'none' });
  set(this.scrollbarYRail, { display: 'none' });

  updateGeometry(this);

  processScrollDiff(this, 'top', 0, false, true);
  processScrollDiff(this, 'left', 0, false, true);

  set(this.scrollbarXRail, { display: '' });
  set(this.scrollbarYRail, { display: '' });
};

PerfectScrollbar.prototype.onScroll = function onScroll (e) {
  if (!this.isAlive) {
    return;
  }

  updateGeometry(this);
  processScrollDiff(this, 'top', this.element.scrollTop - this.lastScrollTop);
  processScrollDiff(
    this,
    'left',
    this.element.scrollLeft - this.lastScrollLeft
  );

  this.lastScrollTop = Math.floor(this.element.scrollTop);
  this.lastScrollLeft = this.element.scrollLeft;
};

PerfectScrollbar.prototype.destroy = function destroy () {
  if (!this.isAlive) {
    return;
  }

  this.event.unbindAll();
  remove(this.scrollbarX);
  remove(this.scrollbarY);
  remove(this.scrollbarXRail);
  remove(this.scrollbarYRail);
  this.removePsClasses();

  // unset elements
  this.element = null;
  this.scrollbarX = null;
  this.scrollbarY = null;
  this.scrollbarXRail = null;
  this.scrollbarYRail = null;

  this.isAlive = false;
};

PerfectScrollbar.prototype.removePsClasses = function removePsClasses () {
  this.element.className = this.element.className
    .split(' ')
    .filter(function (name) { return !name.match(/^ps([-_].+|)$/); })
    .join(' ');
};

var scrollbar = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();



var _react2 = _interopRequireDefault(React__default['default']);





var _perfectScrollbar2 = _interopRequireDefault(PerfectScrollbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var handlerNameByEvent = {
  'ps-scroll-y': 'onScrollY',
  'ps-scroll-x': 'onScrollX',
  'ps-scroll-up': 'onScrollUp',
  'ps-scroll-down': 'onScrollDown',
  'ps-scroll-left': 'onScrollLeft',
  'ps-scroll-right': 'onScrollRight',
  'ps-y-reach-start': 'onYReachStart',
  'ps-y-reach-end': 'onYReachEnd',
  'ps-x-reach-start': 'onXReachStart',
  'ps-x-reach-end': 'onXReachEnd'
};
Object.freeze(handlerNameByEvent);

var ScrollBar = function (_Component) {
  _inherits(ScrollBar, _Component);

  function ScrollBar(props) {
    _classCallCheck(this, ScrollBar);

    var _this = _possibleConstructorReturn(this, (ScrollBar.__proto__ || Object.getPrototypeOf(ScrollBar)).call(this, props));

    _this.handleRef = _this.handleRef.bind(_this);
    _this._handlerByEvent = {};
    return _this;
  }

  _createClass(ScrollBar, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.option) {
        console.warn('react-perfect-scrollbar: the "option" prop has been deprecated in favor of "options"');
      }

      this._ps = new _perfectScrollbar2.default(this._container, this.props.options || this.props.option);
      // hook up events
      this._updateEventHook();
      this._updateClassName();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      this._updateEventHook(prevProps);

      this.updateScroll();

      if (prevProps.className !== this.props.className) {
        this._updateClassName();
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      var _this2 = this;

      // unhook up evens
      Object.keys(this._handlerByEvent).forEach(function (key) {
        var value = _this2._handlerByEvent[key];

        if (value) {
          _this2._container.removeEventListener(key, value, false);
        }
      });
      this._handlerByEvent = {};
      this._ps.destroy();
      this._ps = null;
    }
  }, {
    key: '_updateEventHook',
    value: function _updateEventHook() {
      var _this3 = this;

      var prevProps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

      // hook up events
      Object.keys(handlerNameByEvent).forEach(function (key) {
        var callback = _this3.props[handlerNameByEvent[key]];
        var prevCallback = prevProps[handlerNameByEvent[key]];
        if (callback !== prevCallback) {
          if (prevCallback) {
            var prevHandler = _this3._handlerByEvent[key];
            _this3._container.removeEventListener(key, prevHandler, false);
            _this3._handlerByEvent[key] = null;
          }
          if (callback) {
            var handler = function handler() {
              return callback(_this3._container);
            };
            _this3._container.addEventListener(key, handler, false);
            _this3._handlerByEvent[key] = handler;
          }
        }
      });
    }
  }, {
    key: '_updateClassName',
    value: function _updateClassName() {
      var className = this.props.className;


      var psClassNames = this._container.className.split(' ').filter(function (name) {
        return name.match(/^ps([-_].+|)$/);
      }).join(' ');

      if (this._container) {
        this._container.className = 'scrollbar-container' + (className ? ' ' + className : '') + (psClassNames ? ' ' + psClassNames : '');
      }
    }
  }, {
    key: 'updateScroll',
    value: function updateScroll() {
      this.props.onSync(this._ps);
    }
  }, {
    key: 'handleRef',
    value: function handleRef(ref) {
      this._container = ref;
      this.props.containerRef(ref);
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          className = _props.className,
          style = _props.style,
          option = _props.option,
          options = _props.options,
          containerRef = _props.containerRef,
          onScrollY = _props.onScrollY,
          onScrollX = _props.onScrollX,
          onScrollUp = _props.onScrollUp,
          onScrollDown = _props.onScrollDown,
          onScrollLeft = _props.onScrollLeft,
          onScrollRight = _props.onScrollRight,
          onYReachStart = _props.onYReachStart,
          onYReachEnd = _props.onYReachEnd,
          onXReachStart = _props.onXReachStart,
          onXReachEnd = _props.onXReachEnd,
          component = _props.component,
          onSync = _props.onSync,
          children = _props.children,
          remainProps = _objectWithoutProperties(_props, ['className', 'style', 'option', 'options', 'containerRef', 'onScrollY', 'onScrollX', 'onScrollUp', 'onScrollDown', 'onScrollLeft', 'onScrollRight', 'onYReachStart', 'onYReachEnd', 'onXReachStart', 'onXReachEnd', 'component', 'onSync', 'children']);

      var Comp = component;

      return _react2.default.createElement(
        Comp,
        _extends({ style: style, ref: this.handleRef }, remainProps),
        children
      );
    }
  }]);

  return ScrollBar;
}(React__default['default'].Component);

exports.default = ScrollBar;


ScrollBar.defaultProps = {
  className: '',
  style: undefined,
  option: undefined,
  options: undefined,
  containerRef: function containerRef() {},
  onScrollY: undefined,
  onScrollX: undefined,
  onScrollUp: undefined,
  onScrollDown: undefined,
  onScrollLeft: undefined,
  onScrollRight: undefined,
  onYReachStart: undefined,
  onYReachEnd: undefined,
  onXReachStart: undefined,
  onXReachEnd: undefined,
  onSync: function onSync(ps) {
    return ps.update();
  },
  component: 'div'
};

ScrollBar.propTypes = {
  children: PropTypes__default['default'].PropTypes.node.isRequired,
  className: PropTypes__default['default'].PropTypes.string,
  style: PropTypes__default['default'].PropTypes.object,
  option: PropTypes__default['default'].PropTypes.object,
  options: PropTypes__default['default'].PropTypes.object,
  containerRef: PropTypes__default['default'].PropTypes.func,
  onScrollY: PropTypes__default['default'].PropTypes.func,
  onScrollX: PropTypes__default['default'].PropTypes.func,
  onScrollUp: PropTypes__default['default'].PropTypes.func,
  onScrollDown: PropTypes__default['default'].PropTypes.func,
  onScrollLeft: PropTypes__default['default'].PropTypes.func,
  onScrollRight: PropTypes__default['default'].PropTypes.func,
  onYReachStart: PropTypes__default['default'].PropTypes.func,
  onYReachEnd: PropTypes__default['default'].PropTypes.func,
  onXReachStart: PropTypes__default['default'].PropTypes.func,
  onXReachEnd: PropTypes__default['default'].PropTypes.func,
  onSync: PropTypes__default['default'].PropTypes.func,
  component: PropTypes__default['default'].PropTypes.string
};
module.exports = exports['default'];
});

unwrapExports(scrollbar);

var lib = createCommonjsModule(function (module, exports) {

Object.defineProperty(exports, "__esModule", {
  value: true
});



var _scrollbar2 = _interopRequireDefault(scrollbar);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _scrollbar2.default;
module.exports = exports['default'];
});

var PerfectScrollbar$1 = unwrapExports(lib);

var ScrollableArea = function ScrollableArea(_ref) {
  var children = _ref.children;
  var areaRef = React.useRef(null);
  React.useEffect(function () {
    if (typeof window !== "undefined") {
      window.addEventListener("resize", handleResize, false);
    }

    return function () {
      if (typeof window !== "undefined") {
        window.removeEventListener("resize", handleResize, false);
      }
    };
  }, []);

  var handleResize = function handleResize() {
    areaRef.current.updateScroll();
  };

  return /*#__PURE__*/React__default['default'].createElement(PerfectScrollbar$1, {
    ref: areaRef
  }, children);
};

var AppNav = function AppNav(_ref) {
  var logo = _ref.logo,
      title = _ref.title,
      children = _ref.children;
  var layout = React.useContext(AppContext); // Classes

  var baseClasses = classNames__default['default'](styles$r.base, _defineProperty({}, styles$r.isActive, layout.navActive));
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.content
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.logo
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.wrapper
  }, logo)), /*#__PURE__*/React__default['default'].createElement(ScrollableArea, null, title ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.header
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.title
  }, title)) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.menu
  }, children)), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$r.fade
  })), /*#__PURE__*/React__default['default'].createElement(Clickable, {
    onClick: function onClick() {
      return layout.setNavActive(false);
    },
    className: styles$r.overlay
  }));
};

var styles$s = undefined;

var Menu = function Menu(_ref) {
  var children = _ref.children,
      className = _ref.className;
  return /*#__PURE__*/React__default['default'].createElement("nav", {
    className: classNames__default['default'](styles$s.base, className)
  }, children);
};

var MenuItem = function MenuItem(_ref) {
  var icon = _ref.icon,
      link = _ref.link,
      indicator = _ref.indicator,
      children = _ref.children;
  // Classes
  var pathName = window.location.pathname;
  var itemClasses = classNames__default['default'](styles$s.item, _defineProperty({}, styles$s.selected, link && pathName.startsWith(link)));
  return /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: itemClasses,
    link: link
  }, icon ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$s.icon
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: icon
  })) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$s.label
  }, children), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$s.indicators
  }, indicator ? indicator : /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$s.arrow,
    name: "chevron-right"
  })));
};

var MenuHeading = function MenuHeading(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$s.heading
  }, children);
};

AppNav.Menu = Menu;
AppNav.MenuItem = MenuItem;
AppNav.MenuHeading = MenuHeading;

var AppLayout = function AppLayout(_ref) {
  var children = _ref.children;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      navActive = _useState2[0],
      setNavActive = _useState2[1];

  var _useState3 = React.useState(false),
      _useState4 = _slicedToArray(_useState3, 2),
      subBarActive = _useState4[0],
      setSubBarActive = _useState4[1]; // Iterate children


  var nav = null;
  var bar = null;
  var content = null;
  React__default['default'].Children.forEach(children, function (child) {
    switch (child.type) {
      case AppNav:
        nav = child;
        break;

      case AppBar:
        bar = child;
        break;

      case AppContent:
        content = child;
        break;
    }
  });
  return /*#__PURE__*/React__default['default'].createElement(AppContext.Provider, {
    value: {
      navActive: navActive,
      setNavActive: setNavActive,
      subBarActive: subBarActive,
      setSubBarActive: setSubBarActive
    }
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$q.base
  }, nav ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$q.left
  }, nav) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$q.right
  }, bar ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$q.bar
  }, bar) : null, content ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$q.content
  }, content) : null)));
};

var styles$t = undefined;

var ComponentWrapper = function ComponentWrapper(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$t.base
  }, children);
};

var styles$u = undefined;

/**
 * Enable / disable browser scrolling
 */
var scrollUtils = {
  disableBodyScroll: function disableBodyScroll() {
    document.body.setAttribute("style", "overflow:hidden");
  },
  enableBodyScroll: function enableBodyScroll() {
    document.body.removeAttribute("style");
  }
};

var Overlay = function Overlay(_ref) {
  var visible = _ref.visible,
      className = _ref.className,
      onClick = _ref.onClick,
      scrollControl = _ref.scrollControl;
  React.useEffect(function () {
    if (visible && scrollControl) {
      scrollUtils.disableBodyScroll();
    } else {
      scrollUtils.enableBodyScroll();
    }

    return function () {
      scrollUtils.enableBodyScroll();
    };
  }, [visible]); // Classes

  var baseClasses = classNames__default['default'](styles$u.base, _defineProperty({}, styles$u.visible, visible), className);
  return /*#__PURE__*/React__default['default'].createElement(Clickable, {
    block: true,
    className: baseClasses,
    onClick: onClick
  });
};
Overlay.defaultValues = {
  scrollControl: true
};

var styles$v = undefined;

var Splash = function Splash(_ref) {
  var logo = _ref.logo,
      footer = _ref.footer,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.base
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.center
  }, logo ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.logo
  }, logo) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.box
  }, children)), footer ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.footer
  }, footer) : null);
};

var SplashTitle = function SplashTitle(_ref) {
  var children = _ref.children,
      description = _ref.description;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.title
  }, children, description ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.description
  }, description) : null);
};

var SplashContent = function SplashContent(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$v.content
  }, children);
};

var WindowResizeListener = function WindowResizeListener(_ref) {
  var onResize = _ref.onResize;
  React.useEffect(function () {
    if (typeof window !== "undefined") {
      window.addEventListener("resize", handleResize, false);
    }

    return function () {
      if (typeof window !== "undefined") {
        window.removeEventListener("resize", handleResize, false);
      }
    };
  }, []);

  var handleResize = function handleResize(event) {
    onResize && onResize(event);
  };

  return /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      display: "none",
      visibility: "hidden"
    }
  });
};

var styles$w = undefined;

function _extends$1() {
  _extends$1 = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends$1.apply(this, arguments);
}

function _arrayWithHoles$3(arr) {
  if (Array.isArray(arr)) return arr;
}

function _iterableToArrayLimit$3(arr, i) {
  if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
  var _arr = [];
  var _n = true;
  var _d = false;
  var _e = undefined;

  try {
    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

function _arrayLikeToArray$3(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _unsupportedIterableToArray$3(o, minLen) {
  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$3(o, minLen);
  var n = Object.prototype.toString.call(o).slice(8, -1);
  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return Array.from(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);
}

function _nonIterableRest$3() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _slicedToArray$3(arr, i) {
  return _arrayWithHoles$3(arr) || _iterableToArrayLimit$3(arr, i) || _unsupportedIterableToArray$3(arr, i) || _nonIterableRest$3();
}

function _defineProperty$2(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? Object(arguments[i]) : {};
    var ownKeys = Object.keys(source);

    if (typeof Object.getOwnPropertySymbols === 'function') {
      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {
        return Object.getOwnPropertyDescriptor(source, sym).enumerable;
      }));
    }

    ownKeys.forEach(function (key) {
      _defineProperty$2(target, key, source[key]);
    });
  }

  return target;
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;
    Object.defineProperty(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

function _typeof$1(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof$1 = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof$1 = function _typeof(obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof$1(obj);
}

function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof$1(call) === "object" || typeof call === "function")) {
    return call;
  }

  return _assertThisInitialized(self);
}

function _getPrototypeOf(o) {
  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {
    return o.__proto__ || Object.getPrototypeOf(o);
  };
  return _getPrototypeOf(o);
}

function _setPrototypeOf(o, p) {
  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = Object.create(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf(subClass, superClass);
}

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */

var invariant = function(condition, format, a, b, c, d, e, f) {
  if (process.env.NODE_ENV !== 'production') {
    if (format === undefined) {
      throw new Error('invariant requires an error message argument');
    }
  }

  if (!condition) {
    var error;
    if (format === undefined) {
      error = new Error(
        'Minified exception occurred; use the non-minified dev environment ' +
        'for the full error message and additional helpful warnings.'
      );
    } else {
      var args = [a, b, c, d, e, f];
      var argIndex = 0;
      error = new Error(
        format.replace(/%s/g, function() { return args[argIndex++]; })
      );
      error.name = 'Invariant Violation';
    }

    error.framesToPop = 1; // we don't care about invariant's own frame
    throw error;
  }
};

var browser = invariant;

function _arrayWithoutHoles$2(arr) {
  if (Array.isArray(arr)) return _arrayLikeToArray$3(arr);
}

function _iterableToArray$2(iter) {
  if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
}

function _nonIterableSpread$2() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

function _toConsumableArray$2(arr) {
  return _arrayWithoutHoles$2(arr) || _iterableToArray$2(arr) || _unsupportedIterableToArray$3(arr) || _nonIterableSpread$2();
}

var Manager = function () {
  function Manager() {
    _classCallCheck(this, Manager);

    _defineProperty$2(this, "refs", {});
  }

  _createClass(Manager, [{
    key: "add",
    value: function add(collection, ref) {
      if (!this.refs[collection]) {
        this.refs[collection] = [];
      }

      this.refs[collection].push(ref);
    }
  }, {
    key: "remove",
    value: function remove(collection, ref) {
      var index = this.getIndex(collection, ref);

      if (index !== -1) {
        this.refs[collection].splice(index, 1);
      }
    }
  }, {
    key: "isActive",
    value: function isActive() {
      return this.active;
    }
  }, {
    key: "getActive",
    value: function getActive() {
      var _this = this;

      return this.refs[this.active.collection].find(function (_ref) {
        var node = _ref.node;
        return node.sortableInfo.index == _this.active.index;
      });
    }
  }, {
    key: "getIndex",
    value: function getIndex(collection, ref) {
      return this.refs[collection].indexOf(ref);
    }
  }, {
    key: "getOrderedRefs",
    value: function getOrderedRefs() {
      var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.active.collection;
      return this.refs[collection].sort(sortByIndex);
    }
  }]);

  return Manager;
}();

function sortByIndex(_ref2, _ref3) {
  var index1 = _ref2.node.sortableInfo.index;
  var index2 = _ref3.node.sortableInfo.index;
  return index1 - index2;
}
function omit(obj, keysToOmit) {
  return Object.keys(obj).reduce(function (acc, key) {
    if (keysToOmit.indexOf(key) === -1) {
      acc[key] = obj[key];
    }

    return acc;
  }, {});
}
var events = {
  end: ['touchend', 'touchcancel', 'mouseup'],
  move: ['touchmove', 'mousemove'],
  start: ['touchstart', 'mousedown']
};
var vendorPrefix = function () {
  if (typeof window === 'undefined' || typeof document === 'undefined') {
    return '';
  }

  var styles = window.getComputedStyle(document.documentElement, '') || ['-moz-hidden-iframe'];
  var pre = (Array.prototype.slice.call(styles).join('').match(/-(moz|webkit|ms)-/) || styles.OLink === '' && ['', 'o'])[1];

  switch (pre) {
    case 'ms':
      return 'ms';

    default:
      return pre && pre.length ? pre[0].toUpperCase() + pre.substr(1) : '';
  }
}();
function setInlineStyles(node, styles) {
  Object.keys(styles).forEach(function (key) {
    node.style[key] = styles[key];
  });
}
function setTranslate3d(node, translate) {
  node.style["".concat(vendorPrefix, "Transform")] = translate == null ? '' : "translate3d(".concat(translate.x, "px,").concat(translate.y, "px,0)");
}
function setTransitionDuration(node, duration) {
  node.style["".concat(vendorPrefix, "TransitionDuration")] = duration == null ? '' : "".concat(duration, "ms");
}
function closest(el, fn) {
  while (el) {
    if (fn(el)) {
      return el;
    }

    el = el.parentNode;
  }

  return null;
}
function limit(min, max, value) {
  return Math.max(min, Math.min(value, max));
}

function getPixelValue(stringValue) {
  if (stringValue.substr(-2) === 'px') {
    return parseFloat(stringValue);
  }

  return 0;
}

function getElementMargin(element) {
  var style = window.getComputedStyle(element);
  return {
    bottom: getPixelValue(style.marginBottom),
    left: getPixelValue(style.marginLeft),
    right: getPixelValue(style.marginRight),
    top: getPixelValue(style.marginTop)
  };
}
function provideDisplayName(prefix, Component$$1) {
  var componentName = Component$$1.displayName || Component$$1.name;
  return componentName ? "".concat(prefix, "(").concat(componentName, ")") : prefix;
}
function getScrollAdjustedBoundingClientRect(node, scrollDelta) {
  var boundingClientRect = node.getBoundingClientRect();
  return {
    top: boundingClientRect.top + scrollDelta.top,
    left: boundingClientRect.left + scrollDelta.left
  };
}
function getPosition(event) {
  if (event.touches && event.touches.length) {
    return {
      x: event.touches[0].pageX,
      y: event.touches[0].pageY
    };
  } else if (event.changedTouches && event.changedTouches.length) {
    return {
      x: event.changedTouches[0].pageX,
      y: event.changedTouches[0].pageY
    };
  } else {
    return {
      x: event.pageX,
      y: event.pageY
    };
  }
}
function isTouchEvent(event) {
  return event.touches && event.touches.length || event.changedTouches && event.changedTouches.length;
}
function getEdgeOffset(node, parent) {
  var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {
    left: 0,
    top: 0
  };

  if (!node) {
    return undefined;
  }

  var nodeOffset = {
    left: offset.left + node.offsetLeft,
    top: offset.top + node.offsetTop
  };

  if (node.parentNode === parent) {
    return nodeOffset;
  }

  return getEdgeOffset(node.parentNode, parent, nodeOffset);
}
function getTargetIndex(newIndex, prevIndex, oldIndex) {
  if (newIndex < oldIndex && newIndex > prevIndex) {
    return newIndex - 1;
  } else if (newIndex > oldIndex && newIndex < prevIndex) {
    return newIndex + 1;
  } else {
    return newIndex;
  }
}
function getLockPixelOffset(_ref) {
  var lockOffset = _ref.lockOffset,
      width = _ref.width,
      height = _ref.height;
  var offsetX = lockOffset;
  var offsetY = lockOffset;
  var unit = 'px';

  if (typeof lockOffset === 'string') {
    var match = /^[+-]?\d*(?:\.\d*)?(px|%)$/.exec(lockOffset);
    browser(match !== null, 'lockOffset value should be a number or a string of a ' + 'number followed by "px" or "%". Given %s', lockOffset);
    offsetX = parseFloat(lockOffset);
    offsetY = parseFloat(lockOffset);
    unit = match[1];
  }

  browser(isFinite(offsetX) && isFinite(offsetY), 'lockOffset value should be a finite. Given %s', lockOffset);

  if (unit === '%') {
    offsetX = offsetX * width / 100;
    offsetY = offsetY * height / 100;
  }

  return {
    x: offsetX,
    y: offsetY
  };
}
function getLockPixelOffsets(_ref2) {
  var height = _ref2.height,
      width = _ref2.width,
      lockOffset = _ref2.lockOffset;
  var offsets = Array.isArray(lockOffset) ? lockOffset : [lockOffset, lockOffset];
  browser(offsets.length === 2, 'lockOffset prop of SortableContainer should be a single ' + 'value or an array of exactly two values. Given %s', lockOffset);

  var _offsets = _slicedToArray$3(offsets, 2),
      minLockOffset = _offsets[0],
      maxLockOffset = _offsets[1];

  return [getLockPixelOffset({
    height: height,
    lockOffset: minLockOffset,
    width: width
  }), getLockPixelOffset({
    height: height,
    lockOffset: maxLockOffset,
    width: width
  })];
}

function isScrollable(el) {
  var computedStyle = window.getComputedStyle(el);
  var overflowRegex = /(auto|scroll)/;
  var properties = ['overflow', 'overflowX', 'overflowY'];
  return properties.find(function (property) {
    return overflowRegex.test(computedStyle[property]);
  });
}

function getScrollingParent(el) {
  if (!(el instanceof HTMLElement)) {
    return null;
  } else if (isScrollable(el)) {
    return el;
  } else {
    return getScrollingParent(el.parentNode);
  }
}
function getContainerGridGap(element) {
  var style = window.getComputedStyle(element);

  if (style.display === 'grid') {
    return {
      x: getPixelValue(style.gridColumnGap),
      y: getPixelValue(style.gridRowGap)
    };
  }

  return {
    x: 0,
    y: 0
  };
}
var KEYCODE = {
  TAB: 9,
  ESC: 27,
  SPACE: 32,
  LEFT: 37,
  UP: 38,
  RIGHT: 39,
  DOWN: 40
};
var NodeType = {
  Anchor: 'A',
  Button: 'BUTTON',
  Canvas: 'CANVAS',
  Input: 'INPUT',
  Option: 'OPTION',
  Textarea: 'TEXTAREA',
  Select: 'SELECT'
};
function cloneNode(node) {
  var selector = 'input, textarea, select, canvas, [contenteditable]';
  var fields = node.querySelectorAll(selector);
  var clonedNode = node.cloneNode(true);

  var clonedFields = _toConsumableArray$2(clonedNode.querySelectorAll(selector));

  clonedFields.forEach(function (field, i) {
    if (field.type !== 'file') {
      field.value = fields[i].value;
    }

    if (field.type === 'radio' && field.name) {
      field.name = "__sortableClone__".concat(field.name);
    }

    if (field.tagName === NodeType.Canvas && fields[i].width > 0 && fields[i].height > 0) {
      var destCtx = field.getContext('2d');
      destCtx.drawImage(fields[i], 0, 0);
    }
  });
  return clonedNode;
}

function sortableHandle(WrappedComponent) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    withRef: false
  };
  return _temp = _class = function (_React$Component) {
    _inherits(WithSortableHandle, _React$Component);

    function WithSortableHandle() {
      _classCallCheck(this, WithSortableHandle);

      return _possibleConstructorReturn(this, _getPrototypeOf(WithSortableHandle).apply(this, arguments));
    }

    _createClass(WithSortableHandle, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        var node = ReactDOM.findDOMNode(this);
        node.sortableHandle = true;
      }
    }, {
      key: "getWrappedInstance",
      value: function getWrappedInstance() {
        browser(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableHandle() call');
        return this.refs.wrappedInstance;
      }
    }, {
      key: "render",
      value: function render() {
        var ref = config.withRef ? 'wrappedInstance' : null;
        return React.createElement(WrappedComponent, _extends$1({
          ref: ref
        }, this.props));
      }
    }]);

    return WithSortableHandle;
  }(React.Component), _defineProperty$2(_class, "displayName", provideDisplayName('sortableHandle', WrappedComponent)), _temp;
}
function isSortableHandle(node) {
  return node.sortableHandle != null;
}

var AutoScroller = function () {
  function AutoScroller(container, onScrollCallback) {
    _classCallCheck(this, AutoScroller);

    this.container = container;
    this.onScrollCallback = onScrollCallback;
  }

  _createClass(AutoScroller, [{
    key: "clear",
    value: function clear() {
      if (this.interval == null) {
        return;
      }

      clearInterval(this.interval);
      this.interval = null;
    }
  }, {
    key: "update",
    value: function update(_ref) {
      var _this = this;

      var translate = _ref.translate,
          minTranslate = _ref.minTranslate,
          maxTranslate = _ref.maxTranslate,
          width = _ref.width,
          height = _ref.height;
      var direction = {
        x: 0,
        y: 0
      };
      var speed = {
        x: 1,
        y: 1
      };
      var acceleration = {
        x: 10,
        y: 10
      };
      var _this$container = this.container,
          scrollTop = _this$container.scrollTop,
          scrollLeft = _this$container.scrollLeft,
          scrollHeight = _this$container.scrollHeight,
          scrollWidth = _this$container.scrollWidth,
          clientHeight = _this$container.clientHeight,
          clientWidth = _this$container.clientWidth;
      var isTop = scrollTop === 0;
      var isBottom = scrollHeight - scrollTop - clientHeight === 0;
      var isLeft = scrollLeft === 0;
      var isRight = scrollWidth - scrollLeft - clientWidth === 0;

      if (translate.y >= maxTranslate.y - height / 2 && !isBottom) {
        direction.y = 1;
        speed.y = acceleration.y * Math.abs((maxTranslate.y - height / 2 - translate.y) / height);
      } else if (translate.x >= maxTranslate.x - width / 2 && !isRight) {
        direction.x = 1;
        speed.x = acceleration.x * Math.abs((maxTranslate.x - width / 2 - translate.x) / width);
      } else if (translate.y <= minTranslate.y + height / 2 && !isTop) {
        direction.y = -1;
        speed.y = acceleration.y * Math.abs((translate.y - height / 2 - minTranslate.y) / height);
      } else if (translate.x <= minTranslate.x + width / 2 && !isLeft) {
        direction.x = -1;
        speed.x = acceleration.x * Math.abs((translate.x - width / 2 - minTranslate.x) / width);
      }

      if (this.interval) {
        this.clear();
        this.isAutoScrolling = false;
      }

      if (direction.x !== 0 || direction.y !== 0) {
        this.interval = setInterval(function () {
          _this.isAutoScrolling = true;
          var offset = {
            left: speed.x * direction.x,
            top: speed.y * direction.y
          };
          _this.container.scrollTop += offset.top;
          _this.container.scrollLeft += offset.left;

          _this.onScrollCallback(offset);
        }, 5);
      }
    }
  }]);

  return AutoScroller;
}();

function defaultGetHelperDimensions(_ref) {
  var node = _ref.node;
  return {
    height: node.offsetHeight,
    width: node.offsetWidth
  };
}

function defaultShouldCancelStart(event) {
  var interactiveElements = [NodeType.Input, NodeType.Textarea, NodeType.Select, NodeType.Option, NodeType.Button];

  if (interactiveElements.indexOf(event.target.tagName) !== -1) {
    return true;
  }

  if (closest(event.target, function (el) {
    return el.contentEditable === 'true';
  })) {
    return true;
  }

  return false;
}

var propTypes = {
  axis: PropTypes__default['default'].oneOf(['x', 'y', 'xy']),
  contentWindow: PropTypes__default['default'].any,
  disableAutoscroll: PropTypes__default['default'].bool,
  distance: PropTypes__default['default'].number,
  getContainer: PropTypes__default['default'].func,
  getHelperDimensions: PropTypes__default['default'].func,
  helperClass: PropTypes__default['default'].string,
  helperContainer: PropTypes__default['default'].oneOfType([PropTypes__default['default'].func, typeof HTMLElement === 'undefined' ? PropTypes__default['default'].any : PropTypes__default['default'].instanceOf(HTMLElement)]),
  hideSortableGhost: PropTypes__default['default'].bool,
  keyboardSortingTransitionDuration: PropTypes__default['default'].number,
  lockAxis: PropTypes__default['default'].string,
  lockOffset: PropTypes__default['default'].oneOfType([PropTypes__default['default'].number, PropTypes__default['default'].string, PropTypes__default['default'].arrayOf(PropTypes__default['default'].oneOfType([PropTypes__default['default'].number, PropTypes__default['default'].string]))]),
  lockToContainerEdges: PropTypes__default['default'].bool,
  onSortEnd: PropTypes__default['default'].func,
  onSortMove: PropTypes__default['default'].func,
  onSortOver: PropTypes__default['default'].func,
  onSortStart: PropTypes__default['default'].func,
  pressDelay: PropTypes__default['default'].number,
  pressThreshold: PropTypes__default['default'].number,
  keyCodes: PropTypes__default['default'].shape({
    lift: PropTypes__default['default'].arrayOf(PropTypes__default['default'].number),
    drop: PropTypes__default['default'].arrayOf(PropTypes__default['default'].number),
    cancel: PropTypes__default['default'].arrayOf(PropTypes__default['default'].number),
    up: PropTypes__default['default'].arrayOf(PropTypes__default['default'].number),
    down: PropTypes__default['default'].arrayOf(PropTypes__default['default'].number)
  }),
  shouldCancelStart: PropTypes__default['default'].func,
  transitionDuration: PropTypes__default['default'].number,
  updateBeforeSortStart: PropTypes__default['default'].func,
  useDragHandle: PropTypes__default['default'].bool,
  useWindowAsScrollContainer: PropTypes__default['default'].bool
};
var defaultKeyCodes = {
  lift: [KEYCODE.SPACE],
  drop: [KEYCODE.SPACE],
  cancel: [KEYCODE.ESC],
  up: [KEYCODE.UP, KEYCODE.LEFT],
  down: [KEYCODE.DOWN, KEYCODE.RIGHT]
};
var defaultProps$1 = {
  axis: 'y',
  disableAutoscroll: false,
  distance: 0,
  getHelperDimensions: defaultGetHelperDimensions,
  hideSortableGhost: true,
  lockOffset: '50%',
  lockToContainerEdges: false,
  pressDelay: 0,
  pressThreshold: 5,
  keyCodes: defaultKeyCodes,
  shouldCancelStart: defaultShouldCancelStart,
  transitionDuration: 300,
  useWindowAsScrollContainer: false
};
var omittedProps = Object.keys(propTypes);
function validateProps(props) {
  browser(!(props.distance && props.pressDelay), 'Attempted to set both `pressDelay` and `distance` on SortableContainer, you may only use one or the other, not both at the same time.');
}

function _finallyRethrows(body, finalizer) {
  try {
    var result = body();
  } catch (e) {
    return finalizer(true, e);
  }

  if (result && result.then) {
    return result.then(finalizer.bind(null, false), finalizer.bind(null, true));
  }

  return finalizer(false, value);
}
function sortableContainer(WrappedComponent) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    withRef: false
  };
  return _temp = _class = function (_React$Component) {
    _inherits(WithSortableContainer, _React$Component);

    function WithSortableContainer(props) {
      var _this;

      _classCallCheck(this, WithSortableContainer);

      _this = _possibleConstructorReturn(this, _getPrototypeOf(WithSortableContainer).call(this, props));

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "state", {});

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleStart", function (event) {
        var _this$props = _this.props,
            distance = _this$props.distance,
            shouldCancelStart = _this$props.shouldCancelStart;

        if (event.button === 2 || shouldCancelStart(event)) {
          return;
        }

        _this.touched = true;
        _this.position = getPosition(event);
        var node = closest(event.target, function (el) {
          return el.sortableInfo != null;
        });

        if (node && node.sortableInfo && _this.nodeIsChild(node) && !_this.state.sorting) {
          var useDragHandle = _this.props.useDragHandle;
          var _node$sortableInfo = node.sortableInfo,
              index = _node$sortableInfo.index,
              collection = _node$sortableInfo.collection,
              disabled = _node$sortableInfo.disabled;

          if (disabled) {
            return;
          }

          if (useDragHandle && !closest(event.target, isSortableHandle)) {
            return;
          }

          _this.manager.active = {
            collection: collection,
            index: index
          };

          if (!isTouchEvent(event) && event.target.tagName === NodeType.Anchor) {
            event.preventDefault();
          }

          if (!distance) {
            if (_this.props.pressDelay === 0) {
              _this.handlePress(event);
            } else {
              _this.pressTimer = setTimeout(function () {
                return _this.handlePress(event);
              }, _this.props.pressDelay);
            }
          }
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "nodeIsChild", function (node) {
        return node.sortableInfo.manager === _this.manager;
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleMove", function (event) {
        var _this$props2 = _this.props,
            distance = _this$props2.distance,
            pressThreshold = _this$props2.pressThreshold;

        if (!_this.state.sorting && _this.touched && !_this._awaitingUpdateBeforeSortStart) {
          var position = getPosition(event);
          var delta = {
            x: _this.position.x - position.x,
            y: _this.position.y - position.y
          };
          var combinedDelta = Math.abs(delta.x) + Math.abs(delta.y);
          _this.delta = delta;

          if (!distance && (!pressThreshold || combinedDelta >= pressThreshold)) {
            clearTimeout(_this.cancelTimer);
            _this.cancelTimer = setTimeout(_this.cancel, 0);
          } else if (distance && combinedDelta >= distance && _this.manager.isActive()) {
            _this.handlePress(event);
          }
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleEnd", function () {
        _this.touched = false;

        _this.cancel();
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "cancel", function () {
        var distance = _this.props.distance;
        var sorting = _this.state.sorting;

        if (!sorting) {
          if (!distance) {
            clearTimeout(_this.pressTimer);
          }

          _this.manager.active = null;
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handlePress", function (event) {
        try {
          var active = _this.manager.getActive();

          var _temp6 = function () {
            if (active) {
              var _temp7 = function _temp7() {
                var index = _node.sortableInfo.index;
                var margin = getElementMargin(_node);
                var gridGap = getContainerGridGap(_this.container);

                var containerBoundingRect = _this.scrollContainer.getBoundingClientRect();

                var dimensions = _getHelperDimensions({
                  index: index,
                  node: _node,
                  collection: _collection
                });

                _this.node = _node;
                _this.margin = margin;
                _this.gridGap = gridGap;
                _this.width = dimensions.width;
                _this.height = dimensions.height;
                _this.marginOffset = {
                  x: _this.margin.left + _this.margin.right + _this.gridGap.x,
                  y: Math.max(_this.margin.top, _this.margin.bottom, _this.gridGap.y)
                };
                _this.boundingClientRect = _node.getBoundingClientRect();
                _this.containerBoundingRect = containerBoundingRect;
                _this.index = index;
                _this.newIndex = index;
                _this.axis = {
                  x: _axis.indexOf('x') >= 0,
                  y: _axis.indexOf('y') >= 0
                };
                _this.offsetEdge = getEdgeOffset(_node, _this.container);

                if (_isKeySorting) {
                  _this.initialOffset = getPosition(_objectSpread$1({}, event, {
                    pageX: _this.boundingClientRect.left,
                    pageY: _this.boundingClientRect.top
                  }));
                } else {
                  _this.initialOffset = getPosition(event);
                }

                _this.initialScroll = {
                  left: _this.scrollContainer.scrollLeft,
                  top: _this.scrollContainer.scrollTop
                };
                _this.initialWindowScroll = {
                  left: window.pageXOffset,
                  top: window.pageYOffset
                };
                _this.helper = _this.helperContainer.appendChild(cloneNode(_node));
                setInlineStyles(_this.helper, {
                  boxSizing: 'border-box',
                  height: "".concat(_this.height, "px"),
                  left: "".concat(_this.boundingClientRect.left - margin.left, "px"),
                  pointerEvents: 'none',
                  position: 'fixed',
                  top: "".concat(_this.boundingClientRect.top - margin.top, "px"),
                  width: "".concat(_this.width, "px")
                });

                if (_isKeySorting) {
                  _this.helper.focus();
                }

                if (_hideSortableGhost) {
                  _this.sortableGhost = _node;
                  setInlineStyles(_node, {
                    opacity: 0,
                    visibility: 'hidden'
                  });
                }

                _this.minTranslate = {};
                _this.maxTranslate = {};

                if (_isKeySorting) {
                  var _ref = _useWindowAsScrollContainer ? {
                    top: 0,
                    left: 0,
                    width: _this.contentWindow.innerWidth,
                    height: _this.contentWindow.innerHeight
                  } : _this.containerBoundingRect,
                      containerTop = _ref.top,
                      containerLeft = _ref.left,
                      containerWidth = _ref.width,
                      containerHeight = _ref.height;

                  var containerBottom = containerTop + containerHeight;
                  var containerRight = containerLeft + containerWidth;

                  if (_this.axis.x) {
                    _this.minTranslate.x = containerLeft - _this.boundingClientRect.left;
                    _this.maxTranslate.x = containerRight - (_this.boundingClientRect.left + _this.width);
                  }

                  if (_this.axis.y) {
                    _this.minTranslate.y = containerTop - _this.boundingClientRect.top;
                    _this.maxTranslate.y = containerBottom - (_this.boundingClientRect.top + _this.height);
                  }
                } else {
                  if (_this.axis.x) {
                    _this.minTranslate.x = (_useWindowAsScrollContainer ? 0 : containerBoundingRect.left) - _this.boundingClientRect.left - _this.width / 2;
                    _this.maxTranslate.x = (_useWindowAsScrollContainer ? _this.contentWindow.innerWidth : containerBoundingRect.left + containerBoundingRect.width) - _this.boundingClientRect.left - _this.width / 2;
                  }

                  if (_this.axis.y) {
                    _this.minTranslate.y = (_useWindowAsScrollContainer ? 0 : containerBoundingRect.top) - _this.boundingClientRect.top - _this.height / 2;
                    _this.maxTranslate.y = (_useWindowAsScrollContainer ? _this.contentWindow.innerHeight : containerBoundingRect.top + containerBoundingRect.height) - _this.boundingClientRect.top - _this.height / 2;
                  }
                }

                if (_helperClass) {
                  _helperClass.split(' ').forEach(function (className) {
                    return _this.helper.classList.add(className);
                  });
                }

                _this.listenerNode = event.touches ? _node : _this.contentWindow;

                if (_isKeySorting) {
                  _this.listenerNode.addEventListener('wheel', _this.handleKeyEnd, true);

                  _this.listenerNode.addEventListener('mousedown', _this.handleKeyEnd, true);

                  _this.listenerNode.addEventListener('keydown', _this.handleKeyDown);
                } else {
                  events.move.forEach(function (eventName) {
                    return _this.listenerNode.addEventListener(eventName, _this.handleSortMove, false);
                  });
                  events.end.forEach(function (eventName) {
                    return _this.listenerNode.addEventListener(eventName, _this.handleSortEnd, false);
                  });
                }

                _this.setState({
                  sorting: true,
                  sortingIndex: index
                });

                if (_onSortStart) {
                  _onSortStart({
                    node: _node,
                    index: index,
                    collection: _collection,
                    isKeySorting: _isKeySorting,
                    nodes: _this.manager.getOrderedRefs(),
                    helper: _this.helper
                  }, event);
                }

                if (_isKeySorting) {
                  _this.keyMove(0);
                }
              };

              var _this$props3 = _this.props,
                  _axis = _this$props3.axis,
                  _getHelperDimensions = _this$props3.getHelperDimensions,
                  _helperClass = _this$props3.helperClass,
                  _hideSortableGhost = _this$props3.hideSortableGhost,
                  updateBeforeSortStart = _this$props3.updateBeforeSortStart,
                  _onSortStart = _this$props3.onSortStart,
                  _useWindowAsScrollContainer = _this$props3.useWindowAsScrollContainer;
              var _node = active.node,
                  _collection = active.collection;
              var _isKeySorting = _this.manager.isKeySorting;

              var _temp8 = function () {
                if (typeof updateBeforeSortStart === 'function') {
                  _this._awaitingUpdateBeforeSortStart = true;

                  var _temp9 = _finallyRethrows(function () {
                    var index = _node.sortableInfo.index;
                    return Promise.resolve(updateBeforeSortStart({
                      collection: _collection,
                      index: index,
                      node: _node,
                      isKeySorting: _isKeySorting
                    }, event)).then(function () {});
                  }, function (_wasThrown, _result) {
                    _this._awaitingUpdateBeforeSortStart = false;
                    if (_wasThrown) throw _result;
                    return _result;
                  });

                  if (_temp9 && _temp9.then) return _temp9.then(function () {});
                }
              }();

              return _temp8 && _temp8.then ? _temp8.then(_temp7) : _temp7(_temp8);
            }
          }();

          return Promise.resolve(_temp6 && _temp6.then ? _temp6.then(function () {}) : void 0);
        } catch (e) {
          return Promise.reject(e);
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleSortMove", function (event) {
        var onSortMove = _this.props.onSortMove;

        if (typeof event.preventDefault === 'function') {
          event.preventDefault();
        }

        _this.updateHelperPosition(event);

        _this.animateNodes();

        _this.autoscroll();

        if (onSortMove) {
          onSortMove(event);
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleSortEnd", function (event) {
        var _this$props4 = _this.props,
            hideSortableGhost = _this$props4.hideSortableGhost,
            onSortEnd = _this$props4.onSortEnd;
        var _this$manager = _this.manager,
            collection = _this$manager.active.collection,
            isKeySorting = _this$manager.isKeySorting;

        var nodes = _this.manager.getOrderedRefs();

        if (_this.listenerNode) {
          if (isKeySorting) {
            _this.listenerNode.removeEventListener('wheel', _this.handleKeyEnd, true);

            _this.listenerNode.removeEventListener('mousedown', _this.handleKeyEnd, true);

            _this.listenerNode.removeEventListener('keydown', _this.handleKeyDown);
          } else {
            events.move.forEach(function (eventName) {
              return _this.listenerNode.removeEventListener(eventName, _this.handleSortMove);
            });
            events.end.forEach(function (eventName) {
              return _this.listenerNode.removeEventListener(eventName, _this.handleSortEnd);
            });
          }
        }

        _this.helper.parentNode.removeChild(_this.helper);

        if (hideSortableGhost && _this.sortableGhost) {
          setInlineStyles(_this.sortableGhost, {
            opacity: '',
            visibility: ''
          });
        }

        for (var i = 0, len = nodes.length; i < len; i++) {
          var _node2 = nodes[i];
          var el = _node2.node;
          _node2.edgeOffset = null;
          _node2.boundingClientRect = null;
          setTranslate3d(el, null);
          setTransitionDuration(el, null);
          _node2.translate = null;
        }

        _this.autoScroller.clear();

        _this.manager.active = null;
        _this.manager.isKeySorting = false;

        _this.setState({
          sorting: false,
          sortingIndex: null
        });

        if (typeof onSortEnd === 'function') {
          onSortEnd({
            collection: collection,
            newIndex: _this.newIndex,
            oldIndex: _this.index,
            isKeySorting: isKeySorting,
            nodes: nodes
          }, event);
        }

        _this.touched = false;
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "autoscroll", function () {
        var disableAutoscroll = _this.props.disableAutoscroll;
        var isKeySorting = _this.manager.isKeySorting;

        if (disableAutoscroll) {
          _this.autoScroller.clear();

          return;
        }

        if (isKeySorting) {
          var translate = _objectSpread$1({}, _this.translate);

          var scrollX = 0;
          var scrollY = 0;

          if (_this.axis.x) {
            translate.x = Math.min(_this.maxTranslate.x, Math.max(_this.minTranslate.x, _this.translate.x));
            scrollX = _this.translate.x - translate.x;
          }

          if (_this.axis.y) {
            translate.y = Math.min(_this.maxTranslate.y, Math.max(_this.minTranslate.y, _this.translate.y));
            scrollY = _this.translate.y - translate.y;
          }

          _this.translate = translate;
          setTranslate3d(_this.helper, _this.translate);
          _this.scrollContainer.scrollLeft += scrollX;
          _this.scrollContainer.scrollTop += scrollY;
          return;
        }

        _this.autoScroller.update({
          height: _this.height,
          maxTranslate: _this.maxTranslate,
          minTranslate: _this.minTranslate,
          translate: _this.translate,
          width: _this.width
        });
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "onAutoScroll", function (offset) {
        _this.translate.x += offset.left;
        _this.translate.y += offset.top;

        _this.animateNodes();
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleKeyDown", function (event) {
        var keyCode = event.keyCode;
        var _this$props5 = _this.props,
            shouldCancelStart = _this$props5.shouldCancelStart,
            _this$props5$keyCodes = _this$props5.keyCodes,
            customKeyCodes = _this$props5$keyCodes === void 0 ? {} : _this$props5$keyCodes;

        var keyCodes = _objectSpread$1({}, defaultKeyCodes, customKeyCodes);

        if (_this.manager.active && !_this.manager.isKeySorting || !_this.manager.active && (!keyCodes.lift.includes(keyCode) || shouldCancelStart(event) || !_this.isValidSortingTarget(event))) {
          return;
        }

        event.stopPropagation();
        event.preventDefault();

        if (keyCodes.lift.includes(keyCode) && !_this.manager.active) {
          _this.keyLift(event);
        } else if (keyCodes.drop.includes(keyCode) && _this.manager.active) {
          _this.keyDrop(event);
        } else if (keyCodes.cancel.includes(keyCode)) {
          _this.newIndex = _this.manager.active.index;

          _this.keyDrop(event);
        } else if (keyCodes.up.includes(keyCode)) {
          _this.keyMove(-1);
        } else if (keyCodes.down.includes(keyCode)) {
          _this.keyMove(1);
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "keyLift", function (event) {
        var target = event.target;
        var node = closest(target, function (el) {
          return el.sortableInfo != null;
        });
        var _node$sortableInfo2 = node.sortableInfo,
            index = _node$sortableInfo2.index,
            collection = _node$sortableInfo2.collection;
        _this.initialFocusedNode = target;
        _this.manager.isKeySorting = true;
        _this.manager.active = {
          index: index,
          collection: collection
        };

        _this.handlePress(event);
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "keyMove", function (shift) {
        var nodes = _this.manager.getOrderedRefs();

        var lastIndex = nodes[nodes.length - 1].node.sortableInfo.index;
        var newIndex = _this.newIndex + shift;
        var prevIndex = _this.newIndex;

        if (newIndex < 0 || newIndex > lastIndex) {
          return;
        }

        _this.prevIndex = prevIndex;
        _this.newIndex = newIndex;
        var targetIndex = getTargetIndex(_this.newIndex, _this.prevIndex, _this.index);
        var target = nodes.find(function (_ref2) {
          var node = _ref2.node;
          return node.sortableInfo.index === targetIndex;
        });
        var targetNode = target.node;
        var scrollDelta = _this.containerScrollDelta;
        var targetBoundingClientRect = target.boundingClientRect || getScrollAdjustedBoundingClientRect(targetNode, scrollDelta);
        var targetTranslate = target.translate || {
          x: 0,
          y: 0
        };
        var targetPosition = {
          top: targetBoundingClientRect.top + targetTranslate.y - scrollDelta.top,
          left: targetBoundingClientRect.left + targetTranslate.x - scrollDelta.left
        };
        var shouldAdjustForSize = prevIndex < newIndex;
        var sizeAdjustment = {
          x: shouldAdjustForSize && _this.axis.x ? targetNode.offsetWidth - _this.width : 0,
          y: shouldAdjustForSize && _this.axis.y ? targetNode.offsetHeight - _this.height : 0
        };

        _this.handleSortMove({
          pageX: targetPosition.left + sizeAdjustment.x,
          pageY: targetPosition.top + sizeAdjustment.y,
          ignoreTransition: shift === 0
        });
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "keyDrop", function (event) {
        _this.handleSortEnd(event);

        if (_this.initialFocusedNode) {
          _this.initialFocusedNode.focus();
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "handleKeyEnd", function (event) {
        if (_this.manager.active) {
          _this.keyDrop(event);
        }
      });

      _defineProperty$2(_assertThisInitialized(_assertThisInitialized(_this)), "isValidSortingTarget", function (event) {
        var useDragHandle = _this.props.useDragHandle;
        var target = event.target;
        var node = closest(target, function (el) {
          return el.sortableInfo != null;
        });
        return node && node.sortableInfo && !node.sortableInfo.disabled && (useDragHandle ? isSortableHandle(target) : target.sortableInfo);
      });

      validateProps(props);
      _this.manager = new Manager();
      _this.events = {
        end: _this.handleEnd,
        move: _this.handleMove,
        start: _this.handleStart
      };
      return _this;
    }

    _createClass(WithSortableContainer, [{
      key: "getChildContext",
      value: function getChildContext() {
        return {
          manager: this.manager
        };
      }
    }, {
      key: "componentDidMount",
      value: function componentDidMount() {
        var _this2 = this;

        var useWindowAsScrollContainer = this.props.useWindowAsScrollContainer;
        var container = this.getContainer();
        Promise.resolve(container).then(function (containerNode) {
          _this2.container = containerNode;
          _this2.document = _this2.container.ownerDocument || document;
          var contentWindow = _this2.props.contentWindow || _this2.document.defaultView || window;
          _this2.contentWindow = typeof contentWindow === 'function' ? contentWindow() : contentWindow;
          _this2.scrollContainer = useWindowAsScrollContainer ? _this2.document.scrollingElement || _this2.document.documentElement : getScrollingParent(_this2.container) || _this2.container;
          _this2.autoScroller = new AutoScroller(_this2.scrollContainer, _this2.onAutoScroll);
          Object.keys(_this2.events).forEach(function (key) {
            return events[key].forEach(function (eventName) {
              return _this2.container.addEventListener(eventName, _this2.events[key], false);
            });
          });

          _this2.container.addEventListener('keydown', _this2.handleKeyDown);
        });
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        var _this3 = this;

        if (this.helper && this.helper.parentNode) {
          this.helper.parentNode.removeChild(this.helper);
        }

        if (!this.container) {
          return;
        }

        Object.keys(this.events).forEach(function (key) {
          return events[key].forEach(function (eventName) {
            return _this3.container.removeEventListener(eventName, _this3.events[key]);
          });
        });
        this.container.removeEventListener('keydown', this.handleKeyDown);
      }
    }, {
      key: "updateHelperPosition",
      value: function updateHelperPosition(event) {
        var _this$props6 = this.props,
            lockAxis = _this$props6.lockAxis,
            lockOffset = _this$props6.lockOffset,
            lockToContainerEdges = _this$props6.lockToContainerEdges,
            transitionDuration = _this$props6.transitionDuration,
            _this$props6$keyboard = _this$props6.keyboardSortingTransitionDuration,
            keyboardSortingTransitionDuration = _this$props6$keyboard === void 0 ? transitionDuration : _this$props6$keyboard;
        var isKeySorting = this.manager.isKeySorting;
        var ignoreTransition = event.ignoreTransition;
        var offset = getPosition(event);
        var translate = {
          x: offset.x - this.initialOffset.x,
          y: offset.y - this.initialOffset.y
        };
        translate.y -= window.pageYOffset - this.initialWindowScroll.top;
        translate.x -= window.pageXOffset - this.initialWindowScroll.left;
        this.translate = translate;

        if (lockToContainerEdges) {
          var _getLockPixelOffsets = getLockPixelOffsets({
            height: this.height,
            lockOffset: lockOffset,
            width: this.width
          }),
              _getLockPixelOffsets2 = _slicedToArray$3(_getLockPixelOffsets, 2),
              minLockOffset = _getLockPixelOffsets2[0],
              maxLockOffset = _getLockPixelOffsets2[1];

          var minOffset = {
            x: this.width / 2 - minLockOffset.x,
            y: this.height / 2 - minLockOffset.y
          };
          var maxOffset = {
            x: this.width / 2 - maxLockOffset.x,
            y: this.height / 2 - maxLockOffset.y
          };
          translate.x = limit(this.minTranslate.x + minOffset.x, this.maxTranslate.x - maxOffset.x, translate.x);
          translate.y = limit(this.minTranslate.y + minOffset.y, this.maxTranslate.y - maxOffset.y, translate.y);
        }

        if (lockAxis === 'x') {
          translate.y = 0;
        } else if (lockAxis === 'y') {
          translate.x = 0;
        }

        if (isKeySorting && keyboardSortingTransitionDuration && !ignoreTransition) {
          setTransitionDuration(this.helper, keyboardSortingTransitionDuration);
        }

        setTranslate3d(this.helper, translate);
      }
    }, {
      key: "animateNodes",
      value: function animateNodes() {
        var _this$props7 = this.props,
            transitionDuration = _this$props7.transitionDuration,
            hideSortableGhost = _this$props7.hideSortableGhost,
            onSortOver = _this$props7.onSortOver;
        var containerScrollDelta = this.containerScrollDelta,
            windowScrollDelta = this.windowScrollDelta;
        var nodes = this.manager.getOrderedRefs();
        var sortingOffset = {
          left: this.offsetEdge.left + this.translate.x + containerScrollDelta.left,
          top: this.offsetEdge.top + this.translate.y + containerScrollDelta.top
        };
        var isKeySorting = this.manager.isKeySorting;
        var prevIndex = this.newIndex;
        this.newIndex = null;

        for (var i = 0, len = nodes.length; i < len; i++) {
          var _node3 = nodes[i].node;
          var index = _node3.sortableInfo.index;
          var width = _node3.offsetWidth;
          var height = _node3.offsetHeight;
          var offset = {
            height: this.height > height ? height / 2 : this.height / 2,
            width: this.width > width ? width / 2 : this.width / 2
          };
          var mustShiftBackward = isKeySorting && index > this.index && index <= prevIndex;
          var mustShiftForward = isKeySorting && index < this.index && index >= prevIndex;
          var translate = {
            x: 0,
            y: 0
          };
          var edgeOffset = nodes[i].edgeOffset;

          if (!edgeOffset) {
            edgeOffset = getEdgeOffset(_node3, this.container);
            nodes[i].edgeOffset = edgeOffset;

            if (isKeySorting) {
              nodes[i].boundingClientRect = getScrollAdjustedBoundingClientRect(_node3, containerScrollDelta);
            }
          }

          var nextNode = i < nodes.length - 1 && nodes[i + 1];
          var prevNode = i > 0 && nodes[i - 1];

          if (nextNode && !nextNode.edgeOffset) {
            nextNode.edgeOffset = getEdgeOffset(nextNode.node, this.container);

            if (isKeySorting) {
              nextNode.boundingClientRect = getScrollAdjustedBoundingClientRect(nextNode.node, containerScrollDelta);
            }
          }

          if (index === this.index) {
            if (hideSortableGhost) {
              this.sortableGhost = _node3;
              setInlineStyles(_node3, {
                opacity: 0,
                visibility: 'hidden'
              });
            }

            continue;
          }

          if (transitionDuration) {
            setTransitionDuration(_node3, transitionDuration);
          }

          if (this.axis.x) {
            if (this.axis.y) {
              if (mustShiftForward || index < this.index && (sortingOffset.left + windowScrollDelta.left - offset.width <= edgeOffset.left && sortingOffset.top + windowScrollDelta.top <= edgeOffset.top + offset.height || sortingOffset.top + windowScrollDelta.top + offset.height <= edgeOffset.top)) {
                translate.x = this.width + this.marginOffset.x;

                if (edgeOffset.left + translate.x > this.containerBoundingRect.width - offset.width) {
                  if (nextNode) {
                    translate.x = nextNode.edgeOffset.left - edgeOffset.left;
                    translate.y = nextNode.edgeOffset.top - edgeOffset.top;
                  }
                }

                if (this.newIndex === null) {
                  this.newIndex = index;
                }
              } else if (mustShiftBackward || index > this.index && (sortingOffset.left + windowScrollDelta.left + offset.width >= edgeOffset.left && sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top || sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top + height)) {
                translate.x = -(this.width + this.marginOffset.x);

                if (edgeOffset.left + translate.x < this.containerBoundingRect.left + offset.width) {
                  if (prevNode) {
                    translate.x = prevNode.edgeOffset.left - edgeOffset.left;
                    translate.y = prevNode.edgeOffset.top - edgeOffset.top;
                  }
                }

                this.newIndex = index;
              }
            } else {
              if (mustShiftBackward || index > this.index && sortingOffset.left + windowScrollDelta.left + offset.width >= edgeOffset.left) {
                translate.x = -(this.width + this.marginOffset.x);
                this.newIndex = index;
              } else if (mustShiftForward || index < this.index && sortingOffset.left + windowScrollDelta.left <= edgeOffset.left + offset.width) {
                translate.x = this.width + this.marginOffset.x;

                if (this.newIndex == null) {
                  this.newIndex = index;
                }
              }
            }
          } else if (this.axis.y) {
            if (mustShiftBackward || index > this.index && sortingOffset.top + windowScrollDelta.top + offset.height >= edgeOffset.top) {
              translate.y = -(this.height + this.marginOffset.y);
              this.newIndex = index;
            } else if (mustShiftForward || index < this.index && sortingOffset.top + windowScrollDelta.top <= edgeOffset.top + offset.height) {
              translate.y = this.height + this.marginOffset.y;

              if (this.newIndex == null) {
                this.newIndex = index;
              }
            }
          }

          setTranslate3d(_node3, translate);
          nodes[i].translate = translate;
        }

        if (this.newIndex == null) {
          this.newIndex = this.index;
        }

        if (isKeySorting) {
          this.newIndex = prevIndex;
        }

        var oldIndex = isKeySorting ? this.prevIndex : prevIndex;

        if (onSortOver && this.newIndex !== oldIndex) {
          onSortOver({
            collection: this.manager.active.collection,
            index: this.index,
            newIndex: this.newIndex,
            oldIndex: oldIndex,
            isKeySorting: isKeySorting,
            nodes: nodes,
            helper: this.helper
          });
        }
      }
    }, {
      key: "getWrappedInstance",
      value: function getWrappedInstance() {
        browser(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableContainer() call');
        return this.refs.wrappedInstance;
      }
    }, {
      key: "getContainer",
      value: function getContainer() {
        var getContainer = this.props.getContainer;

        if (typeof getContainer !== 'function') {
          return ReactDOM.findDOMNode(this);
        }

        return getContainer(config.withRef ? this.getWrappedInstance() : undefined);
      }
    }, {
      key: "render",
      value: function render() {
        var ref = config.withRef ? 'wrappedInstance' : null;
        return React.createElement(WrappedComponent, _extends$1({
          ref: ref
        }, omit(this.props, omittedProps)));
      }
    }, {
      key: "helperContainer",
      get: function get() {
        var helperContainer = this.props.helperContainer;

        if (typeof helperContainer === 'function') {
          return helperContainer();
        }

        return this.props.helperContainer || this.document.body;
      }
    }, {
      key: "containerScrollDelta",
      get: function get() {
        var useWindowAsScrollContainer = this.props.useWindowAsScrollContainer;

        if (useWindowAsScrollContainer) {
          return {
            left: 0,
            top: 0
          };
        }

        return {
          left: this.scrollContainer.scrollLeft - this.initialScroll.left,
          top: this.scrollContainer.scrollTop - this.initialScroll.top
        };
      }
    }, {
      key: "windowScrollDelta",
      get: function get() {
        return {
          left: this.contentWindow.pageXOffset - this.initialWindowScroll.left,
          top: this.contentWindow.pageYOffset - this.initialWindowScroll.top
        };
      }
    }]);

    return WithSortableContainer;
  }(React.Component), _defineProperty$2(_class, "displayName", provideDisplayName('sortableList', WrappedComponent)), _defineProperty$2(_class, "defaultProps", defaultProps$1), _defineProperty$2(_class, "propTypes", propTypes), _defineProperty$2(_class, "childContextTypes", {
    manager: PropTypes__default['default'].object.isRequired
  }), _temp;
}

var propTypes$1 = {
  index: PropTypes__default['default'].number.isRequired,
  collection: PropTypes__default['default'].oneOfType([PropTypes__default['default'].number, PropTypes__default['default'].string]),
  disabled: PropTypes__default['default'].bool
};
var omittedProps$1 = Object.keys(propTypes$1);
function sortableElement(WrappedComponent) {
  var _class, _temp;

  var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {
    withRef: false
  };
  return _temp = _class = function (_React$Component) {
    _inherits(WithSortableElement, _React$Component);

    function WithSortableElement() {
      _classCallCheck(this, WithSortableElement);

      return _possibleConstructorReturn(this, _getPrototypeOf(WithSortableElement).apply(this, arguments));
    }

    _createClass(WithSortableElement, [{
      key: "componentDidMount",
      value: function componentDidMount() {
        this.register();
      }
    }, {
      key: "componentDidUpdate",
      value: function componentDidUpdate(prevProps) {
        if (this.node) {
          if (prevProps.index !== this.props.index) {
            this.node.sortableInfo.index = this.props.index;
          }

          if (prevProps.disabled !== this.props.disabled) {
            this.node.sortableInfo.disabled = this.props.disabled;
          }
        }

        if (prevProps.collection !== this.props.collection) {
          this.unregister(prevProps.collection);
          this.register();
        }
      }
    }, {
      key: "componentWillUnmount",
      value: function componentWillUnmount() {
        this.unregister();
      }
    }, {
      key: "register",
      value: function register() {
        var _this$props = this.props,
            collection = _this$props.collection,
            disabled = _this$props.disabled,
            index = _this$props.index;
        var node = ReactDOM.findDOMNode(this);
        node.sortableInfo = {
          collection: collection,
          disabled: disabled,
          index: index,
          manager: this.context.manager
        };
        this.node = node;
        this.ref = {
          node: node
        };
        this.context.manager.add(collection, this.ref);
      }
    }, {
      key: "unregister",
      value: function unregister() {
        var collection = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props.collection;
        this.context.manager.remove(collection, this.ref);
      }
    }, {
      key: "getWrappedInstance",
      value: function getWrappedInstance() {
        browser(config.withRef, 'To access the wrapped instance, you need to pass in {withRef: true} as the second argument of the SortableElement() call');
        return this.refs.wrappedInstance;
      }
    }, {
      key: "render",
      value: function render() {
        var ref = config.withRef ? 'wrappedInstance' : null;
        return React.createElement(WrappedComponent, _extends$1({
          ref: ref
        }, omit(this.props, omittedProps$1)));
      }
    }]);

    return WithSortableElement;
  }(React.Component), _defineProperty$2(_class, "displayName", provideDisplayName('sortableElement', WrappedComponent)), _defineProperty$2(_class, "contextTypes", {
    manager: PropTypes__default['default'].object.isRequired
  }), _defineProperty$2(_class, "propTypes", propTypes$1), _defineProperty$2(_class, "defaultProps", {
    collection: 0
  }), _temp;
}

var styles$x = undefined;

var Spinner = function Spinner(_ref) {
  var size = _ref.size;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$x.base, _defineProperty({}, styles$x.large, size === "large"))
  }, /*#__PURE__*/React__default['default'].createElement("svg", {
    className: styles$x.circular,
    viewBox: "25 25 50 50"
  }, /*#__PURE__*/React__default['default'].createElement("circle", {
    className: styles$x.path,
    cx: "50",
    cy: "50",
    r: "20",
    fill: "none"
  })));
};
Spinner.propTypes = {
  /**
   * Size of spinner
   */
  size: PropTypes__default['default'].oneOf(["large"])
};

var styles$y = undefined;

var Text = function Text(_ref) {
  var _classNames;

  var block = _ref.block,
      truncate = _ref.truncate,
      color = _ref.color,
      weight = _ref.weight,
      size = _ref.size,
      strikeThrough = _ref.strikeThrough,
      lowercase = _ref.lowercase,
      underline = _ref.underline,
      italic = _ref.italic,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("span", {
    className: classNames__default['default'](styles$y.base, (_classNames = {}, _defineProperty(_classNames, styles$y.block, block), _defineProperty(_classNames, styles$y.truncate, truncate), _defineProperty(_classNames, styles$y.weightLight, weight === "light"), _defineProperty(_classNames, styles$y.weightMedium, weight === "medium"), _defineProperty(_classNames, styles$y.weightBold, weight === "bold"), _defineProperty(_classNames, styles$y.sizeSmall, size === "small"), _defineProperty(_classNames, styles$y.sizeNormal, size === "normal"), _defineProperty(_classNames, styles$y.sizeMedium, size === "medium"), _defineProperty(_classNames, styles$y.sizeLarge, size === "large"), _defineProperty(_classNames, styles$y.sizeXlarge, size === "xlarge"), _defineProperty(_classNames, styles$y.base, color === "base"), _defineProperty(_classNames, styles$y.base80, color === "base80"), _defineProperty(_classNames, styles$y.base60, color === "base60"), _defineProperty(_classNames, styles$y.base40, color === "base40"), _defineProperty(_classNames, styles$y.primary, color === "primary"), _defineProperty(_classNames, styles$y.contrast, color === "contrast"), _defineProperty(_classNames, styles$y.success, color === "success"), _defineProperty(_classNames, styles$y.warning, color === "warning"), _defineProperty(_classNames, styles$y.error, color === "error"), _defineProperty(_classNames, styles$y.info, color === "info"), _defineProperty(_classNames, styles$y.strikeThrough, strikeThrough), _defineProperty(_classNames, styles$y.lowercase, lowercase), _defineProperty(_classNames, styles$y.underline, underline), _defineProperty(_classNames, styles$y.italic, italic), _classNames))
  }, children);
};
Text.propTypes = {
  block: PropTypes__default['default'].bool,
  truncate: PropTypes__default['default'].bool,
  color: PropTypes__default['default'].oneOf(["base", "base80", "base60", "base40", "primary", "contrast", "success", "warning", "error", "info"]),
  weight: PropTypes__default['default'].oneOf(["light", "medium", "bold"]),
  size: PropTypes__default['default'].oneOf(["small", "normal", "medium", "large", "xlarge"]),
  strikeThrough: PropTypes__default['default'].bool,
  lowercase: PropTypes__default['default'].bool,
  underline: PropTypes__default['default'].bool,
  italic: PropTypes__default['default'].bool,
  children: PropTypes__default['default'].any
};

var ItemList = function ItemList(_ref) {
  var onItemClick = _ref.onItemClick,
      onSort = _ref.onSort,
      busy = _ref.busy,
      children = _ref.children,
      className = _ref.className,
      emptyMessage = _ref.emptyMessage;

  /**
   * Handle item dropped when sorting
   * @param oldIndex
   * @param newIndex
   * @private
   */
  var handleSortEnd = function handleSortEnd(data) {
    if (onSort && data.oldIndex !== data.newIndex) {
      onSort(data);
    }
  };

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$w.base, _defineProperty({}, styles$w.hidden, !emptyMessage && !children))
  }, busy ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.loader
  }, /*#__PURE__*/React__default['default'].createElement(Spinner, {
    className: styles$w.spinner
  })) : null, /*#__PURE__*/React__default['default'].createElement(SortableItemList, {
    items: children,
    className: className,
    sortable: typeof onSort !== "undefined",
    onItemClick: onItemClick,
    onSortEnd: handleSortEnd,
    helperClass: styles$w.isDragged,
    useDragHandle: typeof onSort !== "undefined",
    pressDelay: 200
  }), !children ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.item
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.content
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.wrapper
  }, /*#__PURE__*/React__default['default'].createElement(Text, {
    base40: true
  }, emptyMessage || "Tom liste.")))) : null);
}; // Item list

var SortableItemList = sortableContainer(function (_ref2) {
  var className = _ref2.className,
      items = _ref2.items,
      sortable = _ref2.sortable,
      onItemClick = _ref2.onItemClick;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$w.list, className)
  }, items && React__default['default'].Children.map(items, function (child, index) {
    return /*#__PURE__*/React__default['default'].cloneElement(child, {
      onClick: onItemClick,
      sortable: sortable
    });
  }));
});
ItemList.propTypes = {
  /**
   * Item click callback function
   */
  onItemClick: PropTypes.PropTypes.func,

  /**
   * Item sort callback (enables sorting and displays handle)
   */
  onSort: PropTypes.PropTypes.func,

  /**
   * Show loading indicator on top of items
   */
  busy: PropTypes.PropTypes.bool,

  /**
   * Content to show when list is empty
   */
  emptyMessage: PropTypes.PropTypes.any
};
ItemList.defaultProps = {
  busy: false
};

var SortableItem = sortableElement(function (_ref) {
  var children = _ref.children;
  return children;
});
var DragHandle = sortableHandle(function () {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.handle,
    onClick: function onClick(e) {
      return e.stopPropagation();
    }
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$w.icon,
    name: "dot-matrix"
  }));
});
var Item$1 = function Item(_ref2) {
  var index = _ref2.index,
      value = _ref2.value,
      prepend = _ref2.prepend,
      append = _ref2.append,
      onClick = _ref2.onClick,
      sortable = _ref2.sortable,
      children = _ref2.children;

  var handleClick = function handleClick() {
    onClick && onClick(value);
  };

  return /*#__PURE__*/React__default['default'].createElement(SortableItem, {
    index: index
  }, /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: classNames__default['default'](styles$w.item, _defineProperty({}, styles$w.clickable, onClick)),
    onClick: handleClick
  }, prepend ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.prepend
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.wrapper
  }, prepend)) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.content
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.wrapper
  }, children)), append ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.append
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$w.wrapper
  }, append)) : null, sortable ? /*#__PURE__*/React__default['default'].createElement(DragHandle, null) : null));
};
Item$1.propTypes = {
  /**
   * Index number indicating item order
   */
  index: PropTypes__default['default'].number,

  /**
   * The value to return in onItemClick callback
   */
  value: PropTypes__default['default'].any,

  /**
   * Add element at start of item
   */
  prepend: PropTypes__default['default'].object,

  /**
   * Add element to end of item
   */
  append: PropTypes__default['default'].object,

  /**
   * The content to be displayed in item
   */
  children: PropTypes__default['default'].any
};

ItemList.Item = Item$1;

var styles$z = undefined;

var ProgressBar = function ProgressBar(_ref) {
  var _classNames;

  var percent = _ref.percent,
      color = _ref.color,
      animation = _ref.animation,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$z.base, (_classNames = {}, _defineProperty(_classNames, styles$z.colorSuccess, color === "success"), _defineProperty(_classNames, styles$z.colorError, color === "error"), _defineProperty(_classNames, styles$z.animation, animation), _classNames))
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$z.bar
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$z.info
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$z.label
  }, children), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$z.percent
  }, percent, "%")), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$z.trail
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    style: {
      width: percent + "%"
    },
    className: styles$z.indicator
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$z.stripes
  })))));
};
ProgressBar.defaultProps = {
  animation: true
};
ProgressBar.propTypes = {
  /**
   * Percent completed
   */
  percent: PropTypes__default['default'].number,

  /**
   * Color of progress bar
   */
  color: PropTypes__default['default'].oneOf(["success", "error"]),

  /**
   * Label / message
   */
  children: PropTypes__default['default'].any,

  /**
   * Enable/disable bar stripe animation
   */
  animation: PropTypes__default['default'].bool
};

var styles$A = undefined;

function _classCallCheck$1(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$1(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$1(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$1(Constructor.prototype, protoProps); if (staticProps) _defineProperties$1(Constructor, staticProps); return Constructor; }

function _get(target, property, receiver) { if (typeof Reflect !== "undefined" && Reflect.get) { _get = Reflect.get; } else { _get = function _get(target, property, receiver) { var base = _superPropBase(target, property); if (!base) return; var desc = Object.getOwnPropertyDescriptor(base, property); if (desc.get) { return desc.get.call(receiver); } return desc.value; }; } return _get(target, property, receiver || target); }

function _superPropBase(object, property) { while (!Object.prototype.hasOwnProperty.call(object, property)) { object = _getPrototypeOf$1(object); if (object === null) break; } return object; }

function _inherits$1(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf$1(subClass, superClass); }

function _setPrototypeOf$1(o, p) { _setPrototypeOf$1 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$1(o, p); }

function _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf$1(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$1(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$1(this, result); }; }

function _possibleConstructorReturn$1(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized$1(self); }

function _assertThisInitialized$1(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf$1(o) { _getPrototypeOf$1 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$1(o); }

var enhancer = function enhancer(WrappedComponent) {
  return /*#__PURE__*/function (_WrappedComponent) {
    _inherits$1(Progress, _WrappedComponent);

    var _super = _createSuper(Progress);

    function Progress() {
      _classCallCheck$1(this, Progress);

      return _super.apply(this, arguments);
    }

    _createClass$1(Progress, [{
      key: "componentDidUpdate",
      value: function componentDidUpdate() {
        var _this = this;

        var now = Date.now();
        var updated = false;
        Object.keys(this.paths).forEach(function (key) {
          var path = _this.paths[key];

          if (!path) {
            return;
          }

          updated = true;
          var pathStyle = path.style;
          pathStyle.transitionDuration = '.3s, .3s, .3s, .06s';

          if (_this.prevTimeStamp && now - _this.prevTimeStamp < 100) {
            pathStyle.transitionDuration = '0s, 0s';
          }
        });

        if (updated) {
          this.prevTimeStamp = Date.now();
        }
      }
    }, {
      key: "render",
      value: function render() {
        return _get(_getPrototypeOf$1(Progress.prototype), "render", this).call(this);
      }
    }]);

    return Progress;
  }(WrappedComponent);
};

var defaultProps$2 = {
  className: '',
  percent: 0,
  prefixCls: 'rc-progress',
  strokeColor: '#2db7f5',
  strokeLinecap: 'round',
  strokeWidth: 1,
  style: {},
  trailColor: '#D9D9D9',
  trailWidth: 1
};
var mixedType = PropTypes__default['default'].oneOfType([PropTypes__default['default'].number, PropTypes__default['default'].string]);
var propTypes$2 = {
  className: PropTypes__default['default'].string,
  percent: PropTypes__default['default'].oneOfType([mixedType, PropTypes__default['default'].arrayOf(mixedType)]),
  prefixCls: PropTypes__default['default'].string,
  strokeColor: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].arrayOf(PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].object])), PropTypes__default['default'].object]),
  strokeLinecap: PropTypes__default['default'].oneOf(['butt', 'round', 'square']),
  strokeWidth: mixedType,
  style: PropTypes__default['default'].object,
  trailColor: PropTypes__default['default'].string,
  trailWidth: mixedType
};

function ownKeys$1(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread$2(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys$1(Object(source), true).forEach(function (key) { _defineProperty$3(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys$1(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _extends$2() { _extends$2 = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends$2.apply(this, arguments); }

function _objectWithoutProperties$1(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose$1(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose$1(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _classCallCheck$2(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties$2(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass$2(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties$2(Constructor.prototype, protoProps); if (staticProps) _defineProperties$2(Constructor, staticProps); return Constructor; }

function _inherits$2(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf$2(subClass, superClass); }

function _setPrototypeOf$2(o, p) { _setPrototypeOf$2 = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf$2(o, p); }

function _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function () { var Super = _getPrototypeOf$2(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf$2(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn$2(this, result); }; }

function _possibleConstructorReturn$2(self, call) { if (call && (typeof call === "object" || typeof call === "function")) { return call; } return _assertThisInitialized$2(self); }

function _assertThisInitialized$2(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _isNativeReflectConstruct$1() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }

function _getPrototypeOf$2(o) { _getPrototypeOf$2 = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf$2(o); }

function _defineProperty$3(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
var gradientSeed = 0;

function stripPercentToNumber(percent) {
  return +percent.replace('%', '');
}

function toArray(symArray) {
  return Array.isArray(symArray) ? symArray : [symArray];
}

function getPathStyles(offset, percent, strokeColor, strokeWidth) {
  var gapDegree = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;
  var gapPosition = arguments.length > 5 ? arguments[5] : undefined;
  var radius = 50 - strokeWidth / 2;
  var beginPositionX = 0;
  var beginPositionY = -radius;
  var endPositionX = 0;
  var endPositionY = -2 * radius;

  switch (gapPosition) {
    case 'left':
      beginPositionX = -radius;
      beginPositionY = 0;
      endPositionX = 2 * radius;
      endPositionY = 0;
      break;

    case 'right':
      beginPositionX = radius;
      beginPositionY = 0;
      endPositionX = -2 * radius;
      endPositionY = 0;
      break;

    case 'bottom':
      beginPositionY = radius;
      endPositionY = 2 * radius;
      break;
  }

  var pathString = "M 50,50 m ".concat(beginPositionX, ",").concat(beginPositionY, "\n   a ").concat(radius, ",").concat(radius, " 0 1 1 ").concat(endPositionX, ",").concat(-endPositionY, "\n   a ").concat(radius, ",").concat(radius, " 0 1 1 ").concat(-endPositionX, ",").concat(endPositionY);
  var len = Math.PI * 2 * radius;
  var pathStyle = {
    stroke: strokeColor,
    strokeDasharray: "".concat(percent / 100 * (len - gapDegree), "px ").concat(len, "px"),
    strokeDashoffset: "-".concat(gapDegree / 2 + offset / 100 * (len - gapDegree), "px"),
    transition: 'stroke-dashoffset .3s ease 0s, stroke-dasharray .3s ease 0s, stroke .3s, stroke-width .06s ease .3s' // eslint-disable-line

  };
  return {
    pathString: pathString,
    pathStyle: pathStyle
  };
}

var Circle = /*#__PURE__*/function (_Component) {
  _inherits$2(Circle, _Component);

  var _super = _createSuper$1(Circle);

  function Circle() {
    var _this;

    _classCallCheck$2(this, Circle);

    _this = _super.call(this);

    _defineProperty$3(_assertThisInitialized$2(_this), "paths", {});

    _defineProperty$3(_assertThisInitialized$2(_this), "gradientId", 0);

    _this.gradientId = gradientSeed;
    gradientSeed += 1;
    return _this;
  }

  _createClass$2(Circle, [{
    key: "getStokeList",
    value: function getStokeList() {
      var _this2 = this;

      var _this$props = this.props,
          prefixCls = _this$props.prefixCls,
          percent = _this$props.percent,
          strokeColor = _this$props.strokeColor,
          strokeWidth = _this$props.strokeWidth,
          strokeLinecap = _this$props.strokeLinecap,
          gapDegree = _this$props.gapDegree,
          gapPosition = _this$props.gapPosition;
      var percentList = toArray(percent);
      var strokeColorList = toArray(strokeColor);
      var stackPtg = 0;
      return percentList.map(function (ptg, index) {
        var color = strokeColorList[index] || strokeColorList[strokeColorList.length - 1];
        var stroke = Object.prototype.toString.call(color) === '[object Object]' ? "url(#".concat(prefixCls, "-gradient-").concat(_this2.gradientId, ")") : '';

        var _getPathStyles = getPathStyles(stackPtg, ptg, color, strokeWidth, gapDegree, gapPosition),
            pathString = _getPathStyles.pathString,
            pathStyle = _getPathStyles.pathStyle;

        stackPtg += ptg;
        return /*#__PURE__*/React__default['default'].createElement("path", {
          key: index,
          className: "".concat(prefixCls, "-circle-path"),
          d: pathString,
          stroke: stroke,
          strokeLinecap: strokeLinecap,
          strokeWidth: strokeWidth,
          opacity: ptg === 0 ? 0 : 1,
          fillOpacity: "0",
          style: pathStyle,
          ref: function ref(path) {
            _this2.paths[index] = path;
          }
        });
      });
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props2 = this.props,
          prefixCls = _this$props2.prefixCls,
          strokeWidth = _this$props2.strokeWidth,
          trailWidth = _this$props2.trailWidth,
          gapDegree = _this$props2.gapDegree,
          gapPosition = _this$props2.gapPosition,
          trailColor = _this$props2.trailColor,
          strokeLinecap = _this$props2.strokeLinecap,
          style = _this$props2.style,
          className = _this$props2.className,
          strokeColor = _this$props2.strokeColor,
          restProps = _objectWithoutProperties$1(_this$props2, ["prefixCls", "strokeWidth", "trailWidth", "gapDegree", "gapPosition", "trailColor", "strokeLinecap", "style", "className", "strokeColor"]);

      var _getPathStyles2 = getPathStyles(0, 100, trailColor, strokeWidth, gapDegree, gapPosition),
          pathString = _getPathStyles2.pathString,
          pathStyle = _getPathStyles2.pathStyle;

      delete restProps.percent;
      var strokeColorList = toArray(strokeColor);
      var gradient = strokeColorList.find(function (color) {
        return Object.prototype.toString.call(color) === '[object Object]';
      });
      return /*#__PURE__*/React__default['default'].createElement("svg", _extends$2({
        className: "".concat(prefixCls, "-circle ").concat(className),
        viewBox: "0 0 100 100",
        style: style
      }, restProps), gradient && /*#__PURE__*/React__default['default'].createElement("defs", null, /*#__PURE__*/React__default['default'].createElement("linearGradient", {
        id: "".concat(prefixCls, "-gradient-").concat(this.gradientId),
        x1: "100%",
        y1: "0%",
        x2: "0%",
        y2: "0%"
      }, Object.keys(gradient).sort(function (a, b) {
        return stripPercentToNumber(a) - stripPercentToNumber(b);
      }).map(function (key, index) {
        return /*#__PURE__*/React__default['default'].createElement("stop", {
          key: index,
          offset: key,
          stopColor: gradient[key]
        });
      }))), /*#__PURE__*/React__default['default'].createElement("path", {
        className: "".concat(prefixCls, "-circle-trail"),
        d: pathString,
        stroke: trailColor,
        strokeLinecap: strokeLinecap,
        strokeWidth: trailWidth || strokeWidth,
        fillOpacity: "0",
        style: pathStyle
      }), this.getStokeList().reverse());
    }
  }]);

  return Circle;
}(React.Component);

Circle.propTypes = _objectSpread$2(_objectSpread$2({}, propTypes$2), {}, {
  gapPosition: PropTypes__default['default'].oneOf(['top', 'bottom', 'left', 'right'])
});
Circle.defaultProps = _objectSpread$2(_objectSpread$2({}, defaultProps$2), {}, {
  gapPosition: 'top'
});
var Circle$1 = enhancer(Circle);

var ProgressCircle = function ProgressCircle(_ref) {
  var _classNames;

  var percent = _ref.percent,
      value = _ref.value,
      annotation = _ref.annotation,
      color = _ref.color,
      children = _ref.children,
      strokeWidth = _ref.strokeWidth,
      trailWidth = _ref.trailWidth,
      strong = _ref.strong;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$A.base, (_classNames = {}, _defineProperty(_classNames, styles$A.successType, color === "success"), _defineProperty(_classNames, styles$A.warningType, color === "warning"), _defineProperty(_classNames, styles$A.errorType, color === "error"), _defineProperty(_classNames, styles$A.strong, strong), _classNames))
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$A.content
  }, /*#__PURE__*/React__default['default'].createElement(Circle$1, {
    className: styles$A.circle,
    percent: percent,
    strokeWidth: strokeWidth,
    trailWidth: trailWidth,
    strokeLinecap: "round"
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$A.details
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$A.wrapper
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$A.value
  }, value || percent, annotation ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$A.annotation
  }, annotation) : null), children ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$A.label
  }, children) : null))));
};
ProgressCircle.defaultProps = {
  annotation: "%",
  percent: 0,
  strokeWidth: 5,
  trailWidth: 5
};
ProgressCircle.propTypes = {
  /**
   * Percent value
   */
  percent: PropTypes__default['default'].number,

  /**
   * Value shown in middle
   */
  value: PropTypes__default['default'].any,

  /**
   * Annotation displayed beside the value
   */
  annotation: PropTypes__default['default'].any,

  /**
   * Color of progress circle
   */
  color: PropTypes__default['default'].oneOf(["success", "warning", "error"]),

  /**
   * Label of progress circle
   */
  children: PropTypes__default['default'].any
};

var styles$B = undefined;

var Image = function Image(_ref) {
  var _classNames;

  var src = _ref.src,
      percent = _ref.percent,
      thumbnail = _ref.thumbnail,
      scale = _ref.scale,
      mod = _ref.mod,
      placeholder = _ref.placeholder,
      onClick = _ref.onClick,
      onFileSelect = _ref.onFileSelect,
      alt = _ref.alt,
      actions = _ref.actions;

  var _useDropzone = useDropzone({
    onDrop: function onDrop(files) {
      return onFileSelect(files && files[0]);
    },
    multiple: false,
    accept: "image/*",
    onClick: function onClick(evt) {
      return evt.preventDefault();
    },
    disabled: percent !== null
  }),
      getRootProps = _useDropzone.getRootProps,
      getInputProps = _useDropzone.getInputProps,
      inputRef = _useDropzone.inputRef;

  var handleClick = function handleClick() {
    if (onClick) {
      onClick();
    } else if (onFileSelect) {
      inputRef.current.click();
    }
  };

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$B.base, (_classNames = {}, _defineProperty(_classNames, styles$B.thumbnail, thumbnail), _defineProperty(_classNames, styles$B.thumbSmall, thumbnail === "small"), _defineProperty(_classNames, styles$B.thumbRegular, thumbnail === "regular"), _defineProperty(_classNames, styles$B.thumbMedium, thumbnail === "medium"), _defineProperty(_classNames, styles$B.thumbLarge, thumbnail === "large"), _defineProperty(_classNames, styles$B.scaleFill, scale === "fill"), _defineProperty(_classNames, styles$B.scaleSquare, scale === "square"), _defineProperty(_classNames, styles$B.scaleA16_9, scale === "16:9"), _defineProperty(_classNames, styles$B.modRounded, mod && mod.indexOf("rounded") >= 0), _defineProperty(_classNames, styles$B.modOval, mod && mod.indexOf("oval") >= 0), _defineProperty(_classNames, styles$B.modGray, mod && mod.indexOf("gray") >= 0), _defineProperty(_classNames, styles$B.isClickable, onClick || onFileSelect), _classNames)),
    onClick: handleClick
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$B.wrapper
  }, actions ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$B.actions
  }, actions) : null, percent ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$B.progress
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$B.progressBox
  }, /*#__PURE__*/React__default['default'].createElement(ProgressCircle, {
    strong: true,
    percent: percent,
    value: " ",
    annotation: null,
    strokeWidth: 8,
    trailWidth: 7
  }))) : null, src ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$B.image
  }, /*#__PURE__*/React__default['default'].createElement("img", {
    alt: alt,
    src: src
  })) : percent == null ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$B.placeholder, _defineProperty({}, styles$B["default"], !placeholder))
  }, placeholder || /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: "image"
  })) : null), onFileSelect ? /*#__PURE__*/React__default['default'].createElement("div", getRootProps(), /*#__PURE__*/React__default['default'].createElement("input", _extends({
    className: styles$B.input
  }, getInputProps()))) : null);
};
Image.defaultProps = {
  percent: null
};
Image.propTypes = {
  /**
   * Image url
   */
  src: PropTypes__default['default'].string,

  /**
   * Show loading indicator with percent progress
   */
  percent: PropTypes__default['default'].oneOfType([PropTypes__default['default'].number, PropTypes__default['default'].oneOf([null])]),

  /**
   * Display thumbnail sized picture
   */
  thumbnail: PropTypes__default['default'].oneOf(["small", "medium", "regular", "large"]),

  /**
   * Scale picture
   */
  scale: PropTypes__default['default'].oneOf(["fill", "square", "16:9"]),

  /**
   * Apply modification to image. One or more of "rounded", "oval", "gray".
   */
  mod: PropTypes__default['default'].string,

  /**
   * Placeholder if no image
   */
  placeholder: PropTypes__default['default'].any,

  /**
   * Click handler
   */
  onClick: PropTypes__default['default'].func,

  /**
   * File select on click
   */
  onFileSelect: PropTypes__default['default'].func,

  /**
   * Buttons / controls to display on top of image
   */
  actions: PropTypes__default['default'].any,

  /**
   * Image "alt" text
   */
  alt: PropTypes__default['default'].string
};

var styles$C = undefined;

var Menu$1 = function Menu(_ref) {
  var children = _ref.children,
      hidden = _ref.hidden;
  return !hidden ? /*#__PURE__*/React__default['default'].createElement("nav", {
    className: styles$C.base
  }, children) : null;
};
Menu$1.propTypes = {
  /**
   * Hide menu
   */
  hidden: PropTypes__default['default'].bool
};

var styles$D = undefined;

var Badge = function Badge(_ref) {
  var _classNames;

  var fill = _ref.fill,
      size = _ref.size,
      spacing = _ref.spacing,
      color = _ref.color,
      number = _ref.number,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("span", {
    className: classNames__default['default'](styles$D.base, (_classNames = {}, _defineProperty(_classNames, styles$D.primary, color === "primary"), _defineProperty(_classNames, styles$D.info, color === "info"), _defineProperty(_classNames, styles$D.success, color === "success"), _defineProperty(_classNames, styles$D.warning, color === "warning"), _defineProperty(_classNames, styles$D.error, color === "error"), _defineProperty(_classNames, styles$D.contrast, color === "contrast"), _defineProperty(_classNames, styles$D.silent, color === "silent"), _defineProperty(_classNames, styles$D.small, size === "small"), _defineProperty(_classNames, styles$D.spacingLeft, spacing && spacing.indexOf("left") >= 0), _defineProperty(_classNames, styles$D.spacingRight, spacing && spacing.indexOf("right") >= 0), _defineProperty(_classNames, styles$D.fill, fill), _defineProperty(_classNames, styles$D.number, number), _classNames))
  }, children);
};
Badge.propTypes = {
  /**
   * Fill with solid color
   */
  fill: PropTypes__default['default'].bool,

  /**
   * Change size of badge
   */
  size: PropTypes__default['default'].oneOf(["small"]),

  /**
   * Set color of bage
   */
  color: PropTypes__default['default'].oneOf(["primary", "info", "success", "warning", "error", "contrast", "silent"]),

  /**
   * Adapt to display number
   */
  number: PropTypes__default['default'].bool,

  /**
   * Add spacing to badge (left/right)
   */
  spacing: PropTypes__default['default'].array,

  /**
   * Content of badge
   */
  children: PropTypes__default['default'].any
};

var MenuItem$1 = function MenuItem(_ref) {
  var label = _ref.label,
      icon = _ref.icon,
      iconColor = _ref.iconColor,
      link = _ref.link,
      selected = _ref.selected,
      count = _ref.count,
      indicator = _ref.indicator,
      onClick = _ref.onClick;

  var handleClick = function handleClick(e) {
    e.stopPropagation();
    onClick && onClick(e);
  };

  return /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: classNames__default['default'](styles$C.item, _defineProperty({}, styles$C.selected, selected)),
    activeClassName: styles$C.selected,
    onClick: handleClick,
    link: link
  }, icon ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$C.icon
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    color: iconColor || "primary",
    name: icon
  })) : null, /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$C.label
  }, label), indicator ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$C.indicator
  }, indicator) : null, count ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$C.counter
  }, /*#__PURE__*/React__default['default'].createElement(Badge, {
    fill: true,
    number: true,
    color: "error"
  }, count)) : null);
};
MenuItem$1.propTypes = {
  /**
   * Menu item label
   */
  label: PropTypes__default['default'].string,

  /**
   * Icon to show on item
   */
  icon: PropTypes__default['default'].string,

  /**
   * Color of icon
   */
  iconColor: PropTypes__default['default'].string,

  /**
   * React-router link
   */
  link: PropTypes__default['default'].string,

  /**
   * Mark item as selected
   */
  selected: PropTypes__default['default'].bool,

  /**
   * Counter
   */
  count: PropTypes__default['default'].number,

  /**
   * Indicator of some sort, preferrably an icon
   */
  indicator: PropTypes__default['default'].any,

  /**
   * Click handler
   */
  onClick: PropTypes__default['default'].func
};

var MenuHeading$1 = function MenuHeading(_ref) {
  var label = _ref.label;
  return /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$C.heading
  }, label);
};
MenuHeading$1.propTypes = {
  /**
   * Heading text
   */
  label: PropTypes__default['default'].string
};

var style = undefined;

var PopOver = function PopOver(props) {
  var _classNames;

  var visible = props.visible,
      onClose = props.onClose,
      children = props.children,
      content = props.content,
      arrowColor = props.arrowColor,
      size = props.size;
  var baseRef = React.useRef(null);
  var popRef = React.useRef(null);

  var _useState = React.useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      topPos = _useState2[0],
      setTopPos = _useState2[1];

  var _useState3 = React.useState(0),
      _useState4 = _slicedToArray(_useState3, 2),
      leftPos = _useState4[0],
      setLeftPos = _useState4[1];

  var _useState5 = React.useState(0),
      _useState6 = _slicedToArray(_useState5, 2),
      arrowLeftPos = _useState6[0],
      setArrowLeftPos = _useState6[1];

  var _useState7 = React.useState("bottom"),
      _useState8 = _slicedToArray(_useState7, 2),
      position = _useState8[0],
      setPosition = _useState8[1];

  React.useEffect(function () {
    if (visible) {
      redrawPosition();
      document.addEventListener("mousedown", handleClickOutside);
    }

    return function () {
      document.removeEventListener("mousedown", handleClickOutside);
    };
  }, [visible]);
  /**
   * Redraw position
   * @private
   */

  var redrawPosition = function redrawPosition() {
    var $base = baseRef.current;
    var $pop = popRef.current;
    var baseVal = $base.getBoundingClientRect();
    var popVal = $pop.getBoundingClientRect();
    var windowWidth = window.innerWidth;
    var windowHeight = window.innerHeight;
    var distanceFromBottom = windowHeight - (baseVal.y + baseVal.height);
    var baseBiggerThanPop = baseVal.width > popVal.width;
    var shouldPositionTop = distanceFromBottom <= popVal.height;
    var shouldPositionLeft = windowWidth - baseVal.x < 300;

    if (shouldPositionTop) {
      setTopPos(baseVal.y - popVal.height);
      setPosition("top");
    } else {
      setTopPos(baseVal.y + baseVal.height);
      setPosition("bottom");
    }

    if (shouldPositionLeft) {
      setLeftPos(baseVal.x + baseVal.width - popVal.width);
      setArrowLeftPos(popVal.width - baseVal.width / 2);
    } else if (baseBiggerThanPop) {
      setLeftPos(baseVal.x + (baseVal.width - popVal.width) / 2);
      setArrowLeftPos(popVal.width / 2);
    } else {
      setLeftPos(baseVal.x);
      setArrowLeftPos(baseVal.width / 2);
    }
  };
  /**
   * Handle click outside
   */


  var handleClickOutside = function handleClickOutside(e) {
    if (!popRef.current.contains(e.target) && !baseRef.current.contains(e.target)) {
      onClose && onClose(e);
    }
  };

  var baseClasses = classNames__default['default'](style.base, (_classNames = {}, _defineProperty(_classNames, style.visible, visible), _defineProperty(_classNames, style.sizeLarge, size === "large"), _defineProperty(_classNames, style.onTop, position === "top"), _classNames));
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: baseClasses
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    ref: baseRef
  }, children), /*#__PURE__*/React__default['default'].createElement("div", {
    ref: popRef,
    className: style.pop,
    style: {
      top: "".concat(topPos, "px"),
      left: "".concat(leftPos, "px")
    }
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](style.arrow, _defineProperty({}, style.colorPrimary, arrowColor === "primary")),
    style: {
      left: arrowLeftPos && "".concat(arrowLeftPos, "px")
    }
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: style.wrapper
  }, content)));
};
PopOver.propTypes = {
  /**
   * Show pop over
   */
  visible: PropTypes__default['default'].bool,

  /**
   * Close callback triggered when clicking outside the pop over
   */
  onClose: PropTypes__default['default'].func,

  /**
   * The content inside the pop over
   */
  content: PropTypes__default['default'].element,

  /**
   * The color of the pop over arrow
   */
  arrowColor: PropTypes__default['default'].oneOf([null, "primary"]),

  /**
   * Width of the pop over
   */
  size: PropTypes__default['default'].oneOf([null, "large"]),

  /**
   * The element that will show the pop over, usually a button
   */
  children: PropTypes__default['default'].element
};
PropTypes__default['default'].defaultValues = {
  visible: false
};

var styles$E = undefined;

var TabPane = function TabPane(_ref) {
  var label = _ref.label,
      icon = _ref.icon,
      link = _ref.link,
      tabKey = _ref.tabKey,
      children = _ref.children,
      onChange = _ref.onChange,
      activeKey = _ref.activeKey;
  var location = reactRouterDom.useLocation();
  var history = reactRouterDom.useHistory();
  /**
   * Handle table click
   */

  var handleTabClick = function handleTabClick() {
    if (link) {
      history.replace(link);
    }

    onChange && onChange(tabKey);
  };

  return children ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$E.pane
  }, /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: classNames__default['default'](styles$E.tab, _defineProperty({}, styles$E.active, link ? link === location.pathname : tabKey === activeKey)),
    onClick: handleTabClick
  }, icon ? /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: icon,
    className: styles$E.icon
  }) : null, label ? /*#__PURE__*/React__default['default'].createElement("span", {
    className: styles$E.label
  }, label) : null)) : null;
};
TabPane.propTypes = {
  /**
   * Tab label
   */
  label: PropTypes__default['default'].string,

  /**
   * Tab icon
   */
  icon: PropTypes__default['default'].oneOf(iconList),

  /**
   * Key that indicates active pane
   */
  tabKey: PropTypes__default['default'].any,

  /**
   * Link path that activates tab. (Use instead of tabKey)
   */
  link: PropTypes__default['default'].string,

  /**
   * Content of tab pane
   */
  children: PropTypes__default['default'].element
};

var Tabs = function Tabs(_ref) {
  var activeKey = _ref.activeKey,
      onChange = _ref.onChange,
      children = _ref.children;
  var location = reactRouterDom.useLocation();

  var _useState = React.useState(null),
      _useState2 = _slicedToArray(_useState, 2),
      activePaneIndex = _useState2[0],
      setActivePaneIndex = _useState2[1];

  React.useEffect(function () {
    setActivePaneIndex(null);

    if (activeKey) {
      children && children.forEach(function (pane, index) {
        if (pane.props.link ? pane.props.link === location.pathname : pane.props.tabKey === activeKey) {
          setActivePaneIndex(index);
        }
      });
    }
  }, [activeKey]);
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$E.base
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$E.tabs
  }, /*#__PURE__*/React__default['default'].createElement(ScrollableArea, null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$E.wrapper
  }, React__default['default'].Children.map(children, function (child) {
    if (child && child.type === TabPane) {
      return /*#__PURE__*/React__default['default'].cloneElement(child, {
        activeKey: activeKey,
        onChange: onChange
      });
    }
  })))), activePaneIndex !== null ? children[activePaneIndex].props.children : null);
};
Tabs.propTypes = {
  /**
   * The active tab key
   */
  activeKey: PropTypes__default['default'].any,

  /**
   * Tab clicked callback that returns the respective key
   */
  onChange: PropTypes__default['default'].func
};

var styles$F = undefined;

var Callout = function Callout(_ref) {
  var _classNames;

  var color = _ref.color,
      title = _ref.title,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$F.base, (_classNames = {}, _defineProperty(_classNames, styles$F.info, color === "info"), _defineProperty(_classNames, styles$F.success, color === "success"), _defineProperty(_classNames, styles$F.warning, color === "warning"), _defineProperty(_classNames, styles$F.error, color === "error"), _classNames))
  }, title ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$F.title
  }, title) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$F.message
  }, children));
};
Callout.propTypes = {
  /**
   * Color of the call out
   */
  color: PropTypes__default['default'].oneOf(["info", "success", "warning", "error"]),

  /**
   * Title of the call out
   */
  title: PropTypes__default['default'].string,

  /**
   * Content of the call out
   */
  children: PropTypes__default['default'].any
};

var styles$G = undefined;

var Popup = function Popup(_ref) {
  var _classNames;

  var visible = _ref.visible,
      size = _ref.size,
      onClose = _ref.onClose,
      children = _ref.children;
  return visible ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$G.base, (_classNames = {}, _defineProperty(_classNames, styles$G.sizeAuto, size === "auto"), _defineProperty(_classNames, styles$G.sizeMedium, size === "medium"), _classNames)),
    onClick: onclose
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.box,
    onClick: function onClick(e) {
      e.stopPropagation();
    }
  }, onClose ? /*#__PURE__*/React__default['default'].createElement(Clickable, {
    onClick: onClose,
    className: styles$G.close,
    cyp: "popupClose"
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    className: styles$G.icon,
    name: "close"
  })) : null, visible ? children : null), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.overlay
  }, /*#__PURE__*/React__default['default'].createElement(Overlay, {
    visible: true,
    scrollControl: false
  }))) : null;
};
Popup.propTypes = {
  /**
   * Show/hide popup
   */
  visible: PropTypes__default['default'].bool,

  /**
   * Adjust the max size of the popup
   */
  size: PropTypes__default['default'].oneOf(["auto", "medium"]),

  /**
   * Close button click callback
   */
  onClose: PropTypes__default['default'].func
};
Popup.defaultProps = {
  visible: true
};

var PopupTitle = function PopupTitle(_ref) {
  var description = _ref.description,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.title
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.text
  }, children), description ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.description
  }, description) : null);
};
PopupTitle.propTypes = {
  /**
   * Smaller title text
   */
  description: PropTypes__default['default'].string,

  /**
   * Popup title text
   */
  children: PropTypes__default['default'].any
};

var PopupContent = function PopupContent(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.content
  }, /*#__PURE__*/React__default['default'].createElement(ScrollableArea, null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.frame
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.wrapper
  }, children))));
};
PopupContent.propTypes = {
  /**
   * Any content of the popup
   */
  children: PropTypes__default['default'].any
};

var PopupTabs = function PopupTabs(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.tabs
  }, React__default['default'].Children.map(children, function (child, index) {
    if (child.type === Tabs) {
      return /*#__PURE__*/React__default['default'].cloneElement(child, {
        popupMode: true
      });
    }
  }));
};
PopupTabs.propTypes = {
  /**
   * Tabs component
   */
  children: PropTypes__default['default'].element
};

var PopupFooter = function PopupFooter(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$G.footer
  }, children);
};
PopupFooter.propTypes = {
  /**
   * Content of footer
   */
  children: PropTypes__default['default'].any
};

var PopupYesNo = function PopupYesNo(_ref) {
  var title = _ref.title,
      children = _ref.children,
      onYes = _ref.onYes,
      onNo = _ref.onNo,
      visible = _ref.visible,
      onClose = _ref.onClose,
      lang = _ref.lang;
  return /*#__PURE__*/React__default['default'].createElement(Popup, {
    visible: visible,
    onClose: onClose
  }, /*#__PURE__*/React__default['default'].createElement(PopupTitle, null, title), /*#__PURE__*/React__default['default'].createElement(PopupContent, null, /*#__PURE__*/React__default['default'].createElement(Text, {
    size: "medium"
  }, children)), /*#__PURE__*/React__default['default'].createElement(PopupFooter, null, /*#__PURE__*/React__default['default'].createElement(Row, {
    gutter: ["small"]
  }, /*#__PURE__*/React__default['default'].createElement(Col, {
    span: 12
  }, /*#__PURE__*/React__default['default'].createElement(Button, {
    icon: "check",
    color: "success",
    onClick: onYes
  }, lang.yes)), /*#__PURE__*/React__default['default'].createElement(Col, {
    span: 12
  }, /*#__PURE__*/React__default['default'].createElement(Button, {
    icon: "close",
    color: "error",
    onClick: onNo
  }, lang.no)))));
};
PopupYesNo.defaultProps = {
  visible: true,
  lang: {
    yes: "Yes",
    no: "No"
  }
};
PopupYesNo.propTypes = {
  /**
   * Title of prompt
   */
  title: PropTypes__default['default'].string,

  /**
   * Message / content of popup
   */
  children: PropTypes__default['default'].any,

  /**
   * "Yes" click callback function
   */
  onYes: PropTypes__default['default'].func,

  /**
   * "No" click callback function
   */
  onNo: PropTypes__default['default'].func,

  /**
   * Handler for clicking close button
   */
  onClose: PropTypes__default['default'].func,

  /**
   * Show/hide popup
   */
  visible: PropTypes__default['default'].bool,

  /**
   * Override language
   */
  lang: PropTypes__default['default'].object
};

var styles$H = undefined;

var objectWithoutProperties = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

exports.default = function (obj, keys) {
  var target = {};

  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }

  return target;
};
});

var _objectWithoutProperties$2 = unwrapExports(objectWithoutProperties);

var _global = createCommonjsModule(function (module) {
// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
var global = module.exports = typeof window != 'undefined' && window.Math == Math
  ? window : typeof self != 'undefined' && self.Math == Math ? self
  // eslint-disable-next-line no-new-func
  : Function('return this')();
if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef
});

var _core = createCommonjsModule(function (module) {
var core = module.exports = { version: '2.6.12' };
if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef
});
var _core_1 = _core.version;

var _aFunction = function (it) {
  if (typeof it != 'function') throw TypeError(it + ' is not a function!');
  return it;
};

// optional / simple context binding

var _ctx = function (fn, that, length) {
  _aFunction(fn);
  if (that === undefined) return fn;
  switch (length) {
    case 1: return function (a) {
      return fn.call(that, a);
    };
    case 2: return function (a, b) {
      return fn.call(that, a, b);
    };
    case 3: return function (a, b, c) {
      return fn.call(that, a, b, c);
    };
  }
  return function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};

var _isObject = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

var _anObject = function (it) {
  if (!_isObject(it)) throw TypeError(it + ' is not an object!');
  return it;
};

var _fails = function (exec) {
  try {
    return !!exec();
  } catch (e) {
    return true;
  }
};

// Thank's IE8 for his funny defineProperty
var _descriptors = !_fails(function () {
  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;
});

var document$1 = _global.document;
// typeof document.createElement is 'object' in old IE
var is = _isObject(document$1) && _isObject(document$1.createElement);
var _domCreate = function (it) {
  return is ? document$1.createElement(it) : {};
};

var _ie8DomDefine = !_descriptors && !_fails(function () {
  return Object.defineProperty(_domCreate('div'), 'a', { get: function () { return 7; } }).a != 7;
});

// 7.1.1 ToPrimitive(input [, PreferredType])

// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
var _toPrimitive = function (it, S) {
  if (!_isObject(it)) return it;
  var fn, val;
  if (S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (typeof (fn = it.valueOf) == 'function' && !_isObject(val = fn.call(it))) return val;
  if (!S && typeof (fn = it.toString) == 'function' && !_isObject(val = fn.call(it))) return val;
  throw TypeError("Can't convert object to primitive value");
};

var dP = Object.defineProperty;

var f = _descriptors ? Object.defineProperty : function defineProperty(O, P, Attributes) {
  _anObject(O);
  P = _toPrimitive(P, true);
  _anObject(Attributes);
  if (_ie8DomDefine) try {
    return dP(O, P, Attributes);
  } catch (e) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

var _objectDp = {
	f: f
};

var _propertyDesc = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

var _hide = _descriptors ? function (object, key, value) {
  return _objectDp.f(object, key, _propertyDesc(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

var hasOwnProperty = {}.hasOwnProperty;
var _has = function (it, key) {
  return hasOwnProperty.call(it, key);
};

var PROTOTYPE = 'prototype';

var $export = function (type, name, source) {
  var IS_FORCED = type & $export.F;
  var IS_GLOBAL = type & $export.G;
  var IS_STATIC = type & $export.S;
  var IS_PROTO = type & $export.P;
  var IS_BIND = type & $export.B;
  var IS_WRAP = type & $export.W;
  var exports = IS_GLOBAL ? _core : _core[name] || (_core[name] = {});
  var expProto = exports[PROTOTYPE];
  var target = IS_GLOBAL ? _global : IS_STATIC ? _global[name] : (_global[name] || {})[PROTOTYPE];
  var key, own, out;
  if (IS_GLOBAL) source = name;
  for (key in source) {
    // contains in native
    own = !IS_FORCED && target && target[key] !== undefined;
    if (own && _has(exports, key)) continue;
    // export native or passed
    out = own ? target[key] : source[key];
    // prevent global pollution for namespaces
    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]
    // bind timers to global for call from export context
    : IS_BIND && own ? _ctx(out, _global)
    // wrap global constructors for prevent change them in library
    : IS_WRAP && target[key] == out ? (function (C) {
      var F = function (a, b, c) {
        if (this instanceof C) {
          switch (arguments.length) {
            case 0: return new C();
            case 1: return new C(a);
            case 2: return new C(a, b);
          } return new C(a, b, c);
        } return C.apply(this, arguments);
      };
      F[PROTOTYPE] = C[PROTOTYPE];
      return F;
    // make static versions for prototype methods
    })(out) : IS_PROTO && typeof out == 'function' ? _ctx(Function.call, out) : out;
    // export proto methods to core.%CONSTRUCTOR%.methods.%NAME%
    if (IS_PROTO) {
      (exports.virtual || (exports.virtual = {}))[key] = out;
      // export proto methods to core.%CONSTRUCTOR%.prototype.%NAME%
      if (type & $export.R && expProto && !expProto[key]) _hide(expProto, key, out);
    }
  }
};
// type bitmap
$export.F = 1;   // forced
$export.G = 2;   // global
$export.S = 4;   // static
$export.P = 8;   // proto
$export.B = 16;  // bind
$export.W = 32;  // wrap
$export.U = 64;  // safe
$export.R = 128; // real proto method for `library`
var _export = $export;

// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
_export(_export.S + _export.F * !_descriptors, 'Object', { defineProperty: _objectDp.f });

var $Object = _core.Object;
var defineProperty = function defineProperty(it, key, desc) {
  return $Object.defineProperty(it, key, desc);
};

var defineProperty$1 = createCommonjsModule(function (module) {
module.exports = { "default": defineProperty, __esModule: true };
});

unwrapExports(defineProperty$1);

var defineProperty$2 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _defineProperty2 = _interopRequireDefault(defineProperty$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (obj, key, value) {
  if (key in obj) {
    (0, _defineProperty2.default)(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};
});

var _defineProperty$4 = unwrapExports(defineProperty$2);

var toString = {}.toString;

var _cof = function (it) {
  return toString.call(it).slice(8, -1);
};

// fallback for non-array-like ES3 and non-enumerable old V8 strings

// eslint-disable-next-line no-prototype-builtins
var _iobject = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
  return _cof(it) == 'String' ? it.split('') : Object(it);
};

// 7.2.1 RequireObjectCoercible(argument)
var _defined = function (it) {
  if (it == undefined) throw TypeError("Can't call method on  " + it);
  return it;
};

// to indexed object, toObject with fallback for non-array-like ES3 strings


var _toIobject = function (it) {
  return _iobject(_defined(it));
};

// 7.1.4 ToInteger
var ceil = Math.ceil;
var floor = Math.floor;
var _toInteger = function (it) {
  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
};

// 7.1.15 ToLength

var min = Math.min;
var _toLength = function (it) {
  return it > 0 ? min(_toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
};

var max = Math.max;
var min$1 = Math.min;
var _toAbsoluteIndex = function (index, length) {
  index = _toInteger(index);
  return index < 0 ? max(index + length, 0) : min$1(index, length);
};

// false -> Array#indexOf
// true  -> Array#includes



var _arrayIncludes = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = _toIobject($this);
    var length = _toLength(O.length);
    var index = _toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {
      if (O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

var _library = true;

var _shared = createCommonjsModule(function (module) {
var SHARED = '__core-js_shared__';
var store = _global[SHARED] || (_global[SHARED] = {});

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: _core.version,
  mode:  'pure' ,
  copyright: '© 2020 Denis Pushkarev (zloirock.ru)'
});
});

var id = 0;
var px = Math.random();
var _uid = function (key) {
  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
};

var shared = _shared('keys');

var _sharedKey = function (key) {
  return shared[key] || (shared[key] = _uid(key));
};

var arrayIndexOf = _arrayIncludes(false);
var IE_PROTO = _sharedKey('IE_PROTO');

var _objectKeysInternal = function (object, names) {
  var O = _toIobject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) if (key != IE_PROTO) _has(O, key) && result.push(key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (_has(O, key = names[i++])) {
    ~arrayIndexOf(result, key) || result.push(key);
  }
  return result;
};

// IE 8- don't enum bug keys
var _enumBugKeys = (
  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
).split(',');

// 19.1.2.14 / 15.2.3.14 Object.keys(O)



var _objectKeys = Object.keys || function keys(O) {
  return _objectKeysInternal(O, _enumBugKeys);
};

var f$1 = Object.getOwnPropertySymbols;

var _objectGops = {
	f: f$1
};

var f$2 = {}.propertyIsEnumerable;

var _objectPie = {
	f: f$2
};

// 7.1.13 ToObject(argument)

var _toObject = function (it) {
  return Object(_defined(it));
};

// 19.1.2.1 Object.assign(target, source, ...)






var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
var _objectAssign = !$assign || _fails(function () {
  var A = {};
  var B = {};
  // eslint-disable-next-line no-undef
  var S = Symbol();
  var K = 'abcdefghijklmnopqrst';
  A[S] = 7;
  K.split('').forEach(function (k) { B[k] = k; });
  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars
  var T = _toObject(target);
  var aLen = arguments.length;
  var index = 1;
  var getSymbols = _objectGops.f;
  var isEnum = _objectPie.f;
  while (aLen > index) {
    var S = _iobject(arguments[index++]);
    var keys = getSymbols ? _objectKeys(S).concat(getSymbols(S)) : _objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!_descriptors || isEnum.call(S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;

// 19.1.3.1 Object.assign(target, source)


_export(_export.S + _export.F, 'Object', { assign: _objectAssign });

var assign = _core.Object.assign;

var assign$1 = createCommonjsModule(function (module) {
module.exports = { "default": assign, __esModule: true };
});

unwrapExports(assign$1);

var _extends$3 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _assign2 = _interopRequireDefault(assign$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _assign2.default || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};
});

var _extends$4 = unwrapExports(_extends$3);

var classCallCheck = createCommonjsModule(function (module, exports) {

exports.__esModule = true;

exports.default = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};
});

var _classCallCheck$3 = unwrapExports(classCallCheck);

var createClass = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _defineProperty2 = _interopRequireDefault(defineProperty$1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      (0, _defineProperty2.default)(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();
});

var _createClass$3 = unwrapExports(createClass);

// true  -> String#at
// false -> String#codePointAt
var _stringAt = function (TO_STRING) {
  return function (that, pos) {
    var s = String(_defined(that));
    var i = _toInteger(pos);
    var l = s.length;
    var a, b;
    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
    a = s.charCodeAt(i);
    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
      ? TO_STRING ? s.charAt(i) : a
      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
  };
};

var _redefine = _hide;

var _objectDps = _descriptors ? Object.defineProperties : function defineProperties(O, Properties) {
  _anObject(O);
  var keys = _objectKeys(Properties);
  var length = keys.length;
  var i = 0;
  var P;
  while (length > i) _objectDp.f(O, P = keys[i++], Properties[P]);
  return O;
};

var document$2 = _global.document;
var _html = document$2 && document$2.documentElement;

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])



var IE_PROTO$1 = _sharedKey('IE_PROTO');
var Empty = function () { /* empty */ };
var PROTOTYPE$1 = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var createDict = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = _domCreate('iframe');
  var i = _enumBugKeys.length;
  var lt = '<';
  var gt = '>';
  var iframeDocument;
  iframe.style.display = 'none';
  _html.appendChild(iframe);
  iframe.src = 'javascript:'; // eslint-disable-line no-script-url
  // createDict = iframe.contentWindow.Object;
  // html.removeChild(iframe);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
  iframeDocument.close();
  createDict = iframeDocument.F;
  while (i--) delete createDict[PROTOTYPE$1][_enumBugKeys[i]];
  return createDict();
};

var _objectCreate = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    Empty[PROTOTYPE$1] = _anObject(O);
    result = new Empty();
    Empty[PROTOTYPE$1] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO$1] = O;
  } else result = createDict();
  return Properties === undefined ? result : _objectDps(result, Properties);
};

var _wks = createCommonjsModule(function (module) {
var store = _shared('wks');

var Symbol = _global.Symbol;
var USE_SYMBOL = typeof Symbol == 'function';

var $exports = module.exports = function (name) {
  return store[name] || (store[name] =
    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : _uid)('Symbol.' + name));
};

$exports.store = store;
});

var def = _objectDp.f;

var TAG = _wks('toStringTag');

var _setToStringTag = function (it, tag, stat) {
  if (it && !_has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });
};

var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
_hide(IteratorPrototype, _wks('iterator'), function () { return this; });

var _iterCreate = function (Constructor, NAME, next) {
  Constructor.prototype = _objectCreate(IteratorPrototype, { next: _propertyDesc(1, next) });
  _setToStringTag(Constructor, NAME + ' Iterator');
};

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)


var IE_PROTO$2 = _sharedKey('IE_PROTO');
var ObjectProto = Object.prototype;

var _objectGpo = Object.getPrototypeOf || function (O) {
  O = _toObject(O);
  if (_has(O, IE_PROTO$2)) return O[IE_PROTO$2];
  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  } return O instanceof Object ? ObjectProto : null;
};

var ITERATOR = _wks('iterator');
var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
var FF_ITERATOR = '@@iterator';
var KEYS = 'keys';
var VALUES = 'values';

var _iterDefine = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
  _iterCreate(Constructor, NAME, next);
  var getMethod = function (kind) {
    if (!BUGGY && kind in proto) return proto[kind];
    switch (kind) {
      case KEYS: return function keys() { return new Constructor(this, kind); };
      case VALUES: return function values() { return new Constructor(this, kind); };
    } return function entries() { return new Constructor(this, kind); };
  };
  var TAG = NAME + ' Iterator';
  var DEF_VALUES = DEFAULT == VALUES;
  var VALUES_BUG = false;
  var proto = Base.prototype;
  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
  var $default = $native || getMethod(DEFAULT);
  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
  var methods, key, IteratorPrototype;
  // Fix native
  if ($anyNative) {
    IteratorPrototype = _objectGpo($anyNative.call(new Base()));
    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
      // Set @@toStringTag to native iterators
      _setToStringTag(IteratorPrototype, TAG, true);
    }
  }
  // fix Array#{values, @@iterator}.name in V8 / FF
  if (DEF_VALUES && $native && $native.name !== VALUES) {
    VALUES_BUG = true;
    $default = function values() { return $native.call(this); };
  }
  // Define iterator
  if (( FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
    _hide(proto, ITERATOR, $default);
  }
  if (DEFAULT) {
    methods = {
      values: DEF_VALUES ? $default : getMethod(VALUES),
      keys: IS_SET ? $default : getMethod(KEYS),
      entries: $entries
    };
    if (FORCED) for (key in methods) {
      if (!(key in proto)) _redefine(proto, key, methods[key]);
    } else _export(_export.P + _export.F * (BUGGY || VALUES_BUG), NAME, methods);
  }
  return methods;
};

var $at = _stringAt(true);

// 21.1.3.27 String.prototype[@@iterator]()
_iterDefine(String, 'String', function (iterated) {
  this._t = String(iterated); // target
  this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var index = this._i;
  var point;
  if (index >= O.length) return { value: undefined, done: true };
  point = $at(O, index);
  this._i += point.length;
  return { value: point, done: false };
});

var _iterStep = function (done, value) {
  return { value: value, done: !!done };
};

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
var es6_array_iterator = _iterDefine(Array, 'Array', function (iterated, kind) {
  this._t = _toIobject(iterated); // target
  this._i = 0;                   // next index
  this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
}, function () {
  var O = this._t;
  var kind = this._k;
  var index = this._i++;
  if (!O || index >= O.length) {
    this._t = undefined;
    return _iterStep(1);
  }
  if (kind == 'keys') return _iterStep(0, index);
  if (kind == 'values') return _iterStep(0, O[index]);
  return _iterStep(0, [index, O[index]]);
}, 'values');

var TO_STRING_TAG = _wks('toStringTag');

var DOMIterables = ('CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,' +
  'DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,' +
  'MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,' +
  'SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,' +
  'TextTrackList,TouchList').split(',');

for (var i = 0; i < DOMIterables.length; i++) {
  var NAME = DOMIterables[i];
  var Collection = _global[NAME];
  var proto = Collection && Collection.prototype;
  if (proto && !proto[TO_STRING_TAG]) _hide(proto, TO_STRING_TAG, NAME);
}

var f$3 = _wks;

var _wksExt = {
	f: f$3
};

var iterator = _wksExt.f('iterator');

var iterator$1 = createCommonjsModule(function (module) {
module.exports = { "default": iterator, __esModule: true };
});

unwrapExports(iterator$1);

var _meta = createCommonjsModule(function (module) {
var META = _uid('meta');


var setDesc = _objectDp.f;
var id = 0;
var isExtensible = Object.isExtensible || function () {
  return true;
};
var FREEZE = !_fails(function () {
  return isExtensible(Object.preventExtensions({}));
});
var setMeta = function (it) {
  setDesc(it, META, { value: {
    i: 'O' + ++id, // object ID
    w: {}          // weak collections IDs
  } });
};
var fastKey = function (it, create) {
  // return primitive with prefix
  if (!_isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!_has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMeta(it);
  // return object ID
  } return it[META].i;
};
var getWeak = function (it, create) {
  if (!_has(it, META)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMeta(it);
  // return hash weak collections IDs
  } return it[META].w;
};
// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZE && meta.NEED && isExtensible(it) && !_has(it, META)) setMeta(it);
  return it;
};
var meta = module.exports = {
  KEY: META,
  NEED: false,
  fastKey: fastKey,
  getWeak: getWeak,
  onFreeze: onFreeze
};
});
var _meta_1 = _meta.KEY;
var _meta_2 = _meta.NEED;
var _meta_3 = _meta.fastKey;
var _meta_4 = _meta.getWeak;
var _meta_5 = _meta.onFreeze;

var defineProperty$3 = _objectDp.f;
var _wksDefine = function (name) {
  var $Symbol = _core.Symbol || (_core.Symbol =  {} );
  if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty$3($Symbol, name, { value: _wksExt.f(name) });
};

// all enumerable object keys, includes symbols



var _enumKeys = function (it) {
  var result = _objectKeys(it);
  var getSymbols = _objectGops.f;
  if (getSymbols) {
    var symbols = getSymbols(it);
    var isEnum = _objectPie.f;
    var i = 0;
    var key;
    while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
  } return result;
};

// 7.2.2 IsArray(argument)

var _isArray = Array.isArray || function isArray(arg) {
  return _cof(arg) == 'Array';
};

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)

var hiddenKeys = _enumBugKeys.concat('length', 'prototype');

var f$4 = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return _objectKeysInternal(O, hiddenKeys);
};

var _objectGopn = {
	f: f$4
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window

var gOPN = _objectGopn.f;
var toString$1 = {}.toString;

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return gOPN(it);
  } catch (e) {
    return windowNames.slice();
  }
};

var f$5 = function getOwnPropertyNames(it) {
  return windowNames && toString$1.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(_toIobject(it));
};

var _objectGopnExt = {
	f: f$5
};

var gOPD = Object.getOwnPropertyDescriptor;

var f$6 = _descriptors ? gOPD : function getOwnPropertyDescriptor(O, P) {
  O = _toIobject(O);
  P = _toPrimitive(P, true);
  if (_ie8DomDefine) try {
    return gOPD(O, P);
  } catch (e) { /* empty */ }
  if (_has(O, P)) return _propertyDesc(!_objectPie.f.call(O, P), O[P]);
};

var _objectGopd = {
	f: f$6
};

// ECMAScript 6 symbols shim





var META = _meta.KEY;





















var gOPD$1 = _objectGopd.f;
var dP$1 = _objectDp.f;
var gOPN$1 = _objectGopnExt.f;
var $Symbol = _global.Symbol;
var $JSON = _global.JSON;
var _stringify = $JSON && $JSON.stringify;
var PROTOTYPE$2 = 'prototype';
var HIDDEN = _wks('_hidden');
var TO_PRIMITIVE = _wks('toPrimitive');
var isEnum = {}.propertyIsEnumerable;
var SymbolRegistry = _shared('symbol-registry');
var AllSymbols = _shared('symbols');
var OPSymbols = _shared('op-symbols');
var ObjectProto$1 = Object[PROTOTYPE$2];
var USE_NATIVE = typeof $Symbol == 'function' && !!_objectGops.f;
var QObject = _global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var setter = !QObject || !QObject[PROTOTYPE$2] || !QObject[PROTOTYPE$2].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDesc = _descriptors && _fails(function () {
  return _objectCreate(dP$1({}, 'a', {
    get: function () { return dP$1(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (it, key, D) {
  var protoDesc = gOPD$1(ObjectProto$1, key);
  if (protoDesc) delete ObjectProto$1[key];
  dP$1(it, key, D);
  if (protoDesc && it !== ObjectProto$1) dP$1(ObjectProto$1, key, protoDesc);
} : dP$1;

var wrap = function (tag) {
  var sym = AllSymbols[tag] = _objectCreate($Symbol[PROTOTYPE$2]);
  sym._k = tag;
  return sym;
};

var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return it instanceof $Symbol;
};

var $defineProperty = function defineProperty(it, key, D) {
  if (it === ObjectProto$1) $defineProperty(OPSymbols, key, D);
  _anObject(it);
  key = _toPrimitive(key, true);
  _anObject(D);
  if (_has(AllSymbols, key)) {
    if (!D.enumerable) {
      if (!_has(it, HIDDEN)) dP$1(it, HIDDEN, _propertyDesc(1, {}));
      it[HIDDEN][key] = true;
    } else {
      if (_has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
      D = _objectCreate(D, { enumerable: _propertyDesc(0, false) });
    } return setSymbolDesc(it, key, D);
  } return dP$1(it, key, D);
};
var $defineProperties = function defineProperties(it, P) {
  _anObject(it);
  var keys = _enumKeys(P = _toIobject(P));
  var i = 0;
  var l = keys.length;
  var key;
  while (l > i) $defineProperty(it, key = keys[i++], P[key]);
  return it;
};
var $create = function create(it, P) {
  return P === undefined ? _objectCreate(it) : $defineProperties(_objectCreate(it), P);
};
var $propertyIsEnumerable = function propertyIsEnumerable(key) {
  var E = isEnum.call(this, key = _toPrimitive(key, true));
  if (this === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return false;
  return E || !_has(this, key) || !_has(AllSymbols, key) || _has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
};
var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
  it = _toIobject(it);
  key = _toPrimitive(key, true);
  if (it === ObjectProto$1 && _has(AllSymbols, key) && !_has(OPSymbols, key)) return;
  var D = gOPD$1(it, key);
  if (D && _has(AllSymbols, key) && !(_has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
  return D;
};
var $getOwnPropertyNames = function getOwnPropertyNames(it) {
  var names = gOPN$1(_toIobject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (!_has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
  } return result;
};
var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
  var IS_OP = it === ObjectProto$1;
  var names = gOPN$1(IS_OP ? OPSymbols : _toIobject(it));
  var result = [];
  var i = 0;
  var key;
  while (names.length > i) {
    if (_has(AllSymbols, key = names[i++]) && (IS_OP ? _has(ObjectProto$1, key) : true)) result.push(AllSymbols[key]);
  } return result;
};

// 19.4.1.1 Symbol([description])
if (!USE_NATIVE) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
    var tag = _uid(arguments.length > 0 ? arguments[0] : undefined);
    var $set = function (value) {
      if (this === ObjectProto$1) $set.call(OPSymbols, value);
      if (_has(this, HIDDEN) && _has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDesc(this, tag, _propertyDesc(1, value));
    };
    if (_descriptors && setter) setSymbolDesc(ObjectProto$1, tag, { configurable: true, set: $set });
    return wrap(tag);
  };
  _redefine($Symbol[PROTOTYPE$2], 'toString', function toString() {
    return this._k;
  });

  _objectGopd.f = $getOwnPropertyDescriptor;
  _objectDp.f = $defineProperty;
  _objectGopn.f = _objectGopnExt.f = $getOwnPropertyNames;
  _objectPie.f = $propertyIsEnumerable;
  _objectGops.f = $getOwnPropertySymbols;

  if (_descriptors && !_library) {
    _redefine(ObjectProto$1, 'propertyIsEnumerable', $propertyIsEnumerable);
  }

  _wksExt.f = function (name) {
    return wrap(_wks(name));
  };
}

_export(_export.G + _export.W + _export.F * !USE_NATIVE, { Symbol: $Symbol });

for (var es6Symbols = (
  // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
  'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
).split(','), j = 0; es6Symbols.length > j;)_wks(es6Symbols[j++]);

for (var wellKnownSymbols = _objectKeys(_wks.store), k = 0; wellKnownSymbols.length > k;) _wksDefine(wellKnownSymbols[k++]);

_export(_export.S + _export.F * !USE_NATIVE, 'Symbol', {
  // 19.4.2.1 Symbol.for(key)
  'for': function (key) {
    return _has(SymbolRegistry, key += '')
      ? SymbolRegistry[key]
      : SymbolRegistry[key] = $Symbol(key);
  },
  // 19.4.2.5 Symbol.keyFor(sym)
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
    for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
  },
  useSetter: function () { setter = true; },
  useSimple: function () { setter = false; }
});

_export(_export.S + _export.F * !USE_NATIVE, 'Object', {
  // 19.1.2.2 Object.create(O [, Properties])
  create: $create,
  // 19.1.2.4 Object.defineProperty(O, P, Attributes)
  defineProperty: $defineProperty,
  // 19.1.2.3 Object.defineProperties(O, Properties)
  defineProperties: $defineProperties,
  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
  // 19.1.2.7 Object.getOwnPropertyNames(O)
  getOwnPropertyNames: $getOwnPropertyNames,
  // 19.1.2.8 Object.getOwnPropertySymbols(O)
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
var FAILS_ON_PRIMITIVES = _fails(function () { _objectGops.f(1); });

_export(_export.S + _export.F * FAILS_ON_PRIMITIVES, 'Object', {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return _objectGops.f(_toObject(it));
  }
});

// 24.3.2 JSON.stringify(value [, replacer [, space]])
$JSON && _export(_export.S + _export.F * (!USE_NATIVE || _fails(function () {
  var S = $Symbol();
  // MS Edge converts symbol values to JSON as {}
  // WebKit converts symbol values to JSON as null
  // V8 throws on boxed symbols
  return _stringify([S]) != '[null]' || _stringify({ a: S }) != '{}' || _stringify(Object(S)) != '{}';
})), 'JSON', {
  stringify: function stringify(it) {
    var args = [it];
    var i = 1;
    var replacer, $replacer;
    while (arguments.length > i) args.push(arguments[i++]);
    $replacer = replacer = args[1];
    if (!_isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
    if (!_isArray(replacer)) replacer = function (key, value) {
      if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
      if (!isSymbol(value)) return value;
    };
    args[1] = replacer;
    return _stringify.apply($JSON, args);
  }
});

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
$Symbol[PROTOTYPE$2][TO_PRIMITIVE] || _hide($Symbol[PROTOTYPE$2], TO_PRIMITIVE, $Symbol[PROTOTYPE$2].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
_setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
_setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
_setToStringTag(_global.JSON, 'JSON', true);

_wksDefine('asyncIterator');

_wksDefine('observable');

var symbol = _core.Symbol;

var symbol$1 = createCommonjsModule(function (module) {
module.exports = { "default": symbol, __esModule: true };
});

unwrapExports(symbol$1);

var _typeof_1 = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _iterator2 = _interopRequireDefault(iterator$1);



var _symbol2 = _interopRequireDefault(symbol$1);

var _typeof = typeof _symbol2.default === "function" && typeof _iterator2.default === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj; };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = typeof _symbol2.default === "function" && _typeof(_iterator2.default) === "symbol" ? function (obj) {
  return typeof obj === "undefined" ? "undefined" : _typeof(obj);
} : function (obj) {
  return obj && typeof _symbol2.default === "function" && obj.constructor === _symbol2.default && obj !== _symbol2.default.prototype ? "symbol" : typeof obj === "undefined" ? "undefined" : _typeof(obj);
};
});

var _typeof$2 = unwrapExports(_typeof_1);

var possibleConstructorReturn = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _typeof3 = _interopRequireDefault(_typeof_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (self, call) {
  if (!self) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return call && ((typeof call === "undefined" ? "undefined" : (0, _typeof3.default)(call)) === "object" || typeof call === "function") ? call : self;
};
});

var _possibleConstructorReturn$3 = unwrapExports(possibleConstructorReturn);

// Works with __proto__ only. Old v8 can't work with null proto objects.
/* eslint-disable no-proto */


var check = function (O, proto) {
  _anObject(O);
  if (!_isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
};
var _setProto = {
  set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
    function (test, buggy, set) {
      try {
        set = _ctx(Function.call, _objectGopd.f(Object.prototype, '__proto__').set, 2);
        set(test, []);
        buggy = !(test instanceof Array);
      } catch (e) { buggy = true; }
      return function setPrototypeOf(O, proto) {
        check(O, proto);
        if (buggy) O.__proto__ = proto;
        else set(O, proto);
        return O;
      };
    }({}, false) : undefined),
  check: check
};

// 19.1.3.19 Object.setPrototypeOf(O, proto)

_export(_export.S, 'Object', { setPrototypeOf: _setProto.set });

var setPrototypeOf = _core.Object.setPrototypeOf;

var setPrototypeOf$1 = createCommonjsModule(function (module) {
module.exports = { "default": setPrototypeOf, __esModule: true };
});

unwrapExports(setPrototypeOf$1);

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
_export(_export.S, 'Object', { create: _objectCreate });

var $Object$1 = _core.Object;
var create = function create(P, D) {
  return $Object$1.create(P, D);
};

var create$1 = createCommonjsModule(function (module) {
module.exports = { "default": create, __esModule: true };
});

unwrapExports(create$1);

var inherits = createCommonjsModule(function (module, exports) {

exports.__esModule = true;



var _setPrototypeOf2 = _interopRequireDefault(setPrototypeOf$1);



var _create2 = _interopRequireDefault(create$1);



var _typeof3 = _interopRequireDefault(_typeof_1);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = function (subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + (typeof superClass === "undefined" ? "undefined" : (0, _typeof3.default)(superClass)));
  }

  subClass.prototype = (0, _create2.default)(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      enumerable: false,
      writable: true,
      configurable: true
    }
  });
  if (superClass) _setPrototypeOf2.default ? (0, _setPrototypeOf2.default)(subClass, superClass) : subClass.__proto__ = superClass;
};
});

var _inherits$3 = unwrapExports(inherits);

var unsafeLifecyclesPolyfill = function unsafeLifecyclesPolyfill(Component) {
  var prototype = Component.prototype;

  if (!prototype || !prototype.isReactComponent) {
    throw new Error('Can only polyfill class components');
  } // only handle componentWillReceiveProps


  if (typeof prototype.componentWillReceiveProps !== 'function') {
    return Component;
  } // In React 16.9, React.Profiler was introduced together with UNSAFE_componentWillReceiveProps
  // https://reactjs.org/blog/2019/08/08/react-v16.9.0.html#performance-measurements-with-reactprofiler


  if (!React__default['default'].Profiler) {
    return Component;
  } // Here polyfill get started


  prototype.UNSAFE_componentWillReceiveProps = prototype.componentWillReceiveProps;
  delete prototype.componentWillReceiveProps;
  return Component;
};

function toArrayChildren(children) {
  var ret = [];
  React__default['default'].Children.forEach(children, function (child) {
    ret.push(child);
  });
  return ret;
}

function findChildInChildrenByKey(children, key) {
  var ret = null;
  if (children) {
    children.forEach(function (child) {
      if (ret) {
        return;
      }
      if (child && child.key === key) {
        ret = child;
      }
    });
  }
  return ret;
}

function findShownChildInChildrenByKey(children, key, showProp) {
  var ret = null;
  if (children) {
    children.forEach(function (child) {
      if (child && child.key === key && child.props[showProp]) {
        if (ret) {
          throw new Error('two child with same key for <rc-animate> children');
        }
        ret = child;
      }
    });
  }
  return ret;
}

function isSameChildren(c1, c2, showProp) {
  var same = c1.length === c2.length;
  if (same) {
    c1.forEach(function (child, index) {
      var child2 = c2[index];
      if (child && child2) {
        if (child && !child2 || !child && child2) {
          same = false;
        } else if (child.key !== child2.key) {
          same = false;
        } else if (showProp && child.props[showProp] !== child2.props[showProp]) {
          same = false;
        }
      }
    });
  }
  return same;
}

function mergeChildren(prev, next) {
  var ret = [];

  // For each key of `next`, the list of keys to insert before that key in
  // the combined list
  var nextChildrenPending = {};
  var pendingChildren = [];
  prev.forEach(function (child) {
    if (child && findChildInChildrenByKey(next, child.key)) {
      if (pendingChildren.length) {
        nextChildrenPending[child.key] = pendingChildren;
        pendingChildren = [];
      }
    } else {
      pendingChildren.push(child);
    }
  });

  next.forEach(function (child) {
    if (child && Object.prototype.hasOwnProperty.call(nextChildrenPending, child.key)) {
      ret = ret.concat(nextChildrenPending[child.key]);
    }
    ret.push(child);
  });

  ret = ret.concat(pendingChildren);

  return ret;
}

var START_EVENT_NAME_MAP = {
  transitionstart: {
    transition: 'transitionstart',
    WebkitTransition: 'webkitTransitionStart',
    MozTransition: 'mozTransitionStart',
    OTransition: 'oTransitionStart',
    msTransition: 'MSTransitionStart'
  },

  animationstart: {
    animation: 'animationstart',
    WebkitAnimation: 'webkitAnimationStart',
    MozAnimation: 'mozAnimationStart',
    OAnimation: 'oAnimationStart',
    msAnimation: 'MSAnimationStart'
  }
};

var END_EVENT_NAME_MAP = {
  transitionend: {
    transition: 'transitionend',
    WebkitTransition: 'webkitTransitionEnd',
    MozTransition: 'mozTransitionEnd',
    OTransition: 'oTransitionEnd',
    msTransition: 'MSTransitionEnd'
  },

  animationend: {
    animation: 'animationend',
    WebkitAnimation: 'webkitAnimationEnd',
    MozAnimation: 'mozAnimationEnd',
    OAnimation: 'oAnimationEnd',
    msAnimation: 'MSAnimationEnd'
  }
};

var startEvents = [];
var endEvents = [];

function detectEvents() {
  var testEl = document.createElement('div');
  var style = testEl.style;

  if (!('AnimationEvent' in window)) {
    delete START_EVENT_NAME_MAP.animationstart.animation;
    delete END_EVENT_NAME_MAP.animationend.animation;
  }

  if (!('TransitionEvent' in window)) {
    delete START_EVENT_NAME_MAP.transitionstart.transition;
    delete END_EVENT_NAME_MAP.transitionend.transition;
  }

  function process(EVENT_NAME_MAP, events) {
    for (var baseEventName in EVENT_NAME_MAP) {
      if (EVENT_NAME_MAP.hasOwnProperty(baseEventName)) {
        var baseEvents = EVENT_NAME_MAP[baseEventName];
        for (var styleName in baseEvents) {
          if (styleName in style) {
            events.push(baseEvents[styleName]);
            break;
          }
        }
      }
    }
  }

  process(START_EVENT_NAME_MAP, startEvents);
  process(END_EVENT_NAME_MAP, endEvents);
}

if (typeof window !== 'undefined' && typeof document !== 'undefined') {
  detectEvents();
}

function addEventListener(node, eventName, eventListener) {
  node.addEventListener(eventName, eventListener, false);
}

function removeEventListener(node, eventName, eventListener) {
  node.removeEventListener(eventName, eventListener, false);
}

var TransitionEvents = {
  // Start events
  startEvents: startEvents,

  addStartEventListener: function addStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    startEvents.forEach(function (startEvent) {
      addEventListener(node, startEvent, eventListener);
    });
  },
  removeStartEventListener: function removeStartEventListener(node, eventListener) {
    if (startEvents.length === 0) {
      return;
    }
    startEvents.forEach(function (startEvent) {
      removeEventListener(node, startEvent, eventListener);
    });
  },


  // End events
  endEvents: endEvents,

  addEndEventListener: function addEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      window.setTimeout(eventListener, 0);
      return;
    }
    endEvents.forEach(function (endEvent) {
      addEventListener(node, endEvent, eventListener);
    });
  },
  removeEndEventListener: function removeEndEventListener(node, eventListener) {
    if (endEvents.length === 0) {
      return;
    }
    endEvents.forEach(function (endEvent) {
      removeEventListener(node, endEvent, eventListener);
    });
  }
};

var componentIndexof = function(arr, obj){
  if (arr.indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/**
 * Module dependencies.
 */

try {
  var index = componentIndexof;
} catch (err) {
  var index = componentIndexof;
}

/**
 * Whitespace regexp.
 */

var re = /\s+/;

/**
 * toString reference.
 */

var toString$2 = Object.prototype.toString;

/**
 * Wrap `el` in a `ClassList`.
 *
 * @param {Element} el
 * @return {ClassList}
 * @api public
 */

var componentClasses = function(el){
  return new ClassList(el);
};

/**
 * Initialize a new ClassList for `el`.
 *
 * @param {Element} el
 * @api private
 */

function ClassList(el) {
  if (!el || !el.nodeType) {
    throw new Error('A DOM element reference is required');
  }
  this.el = el;
  this.list = el.classList;
}

/**
 * Add class `name` if not already present.
 *
 * @param {String} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.add = function(name){
  // classList
  if (this.list) {
    this.list.add(name);
    return this;
  }

  // fallback
  var arr = this.array();
  var i = index(arr, name);
  if (!~i) arr.push(name);
  this.el.className = arr.join(' ');
  return this;
};

/**
 * Remove class `name` when present, or
 * pass a regular expression to remove
 * any which match.
 *
 * @param {String|RegExp} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.remove = function(name){
  if ('[object RegExp]' == toString$2.call(name)) {
    return this.removeMatching(name);
  }

  // classList
  if (this.list) {
    this.list.remove(name);
    return this;
  }

  // fallback
  var arr = this.array();
  var i = index(arr, name);
  if (~i) arr.splice(i, 1);
  this.el.className = arr.join(' ');
  return this;
};

/**
 * Remove all classes matching `re`.
 *
 * @param {RegExp} re
 * @return {ClassList}
 * @api private
 */

ClassList.prototype.removeMatching = function(re){
  var arr = this.array();
  for (var i = 0; i < arr.length; i++) {
    if (re.test(arr[i])) {
      this.remove(arr[i]);
    }
  }
  return this;
};

/**
 * Toggle class `name`, can force state via `force`.
 *
 * For browsers that support classList, but do not support `force` yet,
 * the mistake will be detected and corrected.
 *
 * @param {String} name
 * @param {Boolean} force
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.toggle = function(name, force){
  // classList
  if (this.list) {
    if ("undefined" !== typeof force) {
      if (force !== this.list.toggle(name, force)) {
        this.list.toggle(name); // toggle again to correct
      }
    } else {
      this.list.toggle(name);
    }
    return this;
  }

  // fallback
  if ("undefined" !== typeof force) {
    if (!force) {
      this.remove(name);
    } else {
      this.add(name);
    }
  } else {
    if (this.has(name)) {
      this.remove(name);
    } else {
      this.add(name);
    }
  }

  return this;
};

/**
 * Return an array of classes.
 *
 * @return {Array}
 * @api public
 */

ClassList.prototype.array = function(){
  var className = this.el.getAttribute('class') || '';
  var str = className.replace(/^\s+|\s+$/g, '');
  var arr = str.split(re);
  if ('' === arr[0]) arr.shift();
  return arr;
};

/**
 * Check if class `name` is present.
 *
 * @param {String} name
 * @return {ClassList}
 * @api public
 */

ClassList.prototype.has =
ClassList.prototype.contains = function(name){
  return this.list
    ? this.list.contains(name)
    : !! ~index(this.array(), name);
};

var isCssAnimationSupported = TransitionEvents.endEvents.length !== 0;
var capitalPrefixes = ['Webkit', 'Moz', 'O',
// ms is special .... !
'ms'];
var prefixes = ['-webkit-', '-moz-', '-o-', 'ms-', ''];

function getStyleProperty(node, name) {
  // old ff need null, https://developer.mozilla.org/en-US/docs/Web/API/Window/getComputedStyle
  var style = window.getComputedStyle(node, null);
  var ret = '';
  for (var i = 0; i < prefixes.length; i++) {
    ret = style.getPropertyValue(prefixes[i] + name);
    if (ret) {
      break;
    }
  }
  return ret;
}

function fixBrowserByTimeout(node) {
  if (isCssAnimationSupported) {
    var transitionDelay = parseFloat(getStyleProperty(node, 'transition-delay')) || 0;
    var transitionDuration = parseFloat(getStyleProperty(node, 'transition-duration')) || 0;
    var animationDelay = parseFloat(getStyleProperty(node, 'animation-delay')) || 0;
    var animationDuration = parseFloat(getStyleProperty(node, 'animation-duration')) || 0;
    var time = Math.max(transitionDuration + transitionDelay, animationDuration + animationDelay);
    // sometimes, browser bug
    node.rcEndAnimTimeout = setTimeout(function () {
      node.rcEndAnimTimeout = null;
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }, time * 1000 + 200);
  }
}

function clearBrowserBugTimeout(node) {
  if (node.rcEndAnimTimeout) {
    clearTimeout(node.rcEndAnimTimeout);
    node.rcEndAnimTimeout = null;
  }
}

var cssAnimation = function cssAnimation(node, transitionName, endCallback) {
  var nameIsObj = (typeof transitionName === 'undefined' ? 'undefined' : _typeof$2(transitionName)) === 'object';
  var className = nameIsObj ? transitionName.name : transitionName;
  var activeClassName = nameIsObj ? transitionName.active : transitionName + '-active';
  var end = endCallback;
  var start = void 0;
  var active = void 0;
  var nodeClasses = componentClasses(node);

  if (endCallback && Object.prototype.toString.call(endCallback) === '[object Object]') {
    end = endCallback.end;
    start = endCallback.start;
    active = endCallback.active;
  }

  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      clearTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    nodeClasses.remove(className);
    nodeClasses.remove(activeClassName);

    TransitionEvents.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;

    // Usually this optional end is used for informing an owner of
    // a leave animation and telling it to remove the child.
    if (end) {
      end();
    }
  };

  TransitionEvents.addEndEventListener(node, node.rcEndListener);

  if (start) {
    start();
  }
  nodeClasses.add(className);

  node.rcAnimTimeout = setTimeout(function () {
    node.rcAnimTimeout = null;
    nodeClasses.add(activeClassName);
    if (active) {
      setTimeout(active, 0);
    }
    fixBrowserByTimeout(node);
    // 30ms for firefox
  }, 30);

  return {
    stop: function stop() {
      if (node.rcEndListener) {
        node.rcEndListener();
      }
    }
  };
};

cssAnimation.style = function (node, style, callback) {
  if (node.rcEndListener) {
    node.rcEndListener();
  }

  node.rcEndListener = function (e) {
    if (e && e.target !== node) {
      return;
    }

    if (node.rcAnimTimeout) {
      clearTimeout(node.rcAnimTimeout);
      node.rcAnimTimeout = null;
    }

    clearBrowserBugTimeout(node);

    TransitionEvents.removeEndEventListener(node, node.rcEndListener);
    node.rcEndListener = null;

    // Usually this optional callback is used for informing an owner of
    // a leave animation and telling it to remove the child.
    if (callback) {
      callback();
    }
  };

  TransitionEvents.addEndEventListener(node, node.rcEndListener);

  node.rcAnimTimeout = setTimeout(function () {
    for (var s in style) {
      if (style.hasOwnProperty(s)) {
        node.style[s] = style[s];
      }
    }
    node.rcAnimTimeout = null;
    fixBrowserByTimeout(node);
  }, 0);
};

cssAnimation.setTransition = function (node, p, value) {
  var property = p;
  var v = value;
  if (value === undefined) {
    v = property;
    property = '';
  }
  property = property || '';
  capitalPrefixes.forEach(function (prefix) {
    node.style[prefix + 'Transition' + property] = v;
  });
};

cssAnimation.isCssAnimationSupported = isCssAnimationSupported;

var util = {
  isAppearSupported: function isAppearSupported(props) {
    return props.transitionName && props.transitionAppear || props.animation.appear;
  },
  isEnterSupported: function isEnterSupported(props) {
    return props.transitionName && props.transitionEnter || props.animation.enter;
  },
  isLeaveSupported: function isLeaveSupported(props) {
    return props.transitionName && props.transitionLeave || props.animation.leave;
  },
  allowAppearCallback: function allowAppearCallback(props) {
    return props.transitionAppear || props.animation.appear;
  },
  allowEnterCallback: function allowEnterCallback(props) {
    return props.transitionEnter || props.animation.enter;
  },
  allowLeaveCallback: function allowLeaveCallback(props) {
    return props.transitionLeave || props.animation.leave;
  }
};

var transitionMap = {
  enter: 'transitionEnter',
  appear: 'transitionAppear',
  leave: 'transitionLeave'
};

var AnimateChild = function (_React$Component) {
  _inherits$3(AnimateChild, _React$Component);

  function AnimateChild() {
    _classCallCheck$3(this, AnimateChild);

    return _possibleConstructorReturn$3(this, (AnimateChild.__proto__ || Object.getPrototypeOf(AnimateChild)).apply(this, arguments));
  }

  _createClass$3(AnimateChild, [{
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.stop();
    }
  }, {
    key: 'componentWillEnter',
    value: function componentWillEnter(done) {
      if (util.isEnterSupported(this.props)) {
        this.transition('enter', done);
      } else {
        done();
      }
    }
  }, {
    key: 'componentWillAppear',
    value: function componentWillAppear(done) {
      if (util.isAppearSupported(this.props)) {
        this.transition('appear', done);
      } else {
        done();
      }
    }
  }, {
    key: 'componentWillLeave',
    value: function componentWillLeave(done) {
      if (util.isLeaveSupported(this.props)) {
        this.transition('leave', done);
      } else {
        // always sync, do not interupt with react component life cycle
        // update hidden -> animate hidden ->
        // didUpdate -> animate leave -> unmount (if animate is none)
        done();
      }
    }
  }, {
    key: 'transition',
    value: function transition(animationType, finishCallback) {
      var _this2 = this;

      var node = ReactDOM__default['default'].findDOMNode(this);
      var props = this.props;
      var transitionName = props.transitionName;
      var nameIsObj = typeof transitionName === 'object';
      this.stop();
      var end = function end() {
        _this2.stopper = null;
        finishCallback();
      };
      if ((isCssAnimationSupported || !props.animation[animationType]) && transitionName && props[transitionMap[animationType]]) {
        var name = nameIsObj ? transitionName[animationType] : transitionName + '-' + animationType;
        var activeName = name + '-active';
        if (nameIsObj && transitionName[animationType + 'Active']) {
          activeName = transitionName[animationType + 'Active'];
        }
        this.stopper = cssAnimation(node, {
          name: name,
          active: activeName
        }, end);
      } else {
        this.stopper = props.animation[animationType](node, end);
      }
    }
  }, {
    key: 'stop',
    value: function stop() {
      var stopper = this.stopper;
      if (stopper) {
        this.stopper = null;
        stopper.stop();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      return this.props.children;
    }
  }]);

  return AnimateChild;
}(React__default['default'].Component);

AnimateChild.propTypes = {
  children: PropTypes__default['default'].any,
  animation: PropTypes__default['default'].any,
  transitionName: PropTypes__default['default'].any
};

var defaultKey = 'rc_animate_' + Date.now();

function getChildrenFromProps(props) {
  var children = props.children;
  if (React__default['default'].isValidElement(children)) {
    if (!children.key) {
      return React__default['default'].cloneElement(children, {
        key: defaultKey
      });
    }
  }
  return children;
}

function noop() {}

var Animate = function (_React$Component) {
  _inherits$3(Animate, _React$Component);

  // eslint-disable-line

  function Animate(props) {
    _classCallCheck$3(this, Animate);

    var _this = _possibleConstructorReturn$3(this, (Animate.__proto__ || Object.getPrototypeOf(Animate)).call(this, props));

    _initialiseProps.call(_this);

    _this.currentlyAnimatingKeys = {};
    _this.keysToEnter = [];
    _this.keysToLeave = [];

    _this.state = {
      children: toArrayChildren(getChildrenFromProps(props))
    };

    _this.childrenRefs = {};
    return _this;
  }

  _createClass$3(Animate, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      var showProp = this.props.showProp;
      var children = this.state.children;
      if (showProp) {
        children = children.filter(function (child) {
          return !!child.props[showProp];
        });
      }
      children.forEach(function (child) {
        if (child) {
          _this2.performAppear(child.key);
        }
      });
    }
  }, {
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      var _this3 = this;

      this.nextProps = nextProps;
      var nextChildren = toArrayChildren(getChildrenFromProps(nextProps));
      var props = this.props;
      // exclusive needs immediate response
      if (props.exclusive) {
        Object.keys(this.currentlyAnimatingKeys).forEach(function (key) {
          _this3.stop(key);
        });
      }
      var showProp = props.showProp;
      var currentlyAnimatingKeys = this.currentlyAnimatingKeys;
      // last props children if exclusive
      var currentChildren = props.exclusive ? toArrayChildren(getChildrenFromProps(props)) : this.state.children;
      // in case destroy in showProp mode
      var newChildren = [];
      if (showProp) {
        currentChildren.forEach(function (currentChild) {
          var nextChild = currentChild && findChildInChildrenByKey(nextChildren, currentChild.key);
          var newChild = void 0;
          if ((!nextChild || !nextChild.props[showProp]) && currentChild.props[showProp]) {
            newChild = React__default['default'].cloneElement(nextChild || currentChild, _defineProperty$4({}, showProp, true));
          } else {
            newChild = nextChild;
          }
          if (newChild) {
            newChildren.push(newChild);
          }
        });
        nextChildren.forEach(function (nextChild) {
          if (!nextChild || !findChildInChildrenByKey(currentChildren, nextChild.key)) {
            newChildren.push(nextChild);
          }
        });
      } else {
        newChildren = mergeChildren(currentChildren, nextChildren);
      }

      // need render to avoid update
      this.setState({
        children: newChildren
      });

      nextChildren.forEach(function (child) {
        var key = child && child.key;
        if (child && currentlyAnimatingKeys[key]) {
          return;
        }
        var hasPrev = child && findChildInChildrenByKey(currentChildren, key);
        if (showProp) {
          var showInNext = child.props[showProp];
          if (hasPrev) {
            var showInNow = findShownChildInChildrenByKey(currentChildren, key, showProp);
            if (!showInNow && showInNext) {
              _this3.keysToEnter.push(key);
            }
          } else if (showInNext) {
            _this3.keysToEnter.push(key);
          }
        } else if (!hasPrev) {
          _this3.keysToEnter.push(key);
        }
      });

      currentChildren.forEach(function (child) {
        var key = child && child.key;
        if (child && currentlyAnimatingKeys[key]) {
          return;
        }
        var hasNext = child && findChildInChildrenByKey(nextChildren, key);
        if (showProp) {
          var showInNow = child.props[showProp];
          if (hasNext) {
            var showInNext = findShownChildInChildrenByKey(nextChildren, key, showProp);
            if (!showInNext && showInNow) {
              _this3.keysToLeave.push(key);
            }
          } else if (showInNow) {
            _this3.keysToLeave.push(key);
          }
        } else if (!hasNext) {
          _this3.keysToLeave.push(key);
        }
      });
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate() {
      var keysToEnter = this.keysToEnter;
      this.keysToEnter = [];
      keysToEnter.forEach(this.performEnter);
      var keysToLeave = this.keysToLeave;
      this.keysToLeave = [];
      keysToLeave.forEach(this.performLeave);
    }
  }, {
    key: 'isValidChildByKey',
    value: function isValidChildByKey(currentChildren, key) {
      var showProp = this.props.showProp;
      if (showProp) {
        return findShownChildInChildrenByKey(currentChildren, key, showProp);
      }
      return findChildInChildrenByKey(currentChildren, key);
    }
  }, {
    key: 'stop',
    value: function stop(key) {
      delete this.currentlyAnimatingKeys[key];
      var component = this.childrenRefs[key];
      if (component) {
        component.stop();
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var props = this.props;
      this.nextProps = props;
      var stateChildren = this.state.children;
      var children = null;
      if (stateChildren) {
        children = stateChildren.map(function (child) {
          if (child === null || child === undefined) {
            return child;
          }
          if (!child.key) {
            throw new Error('must set key for <rc-animate> children');
          }
          return React__default['default'].createElement(
            AnimateChild,
            {
              key: child.key,
              ref: function ref(node) {
                _this4.childrenRefs[child.key] = node;
              },
              animation: props.animation,
              transitionName: props.transitionName,
              transitionEnter: props.transitionEnter,
              transitionAppear: props.transitionAppear,
              transitionLeave: props.transitionLeave
            },
            child
          );
        });
      }
      var Component = props.component;
      if (Component) {
        var passedProps = props;
        if (typeof Component === 'string') {
          passedProps = _extends$4({
            className: props.className,
            style: props.style
          }, props.componentProps);
        }
        return React__default['default'].createElement(
          Component,
          passedProps,
          children
        );
      }
      return children[0] || null;
    }
  }]);

  return Animate;
}(React__default['default'].Component);

Animate.isAnimate = true;
Animate.propTypes = {
  className: PropTypes__default['default'].string,
  style: PropTypes__default['default'].object,
  component: PropTypes__default['default'].any,
  componentProps: PropTypes__default['default'].object,
  animation: PropTypes__default['default'].object,
  transitionName: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].object]),
  transitionEnter: PropTypes__default['default'].bool,
  transitionAppear: PropTypes__default['default'].bool,
  exclusive: PropTypes__default['default'].bool,
  transitionLeave: PropTypes__default['default'].bool,
  onEnd: PropTypes__default['default'].func,
  onEnter: PropTypes__default['default'].func,
  onLeave: PropTypes__default['default'].func,
  onAppear: PropTypes__default['default'].func,
  showProp: PropTypes__default['default'].string,
  children: PropTypes__default['default'].node
};
Animate.defaultProps = {
  animation: {},
  component: 'span',
  componentProps: {},
  transitionEnter: true,
  transitionLeave: true,
  transitionAppear: false,
  onEnd: noop,
  onEnter: noop,
  onLeave: noop,
  onAppear: noop
};

var _initialiseProps = function _initialiseProps() {
  var _this5 = this;

  this.performEnter = function (key) {
    // may already remove by exclusive
    if (_this5.childrenRefs[key]) {
      _this5.currentlyAnimatingKeys[key] = true;
      _this5.childrenRefs[key].componentWillEnter(_this5.handleDoneAdding.bind(_this5, key, 'enter'));
    }
  };

  this.performAppear = function (key) {
    if (_this5.childrenRefs[key]) {
      _this5.currentlyAnimatingKeys[key] = true;
      _this5.childrenRefs[key].componentWillAppear(_this5.handleDoneAdding.bind(_this5, key, 'appear'));
    }
  };

  this.handleDoneAdding = function (key, type) {
    var props = _this5.props;
    delete _this5.currentlyAnimatingKeys[key];
    // if update on exclusive mode, skip check
    if (props.exclusive && props !== _this5.nextProps) {
      return;
    }
    var currentChildren = toArrayChildren(getChildrenFromProps(props));
    if (!_this5.isValidChildByKey(currentChildren, key)) {
      // exclusive will not need this
      _this5.performLeave(key);
    } else if (type === 'appear') {
      if (util.allowAppearCallback(props)) {
        props.onAppear(key);
        props.onEnd(key, true);
      }
    } else if (util.allowEnterCallback(props)) {
      props.onEnter(key);
      props.onEnd(key, true);
    }
  };

  this.performLeave = function (key) {
    // may already remove by exclusive
    if (_this5.childrenRefs[key]) {
      _this5.currentlyAnimatingKeys[key] = true;
      _this5.childrenRefs[key].componentWillLeave(_this5.handleDoneLeaving.bind(_this5, key));
    }
  };

  this.handleDoneLeaving = function (key) {
    var props = _this5.props;
    delete _this5.currentlyAnimatingKeys[key];
    // if update on exclusive mode, skip check
    if (props.exclusive && props !== _this5.nextProps) {
      return;
    }
    var currentChildren = toArrayChildren(getChildrenFromProps(props));
    // in case state change is too fast
    if (_this5.isValidChildByKey(currentChildren, key)) {
      _this5.performEnter(key);
    } else {
      var end = function end() {
        if (util.allowLeaveCallback(props)) {
          props.onLeave(key);
          props.onEnd(key, false);
        }
      };
      if (!isSameChildren(_this5.state.children, currentChildren, props.showProp)) {
        _this5.setState({
          children: currentChildren
        }, end);
      } else {
        end();
      }
    }
  };
};

var Animate$1 = unsafeLifecyclesPolyfill(Animate);

/**
 * Safe chained function
 *
 * Will only create a new function if needed,
 * otherwise will pass back existing functions or null.
 *
 * @returns {function|null}
 */
function createChainedFunction() {
  var args = [].slice.call(arguments, 0);

  if (args.length === 1) {
    return args[0];
  }

  return function chainedFunction() {
    for (var i = 0; i < args.length; i++) {
      if (args[i] && args[i].apply) {
        args[i].apply(this, arguments);
      }
    }
  };
}

var Notice = function (_Component) {
  _inherits$3(Notice, _Component);

  function Notice() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck$3(this, Notice);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn$3(this, (_ref = Notice.__proto__ || Object.getPrototypeOf(Notice)).call.apply(_ref, [this].concat(args))), _this), _this.close = function (e) {
      if (e) {
        e.stopPropagation();
      }
      _this.clearCloseTimer();
      _this.props.onClose();
    }, _this.startCloseTimer = function () {
      if (_this.props.duration) {
        _this.closeTimer = setTimeout(function () {
          _this.close();
        }, _this.props.duration * 1000);
      }
    }, _this.clearCloseTimer = function () {
      if (_this.closeTimer) {
        clearTimeout(_this.closeTimer);
        _this.closeTimer = null;
      }
    }, _temp), _possibleConstructorReturn$3(_this, _ret);
  }

  _createClass$3(Notice, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      this.startCloseTimer();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      if (this.props.duration !== prevProps.duration || this.props.update) {
        this.restartCloseTimer();
      }
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      this.clearCloseTimer();
    }
  }, {
    key: 'restartCloseTimer',
    value: function restartCloseTimer() {
      this.clearCloseTimer();
      this.startCloseTimer();
    }
  }, {
    key: 'render',
    value: function render() {
      var _className;

      var props = this.props;
      var componentClass = props.prefixCls + '-notice';
      var className = (_className = {}, _defineProperty$4(_className, '' + componentClass, 1), _defineProperty$4(_className, componentClass + '-closable', props.closable), _defineProperty$4(_className, props.className, !!props.className), _className);
      return React__default['default'].createElement(
        'div',
        {
          className: classNames__default['default'](className),
          style: props.style,
          onMouseEnter: this.clearCloseTimer,
          onMouseLeave: this.startCloseTimer,
          onClick: props.onClick
        },
        React__default['default'].createElement(
          'div',
          { className: componentClass + '-content' },
          props.children
        ),
        props.closable ? React__default['default'].createElement(
          'a',
          { tabIndex: '0', onClick: this.close, className: componentClass + '-close' },
          props.closeIcon || React__default['default'].createElement('span', { className: componentClass + '-close-x' })
        ) : null
      );
    }
  }]);

  return Notice;
}(React.Component);

Notice.propTypes = {
  duration: PropTypes__default['default'].number,
  onClose: PropTypes__default['default'].func,
  children: PropTypes__default['default'].any,
  update: PropTypes__default['default'].bool,
  closeIcon: PropTypes__default['default'].node
};
Notice.defaultProps = {
  onEnd: function onEnd() {},
  onClose: function onClose() {},

  duration: 1.5,
  style: {
    right: '50%'
  }
};

var seed = 0;
var now = Date.now();

function getUuid() {
  return 'rcNotification_' + now + '_' + seed++;
}

var Notification = function (_Component) {
  _inherits$3(Notification, _Component);

  function Notification() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck$3(this, Notification);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn$3(this, (_ref = Notification.__proto__ || Object.getPrototypeOf(Notification)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      notices: []
    }, _this.add = function (notice) {
      var key = notice.key = notice.key || getUuid();
      var maxCount = _this.props.maxCount;

      _this.setState(function (previousState) {
        var notices = previousState.notices;
        var noticeIndex = notices.map(function (v) {
          return v.key;
        }).indexOf(key);
        var updatedNotices = notices.concat();
        if (noticeIndex !== -1) {
          updatedNotices.splice(noticeIndex, 1, notice);
        } else {
          if (maxCount && notices.length >= maxCount) {
                                                notice.updateKey = updatedNotices[0].updateKey || updatedNotices[0].key;
            updatedNotices.shift();
          }
          updatedNotices.push(notice);
        }
        return {
          notices: updatedNotices
        };
      });
    }, _this.remove = function (key) {
      _this.setState(function (previousState) {
        return {
          notices: previousState.notices.filter(function (notice) {
            return notice.key !== key;
          })
        };
      });
    }, _temp), _possibleConstructorReturn$3(_this, _ret);
  }

  _createClass$3(Notification, [{
    key: 'getTransitionName',
    value: function getTransitionName() {
      var props = this.props;
      var transitionName = props.transitionName;
      if (!transitionName && props.animation) {
        transitionName = props.prefixCls + '-' + props.animation;
      }
      return transitionName;
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this,
          _className;

      var props = this.props;
      var notices = this.state.notices;

      var noticeNodes = notices.map(function (notice, index) {
        var update = Boolean(index === notices.length - 1 && notice.updateKey);
        var key = notice.updateKey ? notice.updateKey : notice.key;
        var onClose = createChainedFunction(_this2.remove.bind(_this2, notice.key), notice.onClose);
        return React__default['default'].createElement(
          Notice,
          _extends$4({
            prefixCls: props.prefixCls
          }, notice, {
            key: key,
            update: update,
            onClose: onClose,
            onClick: notice.onClick,
            closeIcon: props.closeIcon
          }),
          notice.content
        );
      });
      var className = (_className = {}, _defineProperty$4(_className, props.prefixCls, 1), _defineProperty$4(_className, props.className, !!props.className), _className);
      return React__default['default'].createElement(
        'div',
        { className: classNames__default['default'](className), style: props.style },
        React__default['default'].createElement(
          Animate$1,
          { transitionName: this.getTransitionName() },
          noticeNodes
        )
      );
    }
  }]);

  return Notification;
}(React.Component);

Notification.propTypes = {
  prefixCls: PropTypes__default['default'].string,
  transitionName: PropTypes__default['default'].string,
  animation: PropTypes__default['default'].oneOfType([PropTypes__default['default'].string, PropTypes__default['default'].object]),
  style: PropTypes__default['default'].object,
  maxCount: PropTypes__default['default'].number,
  closeIcon: PropTypes__default['default'].node
};
Notification.defaultProps = {
  prefixCls: 'rc-notification',
  animation: 'fade',
  style: {
    top: 65,
    left: '50%'
  }
};


Notification.newInstance = function newNotificationInstance(properties, callback) {
  var _ref2 = properties || {},
      getContainer = _ref2.getContainer,
      props = _objectWithoutProperties$2(_ref2, ['getContainer']);

  var div = document.createElement('div');
  if (getContainer) {
    var root = getContainer();
    root.appendChild(div);
  } else {
    document.body.appendChild(div);
  }
  var called = false;
  function ref(notification) {
    if (called) {
      return;
    }
    called = true;
    callback({
      notice: function notice(noticeProps) {
        notification.add(noticeProps);
      },
      removeNotice: function removeNotice(key) {
        notification.remove(key);
      },

      component: notification,
      destroy: function destroy() {
        ReactDOM__default['default'].unmountComponentAtNode(div);
        div.parentNode.removeChild(div);
      }
    });
  }
  ReactDOM__default['default'].render(React__default['default'].createElement(Notification, _extends$4({}, props, { ref: ref })), div);
};

var defaultDuration = 3;
var messageInstance;
var key = 1;

function getMessageInstance() {
  if (!messageInstance) {
    Notification.newInstance({
      transitionName: "fade",
      style: {
        top: "auto",
        bottom: "20px"
      }
    }, function (notification) {
      messageInstance = notification;
    });
  }

  return messageInstance;
}

function notice(content, duration, type, onClose) {
  var classes = classNames__default['default'](styles$H.base, styles$H[type]);
  var instance = getMessageInstance();
  instance.notice({
    key: key,
    duration: duration || defaultDuration,
    style: {},
    content: /*#__PURE__*/React__default['default'].createElement("div", {
      className: classes
    }, /*#__PURE__*/React__default['default'].createElement("span", {
      className: styles$H.content
    }, content)),
    onClose: onClose
  });
  return function () {
    var target = key++;
    return function () {
      instance.removeNotice(target);
    };
  }();
}

var Toast = {
  info: function info(content, duration, onClose) {
    return notice(content, duration, "info", onClose);
  },
  success: function success(content, duration, onClose) {
    return notice(content, duration, "success", onClose);
  },
  error: function error(content, duration, onClose) {
    return notice(content, duration, "error", onClose);
  },
  config: function config(options) {
    if (options.duration !== undefined) {
      defaultDuration = options.duration;
    }
  },
  destroy: function destroy() {
    if (messageInstance) {
      messageInstance.destroy();
      messageInstance = null;
    }
  }
};

/**!
 * @fileOverview Kickass library to create and place poppers near their reference elements.
 * @version 1.16.1
 * @license
 * Copyright (c) 2016 Federico Zivolo and contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
var isBrowser = typeof window !== 'undefined' && typeof document !== 'undefined' && typeof navigator !== 'undefined';

var timeoutDuration = function () {
  var longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];
  for (var i = 0; i < longerTimeoutBrowsers.length; i += 1) {
    if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {
      return 1;
    }
  }
  return 0;
}();

function microtaskDebounce(fn) {
  var called = false;
  return function () {
    if (called) {
      return;
    }
    called = true;
    window.Promise.resolve().then(function () {
      called = false;
      fn();
    });
  };
}

function taskDebounce(fn) {
  var scheduled = false;
  return function () {
    if (!scheduled) {
      scheduled = true;
      setTimeout(function () {
        scheduled = false;
        fn();
      }, timeoutDuration);
    }
  };
}

var supportsMicroTasks = isBrowser && window.Promise;

/**
* Create a debounced version of a method, that's asynchronously deferred
* but called in the minimum time possible.
*
* @method
* @memberof Popper.Utils
* @argument {Function} fn
* @returns {Function}
*/
var debounce = supportsMicroTasks ? microtaskDebounce : taskDebounce;

/**
 * Check if the given variable is a function
 * @method
 * @memberof Popper.Utils
 * @argument {Any} functionToCheck - variable to check
 * @returns {Boolean} answer to: is a function?
 */
function isFunction(functionToCheck) {
  var getType = {};
  return functionToCheck && getType.toString.call(functionToCheck) === '[object Function]';
}

/**
 * Get CSS computed property of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Eement} element
 * @argument {String} property
 */
function getStyleComputedProperty(element, property) {
  if (element.nodeType !== 1) {
    return [];
  }
  // NOTE: 1 DOM access here
  var window = element.ownerDocument.defaultView;
  var css = window.getComputedStyle(element, null);
  return property ? css[property] : css;
}

/**
 * Returns the parentNode or the host of the element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} parent
 */
function getParentNode(element) {
  if (element.nodeName === 'HTML') {
    return element;
  }
  return element.parentNode || element.host;
}

/**
 * Returns the scrolling parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} scroll parent
 */
function getScrollParent(element) {
  // Return body, `getScroll` will take care to get the correct `scrollTop` from it
  if (!element) {
    return document.body;
  }

  switch (element.nodeName) {
    case 'HTML':
    case 'BODY':
      return element.ownerDocument.body;
    case '#document':
      return element.body;
  }

  // Firefox want us to check `-x` and `-y` variations as well

  var _getStyleComputedProp = getStyleComputedProperty(element),
      overflow = _getStyleComputedProp.overflow,
      overflowX = _getStyleComputedProp.overflowX,
      overflowY = _getStyleComputedProp.overflowY;

  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {
    return element;
  }

  return getScrollParent(getParentNode(element));
}

/**
 * Returns the reference node of the reference object, or the reference object itself.
 * @method
 * @memberof Popper.Utils
 * @param {Element|Object} reference - the reference element (the popper will be relative to this)
 * @returns {Element} parent
 */
function getReferenceNode(reference) {
  return reference && reference.referenceNode ? reference.referenceNode : reference;
}

var isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);
var isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);

/**
 * Determines if the browser is Internet Explorer
 * @method
 * @memberof Popper.Utils
 * @param {Number} version to check
 * @returns {Boolean} isIE
 */
function isIE(version) {
  if (version === 11) {
    return isIE11;
  }
  if (version === 10) {
    return isIE10;
  }
  return isIE11 || isIE10;
}

/**
 * Returns the offset parent of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} offset parent
 */
function getOffsetParent(element) {
  if (!element) {
    return document.documentElement;
  }

  var noOffsetParent = isIE(10) ? document.body : null;

  // NOTE: 1 DOM access here
  var offsetParent = element.offsetParent || null;
  // Skip hidden elements which don't have an offsetParent
  while (offsetParent === noOffsetParent && element.nextElementSibling) {
    offsetParent = (element = element.nextElementSibling).offsetParent;
  }

  var nodeName = offsetParent && offsetParent.nodeName;

  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {
    return element ? element.ownerDocument.documentElement : document.documentElement;
  }

  // .offsetParent will return the closest TH, TD or TABLE in case
  // no offsetParent is present, I hate this job...
  if (['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 && getStyleComputedProperty(offsetParent, 'position') === 'static') {
    return getOffsetParent(offsetParent);
  }

  return offsetParent;
}

function isOffsetContainer(element) {
  var nodeName = element.nodeName;

  if (nodeName === 'BODY') {
    return false;
  }
  return nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element;
}

/**
 * Finds the root node (document, shadowDOM root) of the given element
 * @method
 * @memberof Popper.Utils
 * @argument {Element} node
 * @returns {Element} root node
 */
function getRoot(node) {
  if (node.parentNode !== null) {
    return getRoot(node.parentNode);
  }

  return node;
}

/**
 * Finds the offset parent common to the two provided nodes
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element1
 * @argument {Element} element2
 * @returns {Element} common offset parent
 */
function findCommonOffsetParent(element1, element2) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {
    return document.documentElement;
  }

  // Here we make sure to give as "start" the element that comes first in the DOM
  var order = element1.compareDocumentPosition(element2) & Node.DOCUMENT_POSITION_FOLLOWING;
  var start = order ? element1 : element2;
  var end = order ? element2 : element1;

  // Get common ancestor container
  var range = document.createRange();
  range.setStart(start, 0);
  range.setEnd(end, 0);
  var commonAncestorContainer = range.commonAncestorContainer;

  // Both nodes are inside #document

  if (element1 !== commonAncestorContainer && element2 !== commonAncestorContainer || start.contains(end)) {
    if (isOffsetContainer(commonAncestorContainer)) {
      return commonAncestorContainer;
    }

    return getOffsetParent(commonAncestorContainer);
  }

  // one of the nodes is inside shadowDOM, find which one
  var element1root = getRoot(element1);
  if (element1root.host) {
    return findCommonOffsetParent(element1root.host, element2);
  } else {
    return findCommonOffsetParent(element1, getRoot(element2).host);
  }
}

/**
 * Gets the scroll value of the given element in the given side (top and left)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {String} side `top` or `left`
 * @returns {number} amount of scrolled pixels
 */
function getScroll(element) {
  var side = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'top';

  var upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';
  var nodeName = element.nodeName;

  if (nodeName === 'BODY' || nodeName === 'HTML') {
    var html = element.ownerDocument.documentElement;
    var scrollingElement = element.ownerDocument.scrollingElement || html;
    return scrollingElement[upperSide];
  }

  return element[upperSide];
}

/*
 * Sum or subtract the element scroll values (left and top) from a given rect object
 * @method
 * @memberof Popper.Utils
 * @param {Object} rect - Rect object you want to change
 * @param {HTMLElement} element - The element from the function reads the scroll values
 * @param {Boolean} subtract - set to true if you want to subtract the scroll values
 * @return {Object} rect - The modifier rect object
 */
function includeScroll(rect, element) {
  var subtract = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var scrollTop = getScroll(element, 'top');
  var scrollLeft = getScroll(element, 'left');
  var modifier = subtract ? -1 : 1;
  rect.top += scrollTop * modifier;
  rect.bottom += scrollTop * modifier;
  rect.left += scrollLeft * modifier;
  rect.right += scrollLeft * modifier;
  return rect;
}

/*
 * Helper to detect borders of a given element
 * @method
 * @memberof Popper.Utils
 * @param {CSSStyleDeclaration} styles
 * Result of `getStyleComputedProperty` on the given element
 * @param {String} axis - `x` or `y`
 * @return {number} borders - The borders size of the given axis
 */

function getBordersSize(styles, axis) {
  var sideA = axis === 'x' ? 'Left' : 'Top';
  var sideB = sideA === 'Left' ? 'Right' : 'Bottom';

  return parseFloat(styles['border' + sideA + 'Width']) + parseFloat(styles['border' + sideB + 'Width']);
}

function getSize(axis, body, html, computedStyle) {
  return Math.max(body['offset' + axis], body['scroll' + axis], html['client' + axis], html['offset' + axis], html['scroll' + axis], isIE(10) ? parseInt(html['offset' + axis]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Top' : 'Left')]) + parseInt(computedStyle['margin' + (axis === 'Height' ? 'Bottom' : 'Right')]) : 0);
}

function getWindowSizes(document) {
  var body = document.body;
  var html = document.documentElement;
  var computedStyle = isIE(10) && getComputedStyle(html);

  return {
    height: getSize('Height', body, html, computedStyle),
    width: getSize('Width', body, html, computedStyle)
  };
}

var classCallCheck$1 = function (instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
};

var createClass$1 = function () {
  function defineProperties(target, props) {
    for (var i = 0; i < props.length; i++) {
      var descriptor = props[i];
      descriptor.enumerable = descriptor.enumerable || false;
      descriptor.configurable = true;
      if ("value" in descriptor) descriptor.writable = true;
      Object.defineProperty(target, descriptor.key, descriptor);
    }
  }

  return function (Constructor, protoProps, staticProps) {
    if (protoProps) defineProperties(Constructor.prototype, protoProps);
    if (staticProps) defineProperties(Constructor, staticProps);
    return Constructor;
  };
}();





var defineProperty$4 = function (obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
};

var _extends$5 = Object.assign || function (target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i];

    for (var key in source) {
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }

  return target;
};

/**
 * Given element offsets, generate an output similar to getBoundingClientRect
 * @method
 * @memberof Popper.Utils
 * @argument {Object} offsets
 * @returns {Object} ClientRect like output
 */
function getClientRect(offsets) {
  return _extends$5({}, offsets, {
    right: offsets.left + offsets.width,
    bottom: offsets.top + offsets.height
  });
}

/**
 * Get bounding client rect of given element
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} element
 * @return {Object} client rect
 */
function getBoundingClientRect(element) {
  var rect = {};

  // IE10 10 FIX: Please, don't ask, the element isn't
  // considered in DOM in some circumstances...
  // This isn't reproducible in IE10 compatibility mode of IE11
  try {
    if (isIE(10)) {
      rect = element.getBoundingClientRect();
      var scrollTop = getScroll(element, 'top');
      var scrollLeft = getScroll(element, 'left');
      rect.top += scrollTop;
      rect.left += scrollLeft;
      rect.bottom += scrollTop;
      rect.right += scrollLeft;
    } else {
      rect = element.getBoundingClientRect();
    }
  } catch (e) {}

  var result = {
    left: rect.left,
    top: rect.top,
    width: rect.right - rect.left,
    height: rect.bottom - rect.top
  };

  // subtract scrollbar size from sizes
  var sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};
  var width = sizes.width || element.clientWidth || result.width;
  var height = sizes.height || element.clientHeight || result.height;

  var horizScrollbar = element.offsetWidth - width;
  var vertScrollbar = element.offsetHeight - height;

  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`
  // we make this check conditional for performance reasons
  if (horizScrollbar || vertScrollbar) {
    var styles = getStyleComputedProperty(element);
    horizScrollbar -= getBordersSize(styles, 'x');
    vertScrollbar -= getBordersSize(styles, 'y');

    result.width -= horizScrollbar;
    result.height -= vertScrollbar;
  }

  return getClientRect(result);
}

function getOffsetRectRelativeToArbitraryNode(children, parent) {
  var fixedPosition = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

  var isIE10 = isIE(10);
  var isHTML = parent.nodeName === 'HTML';
  var childrenRect = getBoundingClientRect(children);
  var parentRect = getBoundingClientRect(parent);
  var scrollParent = getScrollParent(children);

  var styles = getStyleComputedProperty(parent);
  var borderTopWidth = parseFloat(styles.borderTopWidth);
  var borderLeftWidth = parseFloat(styles.borderLeftWidth);

  // In cases where the parent is fixed, we must ignore negative scroll in offset calc
  if (fixedPosition && isHTML) {
    parentRect.top = Math.max(parentRect.top, 0);
    parentRect.left = Math.max(parentRect.left, 0);
  }
  var offsets = getClientRect({
    top: childrenRect.top - parentRect.top - borderTopWidth,
    left: childrenRect.left - parentRect.left - borderLeftWidth,
    width: childrenRect.width,
    height: childrenRect.height
  });
  offsets.marginTop = 0;
  offsets.marginLeft = 0;

  // Subtract margins of documentElement in case it's being used as parent
  // we do this only on HTML because it's the only element that behaves
  // differently when margins are applied to it. The margins are included in
  // the box of the documentElement, in the other cases not.
  if (!isIE10 && isHTML) {
    var marginTop = parseFloat(styles.marginTop);
    var marginLeft = parseFloat(styles.marginLeft);

    offsets.top -= borderTopWidth - marginTop;
    offsets.bottom -= borderTopWidth - marginTop;
    offsets.left -= borderLeftWidth - marginLeft;
    offsets.right -= borderLeftWidth - marginLeft;

    // Attach marginTop and marginLeft because in some circumstances we may need them
    offsets.marginTop = marginTop;
    offsets.marginLeft = marginLeft;
  }

  if (isIE10 && !fixedPosition ? parent.contains(scrollParent) : parent === scrollParent && scrollParent.nodeName !== 'BODY') {
    offsets = includeScroll(offsets, parent);
  }

  return offsets;
}

function getViewportOffsetRectRelativeToArtbitraryNode(element) {
  var excludeScroll = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var html = element.ownerDocument.documentElement;
  var relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);
  var width = Math.max(html.clientWidth, window.innerWidth || 0);
  var height = Math.max(html.clientHeight, window.innerHeight || 0);

  var scrollTop = !excludeScroll ? getScroll(html) : 0;
  var scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;

  var offset = {
    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,
    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,
    width: width,
    height: height
  };

  return getClientRect(offset);
}

/**
 * Check if the given element is fixed or is inside a fixed parent
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @argument {Element} customContainer
 * @returns {Boolean} answer to "isFixed?"
 */
function isFixed(element) {
  var nodeName = element.nodeName;
  if (nodeName === 'BODY' || nodeName === 'HTML') {
    return false;
  }
  if (getStyleComputedProperty(element, 'position') === 'fixed') {
    return true;
  }
  var parentNode = getParentNode(element);
  if (!parentNode) {
    return false;
  }
  return isFixed(parentNode);
}

/**
 * Finds the first parent of an element that has a transformed property defined
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Element} first transformed parent or documentElement
 */

function getFixedPositionOffsetParent(element) {
  // This check is needed to avoid errors in case one of the elements isn't defined for any reason
  if (!element || !element.parentElement || isIE()) {
    return document.documentElement;
  }
  var el = element.parentElement;
  while (el && getStyleComputedProperty(el, 'transform') === 'none') {
    el = el.parentElement;
  }
  return el || document.documentElement;
}

/**
 * Computed the boundaries limits and return them
 * @method
 * @memberof Popper.Utils
 * @param {HTMLElement} popper
 * @param {HTMLElement} reference
 * @param {number} padding
 * @param {HTMLElement} boundariesElement - Element used to define the boundaries
 * @param {Boolean} fixedPosition - Is in fixed position mode
 * @returns {Object} Coordinates of the boundaries
 */
function getBoundaries(popper, reference, padding, boundariesElement) {
  var fixedPosition = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;

  // NOTE: 1 DOM access here

  var boundaries = { top: 0, left: 0 };
  var offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));

  // Handle viewport case
  if (boundariesElement === 'viewport') {
    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);
  } else {
    // Handle other cases based on DOM element used as boundaries
    var boundariesNode = void 0;
    if (boundariesElement === 'scrollParent') {
      boundariesNode = getScrollParent(getParentNode(reference));
      if (boundariesNode.nodeName === 'BODY') {
        boundariesNode = popper.ownerDocument.documentElement;
      }
    } else if (boundariesElement === 'window') {
      boundariesNode = popper.ownerDocument.documentElement;
    } else {
      boundariesNode = boundariesElement;
    }

    var offsets = getOffsetRectRelativeToArbitraryNode(boundariesNode, offsetParent, fixedPosition);

    // In case of HTML, we need a different computation
    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {
      var _getWindowSizes = getWindowSizes(popper.ownerDocument),
          height = _getWindowSizes.height,
          width = _getWindowSizes.width;

      boundaries.top += offsets.top - offsets.marginTop;
      boundaries.bottom = height + offsets.top;
      boundaries.left += offsets.left - offsets.marginLeft;
      boundaries.right = width + offsets.left;
    } else {
      // for all the other DOM elements, this one is good
      boundaries = offsets;
    }
  }

  // Add paddings
  padding = padding || 0;
  var isPaddingNumber = typeof padding === 'number';
  boundaries.left += isPaddingNumber ? padding : padding.left || 0;
  boundaries.top += isPaddingNumber ? padding : padding.top || 0;
  boundaries.right -= isPaddingNumber ? padding : padding.right || 0;
  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0;

  return boundaries;
}

function getArea(_ref) {
  var width = _ref.width,
      height = _ref.height;

  return width * height;
}

/**
 * Utility used to transform the `auto` placement to the placement with more
 * available space.
 * @method
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeAutoPlacement(placement, refRect, popper, reference, boundariesElement) {
  var padding = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;

  if (placement.indexOf('auto') === -1) {
    return placement;
  }

  var boundaries = getBoundaries(popper, reference, padding, boundariesElement);

  var rects = {
    top: {
      width: boundaries.width,
      height: refRect.top - boundaries.top
    },
    right: {
      width: boundaries.right - refRect.right,
      height: boundaries.height
    },
    bottom: {
      width: boundaries.width,
      height: boundaries.bottom - refRect.bottom
    },
    left: {
      width: refRect.left - boundaries.left,
      height: boundaries.height
    }
  };

  var sortedAreas = Object.keys(rects).map(function (key) {
    return _extends$5({
      key: key
    }, rects[key], {
      area: getArea(rects[key])
    });
  }).sort(function (a, b) {
    return b.area - a.area;
  });

  var filteredAreas = sortedAreas.filter(function (_ref2) {
    var width = _ref2.width,
        height = _ref2.height;
    return width >= popper.clientWidth && height >= popper.clientHeight;
  });

  var computedPlacement = filteredAreas.length > 0 ? filteredAreas[0].key : sortedAreas[0].key;

  var variation = placement.split('-')[1];

  return computedPlacement + (variation ? '-' + variation : '');
}

/**
 * Get offsets to the reference element
 * @method
 * @memberof Popper.Utils
 * @param {Object} state
 * @param {Element} popper - the popper element
 * @param {Element} reference - the reference element (the popper will be relative to this)
 * @param {Element} fixedPosition - is in fixed position mode
 * @returns {Object} An object containing the offsets which will be applied to the popper
 */
function getReferenceOffsets(state, popper, reference) {
  var fixedPosition = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;

  var commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, getReferenceNode(reference));
  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);
}

/**
 * Get the outer sizes of the given element (offset size + margins)
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element
 * @returns {Object} object containing width and height properties
 */
function getOuterSizes(element) {
  var window = element.ownerDocument.defaultView;
  var styles = window.getComputedStyle(element);
  var x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);
  var y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);
  var result = {
    width: element.offsetWidth + y,
    height: element.offsetHeight + x
  };
  return result;
}

/**
 * Get the opposite placement of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement
 * @returns {String} flipped placement
 */
function getOppositePlacement(placement) {
  var hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };
  return placement.replace(/left|right|bottom|top/g, function (matched) {
    return hash[matched];
  });
}

/**
 * Get offsets to the popper
 * @method
 * @memberof Popper.Utils
 * @param {Object} position - CSS position the Popper will get applied
 * @param {HTMLElement} popper - the popper element
 * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)
 * @param {String} placement - one of the valid placement options
 * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper
 */
function getPopperOffsets(popper, referenceOffsets, placement) {
  placement = placement.split('-')[0];

  // Get popper node sizes
  var popperRect = getOuterSizes(popper);

  // Add position, width and height to our offsets object
  var popperOffsets = {
    width: popperRect.width,
    height: popperRect.height
  };

  // depending by the popper placement we have to compute its offsets slightly differently
  var isHoriz = ['right', 'left'].indexOf(placement) !== -1;
  var mainSide = isHoriz ? 'top' : 'left';
  var secondarySide = isHoriz ? 'left' : 'top';
  var measurement = isHoriz ? 'height' : 'width';
  var secondaryMeasurement = !isHoriz ? 'height' : 'width';

  popperOffsets[mainSide] = referenceOffsets[mainSide] + referenceOffsets[measurement] / 2 - popperRect[measurement] / 2;
  if (placement === secondarySide) {
    popperOffsets[secondarySide] = referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];
  } else {
    popperOffsets[secondarySide] = referenceOffsets[getOppositePlacement(secondarySide)];
  }

  return popperOffsets;
}

/**
 * Mimics the `find` method of Array
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function find(arr, check) {
  // use native find if supported
  if (Array.prototype.find) {
    return arr.find(check);
  }

  // use `filter` to obtain the same behavior of `find`
  return arr.filter(check)[0];
}

/**
 * Return the index of the matching object
 * @method
 * @memberof Popper.Utils
 * @argument {Array} arr
 * @argument prop
 * @argument value
 * @returns index or -1
 */
function findIndex(arr, prop, value) {
  // use native findIndex if supported
  if (Array.prototype.findIndex) {
    return arr.findIndex(function (cur) {
      return cur[prop] === value;
    });
  }

  // use `find` + `indexOf` if `findIndex` isn't supported
  var match = find(arr, function (obj) {
    return obj[prop] === value;
  });
  return arr.indexOf(match);
}

/**
 * Loop trough the list of modifiers and run them in order,
 * each of them will then edit the data object.
 * @method
 * @memberof Popper.Utils
 * @param {dataObject} data
 * @param {Array} modifiers
 * @param {String} ends - Optional modifier name used as stopper
 * @returns {dataObject}
 */
function runModifiers(modifiers, data, ends) {
  var modifiersToRun = ends === undefined ? modifiers : modifiers.slice(0, findIndex(modifiers, 'name', ends));

  modifiersToRun.forEach(function (modifier) {
    if (modifier['function']) {
      // eslint-disable-line dot-notation
      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');
    }
    var fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation
    if (modifier.enabled && isFunction(fn)) {
      // Add properties to offsets to make them a complete clientRect object
      // we do this before each modifier to make sure the previous one doesn't
      // mess with these values
      data.offsets.popper = getClientRect(data.offsets.popper);
      data.offsets.reference = getClientRect(data.offsets.reference);

      data = fn(data, modifier);
    }
  });

  return data;
}

/**
 * Updates the position of the popper, computing the new offsets and applying
 * the new style.<br />
 * Prefer `scheduleUpdate` over `update` because of performance reasons.
 * @method
 * @memberof Popper
 */
function update() {
  // if popper is destroyed, don't perform any further update
  if (this.state.isDestroyed) {
    return;
  }

  var data = {
    instance: this,
    styles: {},
    arrowStyles: {},
    attributes: {},
    flipped: false,
    offsets: {}
  };

  // compute reference element offsets
  data.offsets.reference = getReferenceOffsets(this.state, this.popper, this.reference, this.options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  data.placement = computeAutoPlacement(this.options.placement, data.offsets.reference, this.popper, this.reference, this.options.modifiers.flip.boundariesElement, this.options.modifiers.flip.padding);

  // store the computed placement inside `originalPlacement`
  data.originalPlacement = data.placement;

  data.positionFixed = this.options.positionFixed;

  // compute the popper offsets
  data.offsets.popper = getPopperOffsets(this.popper, data.offsets.reference, data.placement);

  data.offsets.popper.position = this.options.positionFixed ? 'fixed' : 'absolute';

  // run the modifiers
  data = runModifiers(this.modifiers, data);

  // the first `update` will call `onCreate` callback
  // the other ones will call `onUpdate` callback
  if (!this.state.isCreated) {
    this.state.isCreated = true;
    this.options.onCreate(data);
  } else {
    this.options.onUpdate(data);
  }
}

/**
 * Helper used to know if the given modifier is enabled.
 * @method
 * @memberof Popper.Utils
 * @returns {Boolean}
 */
function isModifierEnabled(modifiers, modifierName) {
  return modifiers.some(function (_ref) {
    var name = _ref.name,
        enabled = _ref.enabled;
    return enabled && name === modifierName;
  });
}

/**
 * Get the prefixed supported property name
 * @method
 * @memberof Popper.Utils
 * @argument {String} property (camelCase)
 * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)
 */
function getSupportedPropertyName(property) {
  var prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var prefix = prefixes[i];
    var toCheck = prefix ? '' + prefix + upperProp : property;
    if (typeof document.body.style[toCheck] !== 'undefined') {
      return toCheck;
    }
  }
  return null;
}

/**
 * Destroys the popper.
 * @method
 * @memberof Popper
 */
function destroy() {
  this.state.isDestroyed = true;

  // touch DOM only if `applyStyle` modifier is enabled
  if (isModifierEnabled(this.modifiers, 'applyStyle')) {
    this.popper.removeAttribute('x-placement');
    this.popper.style.position = '';
    this.popper.style.top = '';
    this.popper.style.left = '';
    this.popper.style.right = '';
    this.popper.style.bottom = '';
    this.popper.style.willChange = '';
    this.popper.style[getSupportedPropertyName('transform')] = '';
  }

  this.disableEventListeners();

  // remove the popper if user explicitly asked for the deletion on destroy
  // do not use `remove` because IE11 doesn't support it
  if (this.options.removeOnDestroy) {
    this.popper.parentNode.removeChild(this.popper);
  }
  return this;
}

/**
 * Get the window associated with the element
 * @argument {Element} element
 * @returns {Window}
 */
function getWindow(element) {
  var ownerDocument = element.ownerDocument;
  return ownerDocument ? ownerDocument.defaultView : window;
}

function attachToScrollParents(scrollParent, event, callback, scrollParents) {
  var isBody = scrollParent.nodeName === 'BODY';
  var target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;
  target.addEventListener(event, callback, { passive: true });

  if (!isBody) {
    attachToScrollParents(getScrollParent(target.parentNode), event, callback, scrollParents);
  }
  scrollParents.push(target);
}

/**
 * Setup needed event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function setupEventListeners(reference, options, state, updateBound) {
  // Resize event listener on window
  state.updateBound = updateBound;
  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });

  // Scroll event listener on scroll parents
  var scrollElement = getScrollParent(reference);
  attachToScrollParents(scrollElement, 'scroll', state.updateBound, state.scrollParents);
  state.scrollElement = scrollElement;
  state.eventsEnabled = true;

  return state;
}

/**
 * It will add resize/scroll events and start recalculating
 * position of the popper element when they are triggered.
 * @method
 * @memberof Popper
 */
function enableEventListeners() {
  if (!this.state.eventsEnabled) {
    this.state = setupEventListeners(this.reference, this.options, this.state, this.scheduleUpdate);
  }
}

/**
 * Remove event listeners used to update the popper position
 * @method
 * @memberof Popper.Utils
 * @private
 */
function removeEventListeners(reference, state) {
  // Remove resize event listener on window
  getWindow(reference).removeEventListener('resize', state.updateBound);

  // Remove scroll event listener on scroll parents
  state.scrollParents.forEach(function (target) {
    target.removeEventListener('scroll', state.updateBound);
  });

  // Reset state
  state.updateBound = null;
  state.scrollParents = [];
  state.scrollElement = null;
  state.eventsEnabled = false;
  return state;
}

/**
 * It will remove resize/scroll events and won't recalculate popper position
 * when they are triggered. It also won't trigger `onUpdate` callback anymore,
 * unless you call `update` method manually.
 * @method
 * @memberof Popper
 */
function disableEventListeners() {
  if (this.state.eventsEnabled) {
    cancelAnimationFrame(this.scheduleUpdate);
    this.state = removeEventListeners(this.reference, this.state);
  }
}

/**
 * Tells if a given input is a number
 * @method
 * @memberof Popper.Utils
 * @param {*} input to check
 * @return {Boolean}
 */
function isNumeric(n) {
  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);
}

/**
 * Set the style to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the style to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setStyles(element, styles) {
  Object.keys(styles).forEach(function (prop) {
    var unit = '';
    // add unit if the value is numeric and is one of the following
    if (['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !== -1 && isNumeric(styles[prop])) {
      unit = 'px';
    }
    element.style[prop] = styles[prop] + unit;
  });
}

/**
 * Set the attributes to the given popper
 * @method
 * @memberof Popper.Utils
 * @argument {Element} element - Element to apply the attributes to
 * @argument {Object} styles
 * Object with a list of properties and values which will be applied to the element
 */
function setAttributes(element, attributes) {
  Object.keys(attributes).forEach(function (prop) {
    var value = attributes[prop];
    if (value !== false) {
      element.setAttribute(prop, attributes[prop]);
    } else {
      element.removeAttribute(prop);
    }
  });
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} data.styles - List of style properties - values to apply to popper element
 * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The same data object
 */
function applyStyle(data) {
  // any property present in `data.styles` will be applied to the popper,
  // in this way we can make the 3rd party modifiers add custom styles to it
  // Be aware, modifiers could override the properties defined in the previous
  // lines of this modifier!
  setStyles(data.instance.popper, data.styles);

  // any property present in `data.attributes` will be applied to the popper,
  // they will be set as HTML attributes of the element
  setAttributes(data.instance.popper, data.attributes);

  // if arrowElement is defined and arrowStyles has some properties
  if (data.arrowElement && Object.keys(data.arrowStyles).length) {
    setStyles(data.arrowElement, data.arrowStyles);
  }

  return data;
}

/**
 * Set the x-placement attribute before everything else because it could be used
 * to add margins to the popper margins needs to be calculated to get the
 * correct popper offsets.
 * @method
 * @memberof Popper.modifiers
 * @param {HTMLElement} reference - The reference element used to position the popper
 * @param {HTMLElement} popper - The HTML element used as popper
 * @param {Object} options - Popper.js options
 */
function applyStyleOnLoad(reference, popper, options, modifierOptions, state) {
  // compute reference element offsets
  var referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);

  // compute auto placement, store placement inside the data object,
  // modifiers will be able to edit `placement` if needed
  // and refer to originalPlacement to know the original value
  var placement = computeAutoPlacement(options.placement, referenceOffsets, popper, reference, options.modifiers.flip.boundariesElement, options.modifiers.flip.padding);

  popper.setAttribute('x-placement', placement);

  // Apply `position` to popper before anything else because
  // without the position applied we can't guarantee correct computations
  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });

  return options;
}

/**
 * @function
 * @memberof Popper.Utils
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Boolean} shouldRound - If the offsets should be rounded at all
 * @returns {Object} The popper's position offsets rounded
 *
 * The tale of pixel-perfect positioning. It's still not 100% perfect, but as
 * good as it can be within reason.
 * Discussion here: https://github.com/FezVrasta/popper.js/pull/715
 *
 * Low DPI screens cause a popper to be blurry if not using full pixels (Safari
 * as well on High DPI screens).
 *
 * Firefox prefers no rounding for positioning and does not have blurriness on
 * high DPI screens.
 *
 * Only horizontal placement and left/right values need to be considered.
 */
function getRoundedOffsets(data, shouldRound) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;
  var round = Math.round,
      floor = Math.floor;

  var noRound = function noRound(v) {
    return v;
  };

  var referenceWidth = round(reference.width);
  var popperWidth = round(popper.width);

  var isVertical = ['left', 'right'].indexOf(data.placement) !== -1;
  var isVariation = data.placement.indexOf('-') !== -1;
  var sameWidthParity = referenceWidth % 2 === popperWidth % 2;
  var bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;

  var horizontalToInteger = !shouldRound ? noRound : isVertical || isVariation || sameWidthParity ? round : floor;
  var verticalToInteger = !shouldRound ? noRound : round;

  return {
    left: horizontalToInteger(bothOddWidth && !isVariation && shouldRound ? popper.left - 1 : popper.left),
    top: verticalToInteger(popper.top),
    bottom: verticalToInteger(popper.bottom),
    right: horizontalToInteger(popper.right)
  };
}

var isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function computeStyle(data, options) {
  var x = options.x,
      y = options.y;
  var popper = data.offsets.popper;

  // Remove this legacy support in Popper.js v2

  var legacyGpuAccelerationOption = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'applyStyle';
  }).gpuAcceleration;
  if (legacyGpuAccelerationOption !== undefined) {
    console.warn('WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!');
  }
  var gpuAcceleration = legacyGpuAccelerationOption !== undefined ? legacyGpuAccelerationOption : options.gpuAcceleration;

  var offsetParent = getOffsetParent(data.instance.popper);
  var offsetParentRect = getBoundingClientRect(offsetParent);

  // Styles
  var styles = {
    position: popper.position
  };

  var offsets = getRoundedOffsets(data, window.devicePixelRatio < 2 || !isFirefox);

  var sideA = x === 'bottom' ? 'top' : 'bottom';
  var sideB = y === 'right' ? 'left' : 'right';

  // if gpuAcceleration is set to `true` and transform is supported,
  //  we use `translate3d` to apply the position to the popper we
  // automatically use the supported prefixed version if needed
  var prefixedProperty = getSupportedPropertyName('transform');

  // now, let's make a step back and look at this code closely (wtf?)
  // If the content of the popper grows once it's been positioned, it
  // may happen that the popper gets misplaced because of the new content
  // overflowing its reference element
  // To avoid this problem, we provide two options (x and y), which allow
  // the consumer to define the offset origin.
  // If we position a popper on top of a reference element, we can set
  // `x` to `top` to make the popper grow towards its top instead of
  // its bottom.
  var left = void 0,
      top = void 0;
  if (sideA === 'bottom') {
    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)
    // and not the bottom of the html element
    if (offsetParent.nodeName === 'HTML') {
      top = -offsetParent.clientHeight + offsets.bottom;
    } else {
      top = -offsetParentRect.height + offsets.bottom;
    }
  } else {
    top = offsets.top;
  }
  if (sideB === 'right') {
    if (offsetParent.nodeName === 'HTML') {
      left = -offsetParent.clientWidth + offsets.right;
    } else {
      left = -offsetParentRect.width + offsets.right;
    }
  } else {
    left = offsets.left;
  }
  if (gpuAcceleration && prefixedProperty) {
    styles[prefixedProperty] = 'translate3d(' + left + 'px, ' + top + 'px, 0)';
    styles[sideA] = 0;
    styles[sideB] = 0;
    styles.willChange = 'transform';
  } else {
    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties
    var invertTop = sideA === 'bottom' ? -1 : 1;
    var invertLeft = sideB === 'right' ? -1 : 1;
    styles[sideA] = top * invertTop;
    styles[sideB] = left * invertLeft;
    styles.willChange = sideA + ', ' + sideB;
  }

  // Attributes
  var attributes = {
    'x-placement': data.placement
  };

  // Update `data` attributes, styles and arrowStyles
  data.attributes = _extends$5({}, attributes, data.attributes);
  data.styles = _extends$5({}, styles, data.styles);
  data.arrowStyles = _extends$5({}, data.offsets.arrow, data.arrowStyles);

  return data;
}

/**
 * Helper used to know if the given modifier depends from another one.<br />
 * It checks if the needed modifier is listed and enabled.
 * @method
 * @memberof Popper.Utils
 * @param {Array} modifiers - list of modifiers
 * @param {String} requestingName - name of requesting modifier
 * @param {String} requestedName - name of requested modifier
 * @returns {Boolean}
 */
function isModifierRequired(modifiers, requestingName, requestedName) {
  var requesting = find(modifiers, function (_ref) {
    var name = _ref.name;
    return name === requestingName;
  });

  var isRequired = !!requesting && modifiers.some(function (modifier) {
    return modifier.name === requestedName && modifier.enabled && modifier.order < requesting.order;
  });

  if (!isRequired) {
    var _requesting = '`' + requestingName + '`';
    var requested = '`' + requestedName + '`';
    console.warn(requested + ' modifier is required by ' + _requesting + ' modifier in order to work, be sure to include it before ' + _requesting + '!');
  }
  return isRequired;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function arrow(data, options) {
  var _data$offsets$arrow;

  // arrow depends on keepTogether in order to work
  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {
    return data;
  }

  var arrowElement = options.element;

  // if arrowElement is a string, suppose it's a CSS selector
  if (typeof arrowElement === 'string') {
    arrowElement = data.instance.popper.querySelector(arrowElement);

    // if arrowElement is not found, don't run the modifier
    if (!arrowElement) {
      return data;
    }
  } else {
    // if the arrowElement isn't a query selector we must check that the
    // provided DOM node is child of its popper node
    if (!data.instance.popper.contains(arrowElement)) {
      console.warn('WARNING: `arrow.element` must be child of its popper element!');
      return data;
    }
  }

  var placement = data.placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isVertical = ['left', 'right'].indexOf(placement) !== -1;

  var len = isVertical ? 'height' : 'width';
  var sideCapitalized = isVertical ? 'Top' : 'Left';
  var side = sideCapitalized.toLowerCase();
  var altSide = isVertical ? 'left' : 'top';
  var opSide = isVertical ? 'bottom' : 'right';
  var arrowElementSize = getOuterSizes(arrowElement)[len];

  //
  // extends keepTogether behavior making sure the popper and its
  // reference have enough pixels in conjunction
  //

  // top/left side
  if (reference[opSide] - arrowElementSize < popper[side]) {
    data.offsets.popper[side] -= popper[side] - (reference[opSide] - arrowElementSize);
  }
  // bottom/right side
  if (reference[side] + arrowElementSize > popper[opSide]) {
    data.offsets.popper[side] += reference[side] + arrowElementSize - popper[opSide];
  }
  data.offsets.popper = getClientRect(data.offsets.popper);

  // compute center of the popper
  var center = reference[side] + reference[len] / 2 - arrowElementSize / 2;

  // Compute the sideValue using the updated popper offsets
  // take popper margin in account because we don't have this info available
  var css = getStyleComputedProperty(data.instance.popper);
  var popperMarginSide = parseFloat(css['margin' + sideCapitalized]);
  var popperBorderSide = parseFloat(css['border' + sideCapitalized + 'Width']);
  var sideValue = center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;

  // prevent arrowElement from being placed not contiguously to its popper
  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);

  data.arrowElement = arrowElement;
  data.offsets.arrow = (_data$offsets$arrow = {}, defineProperty$4(_data$offsets$arrow, side, Math.round(sideValue)), defineProperty$4(_data$offsets$arrow, altSide, ''), _data$offsets$arrow);

  return data;
}

/**
 * Get the opposite placement variation of the given one
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement variation
 * @returns {String} flipped placement variation
 */
function getOppositeVariation(variation) {
  if (variation === 'end') {
    return 'start';
  } else if (variation === 'start') {
    return 'end';
  }
  return variation;
}

/**
 * List of accepted placements to use as values of the `placement` option.<br />
 * Valid placements are:
 * - `auto`
 * - `top`
 * - `right`
 * - `bottom`
 * - `left`
 *
 * Each placement can have a variation from this list:
 * - `-start`
 * - `-end`
 *
 * Variations are interpreted easily if you think of them as the left to right
 * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`
 * is right.<br />
 * Vertically (`left` and `right`), `start` is top and `end` is bottom.
 *
 * Some valid examples are:
 * - `top-end` (on top of reference, right aligned)
 * - `right-start` (on right of reference, top aligned)
 * - `bottom` (on bottom, centered)
 * - `auto-end` (on the side with more space available, alignment depends by placement)
 *
 * @static
 * @type {Array}
 * @enum {String}
 * @readonly
 * @method placements
 * @memberof Popper
 */
var placements = ['auto-start', 'auto', 'auto-end', 'top-start', 'top', 'top-end', 'right-start', 'right', 'right-end', 'bottom-end', 'bottom', 'bottom-start', 'left-end', 'left', 'left-start'];

// Get rid of `auto` `auto-start` and `auto-end`
var validPlacements = placements.slice(3);

/**
 * Given an initial placement, returns all the subsequent placements
 * clockwise (or counter-clockwise).
 *
 * @method
 * @memberof Popper.Utils
 * @argument {String} placement - A valid placement (it accepts variations)
 * @argument {Boolean} counter - Set to true to walk the placements counterclockwise
 * @returns {Array} placements including their variations
 */
function clockwise(placement) {
  var counter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

  var index = validPlacements.indexOf(placement);
  var arr = validPlacements.slice(index + 1).concat(validPlacements.slice(0, index));
  return counter ? arr.reverse() : arr;
}

var BEHAVIORS = {
  FLIP: 'flip',
  CLOCKWISE: 'clockwise',
  COUNTERCLOCKWISE: 'counterclockwise'
};

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function flip(data, options) {
  // if `inner` modifier is enabled, we can't use the `flip` modifier
  if (isModifierEnabled(data.instance.modifiers, 'inner')) {
    return data;
  }

  if (data.flipped && data.placement === data.originalPlacement) {
    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides
    return data;
  }

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, options.boundariesElement, data.positionFixed);

  var placement = data.placement.split('-')[0];
  var placementOpposite = getOppositePlacement(placement);
  var variation = data.placement.split('-')[1] || '';

  var flipOrder = [];

  switch (options.behavior) {
    case BEHAVIORS.FLIP:
      flipOrder = [placement, placementOpposite];
      break;
    case BEHAVIORS.CLOCKWISE:
      flipOrder = clockwise(placement);
      break;
    case BEHAVIORS.COUNTERCLOCKWISE:
      flipOrder = clockwise(placement, true);
      break;
    default:
      flipOrder = options.behavior;
  }

  flipOrder.forEach(function (step, index) {
    if (placement !== step || flipOrder.length === index + 1) {
      return data;
    }

    placement = data.placement.split('-')[0];
    placementOpposite = getOppositePlacement(placement);

    var popperOffsets = data.offsets.popper;
    var refOffsets = data.offsets.reference;

    // using floor because the reference offsets may contain decimals we are not going to consider here
    var floor = Math.floor;
    var overlapsRef = placement === 'left' && floor(popperOffsets.right) > floor(refOffsets.left) || placement === 'right' && floor(popperOffsets.left) < floor(refOffsets.right) || placement === 'top' && floor(popperOffsets.bottom) > floor(refOffsets.top) || placement === 'bottom' && floor(popperOffsets.top) < floor(refOffsets.bottom);

    var overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);
    var overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);
    var overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);
    var overflowsBottom = floor(popperOffsets.bottom) > floor(boundaries.bottom);

    var overflowsBoundaries = placement === 'left' && overflowsLeft || placement === 'right' && overflowsRight || placement === 'top' && overflowsTop || placement === 'bottom' && overflowsBottom;

    // flip the variation if required
    var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;

    // flips variation if reference element overflows boundaries
    var flippedVariationByRef = !!options.flipVariations && (isVertical && variation === 'start' && overflowsLeft || isVertical && variation === 'end' && overflowsRight || !isVertical && variation === 'start' && overflowsTop || !isVertical && variation === 'end' && overflowsBottom);

    // flips variation if popper content overflows boundaries
    var flippedVariationByContent = !!options.flipVariationsByContent && (isVertical && variation === 'start' && overflowsRight || isVertical && variation === 'end' && overflowsLeft || !isVertical && variation === 'start' && overflowsBottom || !isVertical && variation === 'end' && overflowsTop);

    var flippedVariation = flippedVariationByRef || flippedVariationByContent;

    if (overlapsRef || overflowsBoundaries || flippedVariation) {
      // this boolean to detect any flip loop
      data.flipped = true;

      if (overlapsRef || overflowsBoundaries) {
        placement = flipOrder[index + 1];
      }

      if (flippedVariation) {
        variation = getOppositeVariation(variation);
      }

      data.placement = placement + (variation ? '-' + variation : '');

      // this object contains `position`, we want to preserve it along with
      // any additional property we may add in the future
      data.offsets.popper = _extends$5({}, data.offsets.popper, getPopperOffsets(data.instance.popper, data.offsets.reference, data.placement));

      data = runModifiers(data.instance.modifiers, data, 'flip');
    }
  });
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function keepTogether(data) {
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var placement = data.placement.split('-')[0];
  var floor = Math.floor;
  var isVertical = ['top', 'bottom'].indexOf(placement) !== -1;
  var side = isVertical ? 'right' : 'bottom';
  var opSide = isVertical ? 'left' : 'top';
  var measurement = isVertical ? 'width' : 'height';

  if (popper[side] < floor(reference[opSide])) {
    data.offsets.popper[opSide] = floor(reference[opSide]) - popper[measurement];
  }
  if (popper[opSide] > floor(reference[side])) {
    data.offsets.popper[opSide] = floor(reference[side]);
  }

  return data;
}

/**
 * Converts a string containing value + unit into a px value number
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} str - Value + unit string
 * @argument {String} measurement - `height` or `width`
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @returns {Number|String}
 * Value in pixels, or original string if no values were extracted
 */
function toValue(str, measurement, popperOffsets, referenceOffsets) {
  // separate value from unit
  var split = str.match(/((?:\-|\+)?\d*\.?\d*)(.*)/);
  var value = +split[1];
  var unit = split[2];

  // If it's not a number it's an operator, I guess
  if (!value) {
    return str;
  }

  if (unit.indexOf('%') === 0) {
    var element = void 0;
    switch (unit) {
      case '%p':
        element = popperOffsets;
        break;
      case '%':
      case '%r':
      default:
        element = referenceOffsets;
    }

    var rect = getClientRect(element);
    return rect[measurement] / 100 * value;
  } else if (unit === 'vh' || unit === 'vw') {
    // if is a vh or vw, we calculate the size based on the viewport
    var size = void 0;
    if (unit === 'vh') {
      size = Math.max(document.documentElement.clientHeight, window.innerHeight || 0);
    } else {
      size = Math.max(document.documentElement.clientWidth, window.innerWidth || 0);
    }
    return size / 100 * value;
  } else {
    // if is an explicit pixel unit, we get rid of the unit and keep the value
    // if is an implicit unit, it's px, and we return just the value
    return value;
  }
}

/**
 * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.
 * @function
 * @memberof {modifiers~offset}
 * @private
 * @argument {String} offset
 * @argument {Object} popperOffsets
 * @argument {Object} referenceOffsets
 * @argument {String} basePlacement
 * @returns {Array} a two cells array with x and y offsets in numbers
 */
function parseOffset(offset, popperOffsets, referenceOffsets, basePlacement) {
  var offsets = [0, 0];

  // Use height if placement is left or right and index is 0 otherwise use width
  // in this way the first offset will use an axis and the second one
  // will use the other one
  var useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;

  // Split the offset string to obtain a list of values and operands
  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)
  var fragments = offset.split(/(\+|\-)/).map(function (frag) {
    return frag.trim();
  });

  // Detect if the offset string contains a pair of values or a single one
  // they could be separated by comma or space
  var divider = fragments.indexOf(find(fragments, function (frag) {
    return frag.search(/,|\s/) !== -1;
  }));

  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {
    console.warn('Offsets separated by white space(s) are deprecated, use a comma (,) instead.');
  }

  // If divider is found, we divide the list of values and operands to divide
  // them by ofset X and Y.
  var splitRegex = /\s*,\s*|\s+/;
  var ops = divider !== -1 ? [fragments.slice(0, divider).concat([fragments[divider].split(splitRegex)[0]]), [fragments[divider].split(splitRegex)[1]].concat(fragments.slice(divider + 1))] : [fragments];

  // Convert the values with units to absolute pixels to allow our computations
  ops = ops.map(function (op, index) {
    // Most of the units rely on the orientation of the popper
    var measurement = (index === 1 ? !useHeight : useHeight) ? 'height' : 'width';
    var mergeWithPrevious = false;
    return op
    // This aggregates any `+` or `-` sign that aren't considered operators
    // e.g.: 10 + +5 => [10, +, +5]
    .reduce(function (a, b) {
      if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {
        a[a.length - 1] = b;
        mergeWithPrevious = true;
        return a;
      } else if (mergeWithPrevious) {
        a[a.length - 1] += b;
        mergeWithPrevious = false;
        return a;
      } else {
        return a.concat(b);
      }
    }, [])
    // Here we convert the string values into number values (in px)
    .map(function (str) {
      return toValue(str, measurement, popperOffsets, referenceOffsets);
    });
  });

  // Loop trough the offsets arrays and execute the operations
  ops.forEach(function (op, index) {
    op.forEach(function (frag, index2) {
      if (isNumeric(frag)) {
        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);
      }
    });
  });
  return offsets;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @argument {Number|String} options.offset=0
 * The offset value as described in the modifier description
 * @returns {Object} The data object, properly modified
 */
function offset(data, _ref) {
  var offset = _ref.offset;
  var placement = data.placement,
      _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var basePlacement = placement.split('-')[0];

  var offsets = void 0;
  if (isNumeric(+offset)) {
    offsets = [+offset, 0];
  } else {
    offsets = parseOffset(offset, popper, reference, basePlacement);
  }

  if (basePlacement === 'left') {
    popper.top += offsets[0];
    popper.left -= offsets[1];
  } else if (basePlacement === 'right') {
    popper.top += offsets[0];
    popper.left += offsets[1];
  } else if (basePlacement === 'top') {
    popper.left += offsets[0];
    popper.top -= offsets[1];
  } else if (basePlacement === 'bottom') {
    popper.left += offsets[0];
    popper.top += offsets[1];
  }

  data.popper = popper;
  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function preventOverflow(data, options) {
  var boundariesElement = options.boundariesElement || getOffsetParent(data.instance.popper);

  // If offsetParent is the reference element, we really want to
  // go one step up and use the next offsetParent as reference to
  // avoid to make this modifier completely useless and look like broken
  if (data.instance.reference === boundariesElement) {
    boundariesElement = getOffsetParent(boundariesElement);
  }

  // NOTE: DOM access here
  // resets the popper's position so that the document size can be calculated excluding
  // the size of the popper element itself
  var transformProp = getSupportedPropertyName('transform');
  var popperStyles = data.instance.popper.style; // assignment to help minification
  var top = popperStyles.top,
      left = popperStyles.left,
      transform = popperStyles[transformProp];

  popperStyles.top = '';
  popperStyles.left = '';
  popperStyles[transformProp] = '';

  var boundaries = getBoundaries(data.instance.popper, data.instance.reference, options.padding, boundariesElement, data.positionFixed);

  // NOTE: DOM access here
  // restores the original style properties after the offsets have been computed
  popperStyles.top = top;
  popperStyles.left = left;
  popperStyles[transformProp] = transform;

  options.boundaries = boundaries;

  var order = options.priority;
  var popper = data.offsets.popper;

  var check = {
    primary: function primary(placement) {
      var value = popper[placement];
      if (popper[placement] < boundaries[placement] && !options.escapeWithReference) {
        value = Math.max(popper[placement], boundaries[placement]);
      }
      return defineProperty$4({}, placement, value);
    },
    secondary: function secondary(placement) {
      var mainSide = placement === 'right' ? 'left' : 'top';
      var value = popper[mainSide];
      if (popper[placement] > boundaries[placement] && !options.escapeWithReference) {
        value = Math.min(popper[mainSide], boundaries[placement] - (placement === 'right' ? popper.width : popper.height));
      }
      return defineProperty$4({}, mainSide, value);
    }
  };

  order.forEach(function (placement) {
    var side = ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';
    popper = _extends$5({}, popper, check[side](placement));
  });

  data.offsets.popper = popper;

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function shift(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var shiftvariation = placement.split('-')[1];

  // if shift shiftvariation is specified, run the modifier
  if (shiftvariation) {
    var _data$offsets = data.offsets,
        reference = _data$offsets.reference,
        popper = _data$offsets.popper;

    var isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;
    var side = isVertical ? 'left' : 'top';
    var measurement = isVertical ? 'width' : 'height';

    var shiftOffsets = {
      start: defineProperty$4({}, side, reference[side]),
      end: defineProperty$4({}, side, reference[side] + reference[measurement] - popper[measurement])
    };

    data.offsets.popper = _extends$5({}, popper, shiftOffsets[shiftvariation]);
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by update method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function hide(data) {
  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {
    return data;
  }

  var refRect = data.offsets.reference;
  var bound = find(data.instance.modifiers, function (modifier) {
    return modifier.name === 'preventOverflow';
  }).boundaries;

  if (refRect.bottom < bound.top || refRect.left > bound.right || refRect.top > bound.bottom || refRect.right < bound.left) {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === true) {
      return data;
    }

    data.hide = true;
    data.attributes['x-out-of-boundaries'] = '';
  } else {
    // Avoid unnecessary DOM access if visibility hasn't changed
    if (data.hide === false) {
      return data;
    }

    data.hide = false;
    data.attributes['x-out-of-boundaries'] = false;
  }

  return data;
}

/**
 * @function
 * @memberof Modifiers
 * @argument {Object} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {Object} The data object, properly modified
 */
function inner(data) {
  var placement = data.placement;
  var basePlacement = placement.split('-')[0];
  var _data$offsets = data.offsets,
      popper = _data$offsets.popper,
      reference = _data$offsets.reference;

  var isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;

  var subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;

  popper[isHoriz ? 'left' : 'top'] = reference[basePlacement] - (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);

  data.placement = getOppositePlacement(placement);
  data.offsets.popper = getClientRect(popper);

  return data;
}

/**
 * Modifier function, each modifier can have a function of this type assigned
 * to its `fn` property.<br />
 * These functions will be called on each update, this means that you must
 * make sure they are performant enough to avoid performance bottlenecks.
 *
 * @function ModifierFn
 * @argument {dataObject} data - The data object generated by `update` method
 * @argument {Object} options - Modifiers configuration and options
 * @returns {dataObject} The data object, properly modified
 */

/**
 * Modifiers are plugins used to alter the behavior of your poppers.<br />
 * Popper.js uses a set of 9 modifiers to provide all the basic functionalities
 * needed by the library.
 *
 * Usually you don't want to override the `order`, `fn` and `onLoad` props.
 * All the other properties are configurations that could be tweaked.
 * @namespace modifiers
 */
var modifiers = {
  /**
   * Modifier used to shift the popper on the start or end of its reference
   * element.<br />
   * It will read the variation of the `placement` property.<br />
   * It can be one either `-end` or `-start`.
   * @memberof modifiers
   * @inner
   */
  shift: {
    /** @prop {number} order=100 - Index used to define the order of execution */
    order: 100,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: shift
  },

  /**
   * The `offset` modifier can shift your popper on both its axis.
   *
   * It accepts the following units:
   * - `px` or unit-less, interpreted as pixels
   * - `%` or `%r`, percentage relative to the length of the reference element
   * - `%p`, percentage relative to the length of the popper element
   * - `vw`, CSS viewport width unit
   * - `vh`, CSS viewport height unit
   *
   * For length is intended the main axis relative to the placement of the popper.<br />
   * This means that if the placement is `top` or `bottom`, the length will be the
   * `width`. In case of `left` or `right`, it will be the `height`.
   *
   * You can provide a single value (as `Number` or `String`), or a pair of values
   * as `String` divided by a comma or one (or more) white spaces.<br />
   * The latter is a deprecated method because it leads to confusion and will be
   * removed in v2.<br />
   * Additionally, it accepts additions and subtractions between different units.
   * Note that multiplications and divisions aren't supported.
   *
   * Valid examples are:
   * ```
   * 10
   * '10%'
   * '10, 10'
   * '10%, 10'
   * '10 + 10%'
   * '10 - 5vh + 3%'
   * '-10px + 5vh, 5px - 6%'
   * ```
   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap
   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.
   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).
   *
   * @memberof modifiers
   * @inner
   */
  offset: {
    /** @prop {number} order=200 - Index used to define the order of execution */
    order: 200,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: offset,
    /** @prop {Number|String} offset=0
     * The offset value as described in the modifier description
     */
    offset: 0
  },

  /**
   * Modifier used to prevent the popper from being positioned outside the boundary.
   *
   * A scenario exists where the reference itself is not within the boundaries.<br />
   * We can say it has "escaped the boundaries" — or just "escaped".<br />
   * In this case we need to decide whether the popper should either:
   *
   * - detach from the reference and remain "trapped" in the boundaries, or
   * - if it should ignore the boundary and "escape with its reference"
   *
   * When `escapeWithReference` is set to`true` and reference is completely
   * outside its boundaries, the popper will overflow (or completely leave)
   * the boundaries in order to remain attached to the edge of the reference.
   *
   * @memberof modifiers
   * @inner
   */
  preventOverflow: {
    /** @prop {number} order=300 - Index used to define the order of execution */
    order: 300,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: preventOverflow,
    /**
     * @prop {Array} [priority=['left','right','top','bottom']]
     * Popper will try to prevent overflow following these priorities by default,
     * then, it could overflow on the left and on top of the `boundariesElement`
     */
    priority: ['left', 'right', 'top', 'bottom'],
    /**
     * @prop {number} padding=5
     * Amount of pixel used to define a minimum distance between the boundaries
     * and the popper. This makes sure the popper always has a little padding
     * between the edges of its container
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='scrollParent'
     * Boundaries used by the modifier. Can be `scrollParent`, `window`,
     * `viewport` or any DOM element.
     */
    boundariesElement: 'scrollParent'
  },

  /**
   * Modifier used to make sure the reference and its popper stay near each other
   * without leaving any gap between the two. Especially useful when the arrow is
   * enabled and you want to ensure that it points to its reference element.
   * It cares only about the first axis. You can still have poppers with margin
   * between the popper and its reference element.
   * @memberof modifiers
   * @inner
   */
  keepTogether: {
    /** @prop {number} order=400 - Index used to define the order of execution */
    order: 400,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: keepTogether
  },

  /**
   * This modifier is used to move the `arrowElement` of the popper to make
   * sure it is positioned between the reference element and its popper element.
   * It will read the outer size of the `arrowElement` node to detect how many
   * pixels of conjunction are needed.
   *
   * It has no effect if no `arrowElement` is provided.
   * @memberof modifiers
   * @inner
   */
  arrow: {
    /** @prop {number} order=500 - Index used to define the order of execution */
    order: 500,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: arrow,
    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */
    element: '[x-arrow]'
  },

  /**
   * Modifier used to flip the popper's placement when it starts to overlap its
   * reference element.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   *
   * **NOTE:** this modifier will interrupt the current update cycle and will
   * restart it if it detects the need to flip the placement.
   * @memberof modifiers
   * @inner
   */
  flip: {
    /** @prop {number} order=600 - Index used to define the order of execution */
    order: 600,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: flip,
    /**
     * @prop {String|Array} behavior='flip'
     * The behavior used to change the popper's placement. It can be one of
     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid
     * placements (with optional variations)
     */
    behavior: 'flip',
    /**
     * @prop {number} padding=5
     * The popper will flip if it hits the edges of the `boundariesElement`
     */
    padding: 5,
    /**
     * @prop {String|HTMLElement} boundariesElement='viewport'
     * The element which will define the boundaries of the popper position.
     * The popper will never be placed outside of the defined boundaries
     * (except if `keepTogether` is enabled)
     */
    boundariesElement: 'viewport',
    /**
     * @prop {Boolean} flipVariations=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the reference element overlaps its boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariations: false,
    /**
     * @prop {Boolean} flipVariationsByContent=false
     * The popper will switch placement variation between `-start` and `-end` when
     * the popper element overlaps its reference boundaries.
     *
     * The original placement should have a set variation.
     */
    flipVariationsByContent: false
  },

  /**
   * Modifier used to make the popper flow toward the inner of the reference element.
   * By default, when this modifier is disabled, the popper will be placed outside
   * the reference element.
   * @memberof modifiers
   * @inner
   */
  inner: {
    /** @prop {number} order=700 - Index used to define the order of execution */
    order: 700,
    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */
    enabled: false,
    /** @prop {ModifierFn} */
    fn: inner
  },

  /**
   * Modifier used to hide the popper when its reference element is outside of the
   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can
   * be used to hide with a CSS selector the popper when its reference is
   * out of boundaries.
   *
   * Requires the `preventOverflow` modifier before it in order to work.
   * @memberof modifiers
   * @inner
   */
  hide: {
    /** @prop {number} order=800 - Index used to define the order of execution */
    order: 800,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: hide
  },

  /**
   * Computes the style that will be applied to the popper element to gets
   * properly positioned.
   *
   * Note that this modifier will not touch the DOM, it just prepares the styles
   * so that `applyStyle` modifier can apply it. This separation is useful
   * in case you need to replace `applyStyle` with a custom implementation.
   *
   * This modifier has `850` as `order` value to maintain backward compatibility
   * with previous versions of Popper.js. Expect the modifiers ordering method
   * to change in future major versions of the library.
   *
   * @memberof modifiers
   * @inner
   */
  computeStyle: {
    /** @prop {number} order=850 - Index used to define the order of execution */
    order: 850,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: computeStyle,
    /**
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: true,
    /**
     * @prop {string} [x='bottom']
     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.
     * Change this if your popper should grow in a direction different from `bottom`
     */
    x: 'bottom',
    /**
     * @prop {string} [x='left']
     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.
     * Change this if your popper should grow in a direction different from `right`
     */
    y: 'right'
  },

  /**
   * Applies the computed styles to the popper element.
   *
   * All the DOM manipulations are limited to this modifier. This is useful in case
   * you want to integrate Popper.js inside a framework or view library and you
   * want to delegate all the DOM manipulations to it.
   *
   * Note that if you disable this modifier, you must make sure the popper element
   * has its position set to `absolute` before Popper.js can do its work!
   *
   * Just disable this modifier and define your own to achieve the desired effect.
   *
   * @memberof modifiers
   * @inner
   */
  applyStyle: {
    /** @prop {number} order=900 - Index used to define the order of execution */
    order: 900,
    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */
    enabled: true,
    /** @prop {ModifierFn} */
    fn: applyStyle,
    /** @prop {Function} */
    onLoad: applyStyleOnLoad,
    /**
     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier
     * @prop {Boolean} gpuAcceleration=true
     * If true, it uses the CSS 3D transformation to position the popper.
     * Otherwise, it will use the `top` and `left` properties
     */
    gpuAcceleration: undefined
  }
};

/**
 * The `dataObject` is an object containing all the information used by Popper.js.
 * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.
 * @name dataObject
 * @property {Object} data.instance The Popper.js instance
 * @property {String} data.placement Placement applied to popper
 * @property {String} data.originalPlacement Placement originally defined on init
 * @property {Boolean} data.flipped True if popper has been flipped by flip modifier
 * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper
 * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier
 * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)
 * @property {Object} data.boundaries Offsets of the popper boundaries
 * @property {Object} data.offsets The measurements of popper, reference and arrow elements
 * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values
 * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0
 */

/**
 * Default options provided to Popper.js constructor.<br />
 * These can be overridden using the `options` argument of Popper.js.<br />
 * To override an option, simply pass an object with the same
 * structure of the `options` object, as the 3rd argument. For example:
 * ```
 * new Popper(ref, pop, {
 *   modifiers: {
 *     preventOverflow: { enabled: false }
 *   }
 * })
 * ```
 * @type {Object}
 * @static
 * @memberof Popper
 */
var Defaults = {
  /**
   * Popper's placement.
   * @prop {Popper.placements} placement='bottom'
   */
  placement: 'bottom',

  /**
   * Set this to true if you want popper to position it self in 'fixed' mode
   * @prop {Boolean} positionFixed=false
   */
  positionFixed: false,

  /**
   * Whether events (resize, scroll) are initially enabled.
   * @prop {Boolean} eventsEnabled=true
   */
  eventsEnabled: true,

  /**
   * Set to true if you want to automatically remove the popper when
   * you call the `destroy` method.
   * @prop {Boolean} removeOnDestroy=false
   */
  removeOnDestroy: false,

  /**
   * Callback called when the popper is created.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onCreate}
   */
  onCreate: function onCreate() {},

  /**
   * Callback called when the popper is updated. This callback is not called
   * on the initialization/creation of the popper, but only on subsequent
   * updates.<br />
   * By default, it is set to no-op.<br />
   * Access Popper.js instance with `data.instance`.
   * @prop {onUpdate}
   */
  onUpdate: function onUpdate() {},

  /**
   * List of modifiers used to modify the offsets before they are applied to the popper.
   * They provide most of the functionalities of Popper.js.
   * @prop {modifiers}
   */
  modifiers: modifiers
};

/**
 * @callback onCreate
 * @param {dataObject} data
 */

/**
 * @callback onUpdate
 * @param {dataObject} data
 */

// Utils
// Methods
var Popper = function () {
  /**
   * Creates a new Popper.js instance.
   * @class Popper
   * @param {Element|referenceObject} reference - The reference element used to position the popper
   * @param {Element} popper - The HTML / XML element used as the popper
   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)
   * @return {Object} instance - The generated Popper.js instance
   */
  function Popper(reference, popper) {
    var _this = this;

    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    classCallCheck$1(this, Popper);

    this.scheduleUpdate = function () {
      return requestAnimationFrame(_this.update);
    };

    // make update() debounced, so that it only runs at most once-per-tick
    this.update = debounce(this.update.bind(this));

    // with {} we create a new object with the options inside it
    this.options = _extends$5({}, Popper.Defaults, options);

    // init state
    this.state = {
      isDestroyed: false,
      isCreated: false,
      scrollParents: []
    };

    // get reference and popper elements (allow jQuery wrappers)
    this.reference = reference && reference.jquery ? reference[0] : reference;
    this.popper = popper && popper.jquery ? popper[0] : popper;

    // Deep merge modifiers options
    this.options.modifiers = {};
    Object.keys(_extends$5({}, Popper.Defaults.modifiers, options.modifiers)).forEach(function (name) {
      _this.options.modifiers[name] = _extends$5({}, Popper.Defaults.modifiers[name] || {}, options.modifiers ? options.modifiers[name] : {});
    });

    // Refactoring modifiers' list (Object => Array)
    this.modifiers = Object.keys(this.options.modifiers).map(function (name) {
      return _extends$5({
        name: name
      }, _this.options.modifiers[name]);
    })
    // sort the modifiers by order
    .sort(function (a, b) {
      return a.order - b.order;
    });

    // modifiers have the ability to execute arbitrary code when Popper.js get inited
    // such code is executed in the same order of its modifier
    // they could add new properties to their options configuration
    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!
    this.modifiers.forEach(function (modifierOptions) {
      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {
        modifierOptions.onLoad(_this.reference, _this.popper, _this.options, modifierOptions, _this.state);
      }
    });

    // fire the first update to position the popper in the right place
    this.update();

    var eventsEnabled = this.options.eventsEnabled;
    if (eventsEnabled) {
      // setup event listeners, they will take care of update the position in specific situations
      this.enableEventListeners();
    }

    this.state.eventsEnabled = eventsEnabled;
  }

  // We can't use class properties because they don't get listed in the
  // class prototype and break stuff like Sinon stubs


  createClass$1(Popper, [{
    key: 'update',
    value: function update$$1() {
      return update.call(this);
    }
  }, {
    key: 'destroy',
    value: function destroy$$1() {
      return destroy.call(this);
    }
  }, {
    key: 'enableEventListeners',
    value: function enableEventListeners$$1() {
      return enableEventListeners.call(this);
    }
  }, {
    key: 'disableEventListeners',
    value: function disableEventListeners$$1() {
      return disableEventListeners.call(this);
    }

    /**
     * Schedules an update. It will run on the next UI update available.
     * @method scheduleUpdate
     * @memberof Popper
     */


    /**
     * Collection of utilities useful when writing custom modifiers.
     * Starting from version 1.7, this method is available only if you
     * include `popper-utils.js` before `popper.js`.
     *
     * **DEPRECATION**: This way to access PopperUtils is deprecated
     * and will be removed in v2! Use the PopperUtils module directly instead.
     * Due to the high instability of the methods contained in Utils, we can't
     * guarantee them to follow semver. Use them at your own risk!
     * @static
     * @private
     * @type {Object}
     * @deprecated since version 1.8
     * @member Utils
     * @memberof Popper
     */

  }]);
  return Popper;
}();

/**
 * The `referenceObject` is an object that provides an interface compatible with Popper.js
 * and lets you use it as replacement of a real DOM node.<br />
 * You can use this method to position a popper relatively to a set of coordinates
 * in case you don't have a DOM node to use as reference.
 *
 * ```
 * new Popper(referenceObject, popperNode);
 * ```
 *
 * NB: This feature isn't supported in Internet Explorer 10.
 * @name referenceObject
 * @property {Function} data.getBoundingClientRect
 * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.
 * @property {number} data.clientWidth
 * An ES6 getter that will return the width of the virtual reference element.
 * @property {number} data.clientHeight
 * An ES6 getter that will return the height of the virtual reference element.
 */


Popper.Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;
Popper.placements = placements;
Popper.Defaults = Defaults;

var reactTippy = createCommonjsModule(function (module, exports) {
(function webpackUniversalModuleDefinition(root, factory) {
	module.exports = factory(React__default['default'], Popper, ReactDOM__default['default']);
})(commonjsGlobal, function(__WEBPACK_EXTERNAL_MODULE_13__, __WEBPACK_EXTERNAL_MODULE_38__, __WEBPACK_EXTERNAL_MODULE_39__) {
return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 15);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
var Browser = exports.Browser = {};

if (typeof window !== 'undefined') {
  Browser.SUPPORTED = 'requestAnimationFrame' in window;
  Browser.SUPPORTS_TOUCH = 'ontouchstart' in window;
  Browser.touch = false;
  Browser.dynamicInputDetection = true;
  // Chrome device/touch emulation can make this dynamic
  Browser.iOS = function () {
    return (/iPhone|iPad|iPod/.test(navigator.userAgent) && !window.MSStream
    );
  };
}

/**
* The global storage array which holds all data reference objects
* from every instance
* This allows us to hide tooltips from all instances, finding the ref when
* clicking on the body, and for followCursor
*/
var Store = exports.Store = [];

/**
* Selector constants used for grabbing elements
*/
var Selectors = exports.Selectors = {
  POPPER: '.tippy-popper',
  TOOLTIP: '.tippy-tooltip',
  CONTENT: '.tippy-tooltip-content',
  CIRCLE: '[x-circle]',
  ARROW: '[x-arrow]',
  TOOLTIPPED_EL: '[data-tooltipped]',
  CONTROLLER: '[data-tippy-controller]'
};

/**
* The default settings applied to each instance
*/
var Defaults = exports.Defaults = {
  html: false,
  position: 'top',
  animation: 'shift',
  animateFill: true,
  arrow: false,
  arrowSize: 'regular',
  delay: 0,
  trigger: 'mouseenter focus',
  duration: 350,
  interactive: false,
  interactiveBorder: 2,
  theme: 'dark',
  size: 'regular',
  distance: 10,
  offset: 0,
  hideOnClick: true,
  multiple: false,
  followCursor: false,
  inertia: false,
  flipDuration: 350,
  sticky: false,
  stickyDuration: 200,
  appendTo: function appendTo() {
    return document.body;
  },
  zIndex: 9999,
  touchHold: false,
  performance: false,
  dynamicTitle: false,
  useContext: false,
  reactInstance: undefined,
  popperOptions: {},
  open: undefined,
  onRequestClose: function onRequestClose() {}
};

/**
* The keys of the defaults object for reducing down into a new object
* Used in `getIndividualSettings()`
*/
var DefaultsKeys = exports.DefaultsKeys = Browser.SUPPORTED && Object.keys(Defaults);

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = prefix;
/**
* Returns the supported prefixed property - only `webkit` is needed, `moz`, `ms` and `o` are obsolete
* @param {String} property
* @return {String} - browser supported prefixed property
*/
function prefix(property) {
  var prefixes = [false, 'webkit'];
  var upperProp = property.charAt(0).toUpperCase() + property.slice(1);

  for (var i = 0; i < prefixes.length; i++) {
    var _prefix = prefixes[i];
    var prefixedProp = _prefix ? '' + _prefix + upperProp : property;
    if (typeof window.document.body.style[prefixedProp] !== 'undefined') {
      return prefixedProp;
    }
  }

  return null;
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = find;
/**
* Ponyfill for Array.prototype.find
* @param {Array} arr
* @param {Function} checkFn
* @return item in the array
*/
function find(arr, checkFn) {
  if (Array.prototype.find) {
    return arr.find(checkFn);
  }

  // use `filter` as fallback
  return arr.filter(checkFn)[0];
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getCorePlacement;
/**
* Returns the non-shifted placement (e.g., 'bottom-start' => 'bottom')
* @param {String} placement
* @return {String}
*/
function getCorePlacement(placement) {
  return placement.replace(/-.+/, '');
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = closest;

var _matches = __webpack_require__(8);

/**
* Ponyfill to get the closest parent element
* @param {Element} element - child of parent to be returned
* @param {String} parentSelector - selector to match the parent if found
* @return {Element}
*/
function closest(element, parentSelector) {
  var _closest = Element.prototype.closest || function (selector) {
    var el = this;
    while (el) {
      if (_matches.matches.call(el, selector)) {
        return el;
      }
      el = el.parentElement;
    }
  };

  return _closest.call(element, parentSelector);
}

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = defer;
/**
* Waits until next repaint to execute a fn
* @param {Function} fn
*/
function defer(fn) {
  window.requestAnimationFrame(function () {
    setTimeout(fn, 0);
  });
}

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getInnerElements;

var _globals = __webpack_require__(0);

/**
* Returns inner elements of the popper element
* @param {Element} popper
* @return {Object}
*/
function getInnerElements(popper) {
  return {
    tooltip: popper.querySelector(_globals.Selectors.TOOLTIP),
    circle: popper.querySelector(_globals.Selectors.CIRCLE),
    content: popper.querySelector(_globals.Selectors.CONTENT)
  };
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = isVisible;
/**
* Determines if a popper is currently visible
* @param {Element} popper
* @return {Boolean}
*/
function isVisible(popper) {
  return popper.style.visibility === 'visible';
}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
function defaultMatchSelector(s) {
  var matches = (this.document || this.ownerDocument).querySelectorAll(s),
      i = matches.length;
  while (--i >= 0 && matches.item(i) !== this) {}
  return i > -1;
}

var matches = exports.matches = typeof window === 'undefined' ? defaultMatchSelector : Element.prototype.matches || Element.prototype.matchesSelector || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector || defaultMatchSelector;

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = __webpack_require__(13);

var _react2 = _interopRequireDefault(_react);

var _tippy = __webpack_require__(30);

var _tippy2 = _interopRequireDefault(_tippy);

var _globals = __webpack_require__(0);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var stopPortalEvent = function stopPortalEvent(e) {
  return e.stopPropagation();
};

var defaultProps = {
  html: null,
  position: 'top',
  animation: 'shift',
  animateFill: true,
  arrow: false,
  delay: 0,
  hideDelay: 0,
  trigger: 'mouseenter focus',
  duration: 375,
  hideDuration: 375,
  interactive: false,
  interactiveBorder: 2,
  theme: 'dark',
  offset: 0,
  hideOnClick: true,
  multiple: false,
  followCursor: false,
  inertia: false,
  popperOptions: {},
  onShow: function onShow() {},
  onShown: function onShown() {},
  onHide: function onHide() {},
  onHidden: function onHidden() {},
  disabled: false,
  arrowSize: 'regular',
  size: 'regular',
  className: '',
  style: {},
  distance: 10,
  onRequestClose: function onRequestClose() {},
  sticky: false,
  stickyDuration: 200,
  tag: 'div',
  touchHold: false,
  unmountHTMLWhenHide: false,
  zIndex: 9999
};

var propKeys = Object.keys(defaultProps);

var detectPropsChanged = function detectPropsChanged(props, prevProps) {
  var result = [];
  propKeys.forEach(function (key) {
    if (props[key] !== prevProps[key]) {
      result.push(key);
    }
  });
  return result;
};

var Tooltip = function (_Component) {
  _inherits(Tooltip, _Component);

  function Tooltip(props) {
    _classCallCheck(this, Tooltip);

    var _this = _possibleConstructorReturn(this, (Tooltip.__proto__ || Object.getPrototypeOf(Tooltip)).call(this, props));

    _this.initTippy = _this._initTippy.bind(_this);
    _this.destroyTippy = _this._destroyTippy.bind(_this);
    _this.updateTippy = _this._updateTippy.bind(_this);
    _this.updateReactDom = _this._updateReactDom.bind(_this);
    _this.showTooltip = _this._showTooltip.bind(_this);
    _this.hideTooltip = _this._hideTooltip.bind(_this);
    _this.updateSettings = _this._updateSettings.bind(_this);

    _this.state = {
      reactDOMValue: null
    };
    return _this;
  }

  _createClass(Tooltip, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      this.initTippy();
    }
  }, {
    key: 'componentWillUnmount',
    value: function componentWillUnmount() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      this.destroyTippy();
    }
  }, {
    key: 'componentDidUpdate',
    value: function componentDidUpdate(prevProps) {
      var _this2 = this;

      // enable and disabled
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.props.disabled === false && prevProps.disabled === true) {
        this.updateSettings('disabled', false);
        this.destroyTippy();
        this.initTippy();
        return;
      }

      if (this.props.disabled === true && prevProps.disabled === false) {
        this.updateSettings('disabled', true);
        this.destroyTippy();
        return;
      }

      // open
      if (this.props.open === true && !prevProps.open) {
        this.updateSettings('open', true);
        setTimeout(function () {
          _this2.showTooltip();
        }, 0);
      }
      if (this.props.open === false && prevProps.open === true) {
        this.updateSettings('open', false);
        this.hideTooltip();
      }

      if (this.props.html !== prevProps.html) {
        this.updateReactDom();
      }

      // Update content
      if (this.props.title !== prevProps.title) {
        this.updateTippy();
      }

      // update otherProps
      var propChanges = detectPropsChanged(this.props, prevProps);
      propChanges.forEach(function (key) {
        _this2.updateSettings(key, _this2.props[key]);
      });
    }
  }, {
    key: '_showTooltip',
    value: function _showTooltip() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.show(popper, this.props.duration);
      }
    }
  }, {
    key: '_hideTooltip',
    value: function _hideTooltip() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.hide(popper, this.props.hideDuration);
      }
    }
  }, {
    key: '_updateSettings',
    value: function _updateSettings(name, value) {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.updateSettings(popper, name, value);
      }
    }
  }, {
    key: '_updateReactDom',
    value: function _updateReactDom() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        this.updateSettings('reactDOM', this.props.html);
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        var isVisible = popper.style.visibility === 'visible' || this.props.open;
        if (isVisible) {
          this.tippy.updateForReact(popper, this.props.html);
        }
      }
    }
  }, {
    key: '_updateTippy',
    value: function _updateTippy() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.tippy.update(popper);
      }
    }
  }, {
    key: '_initTippy',
    value: function _initTippy() {
      var _this3 = this;

      if (typeof window === 'undefined' || typeof document === 'undefined' || !_globals.Browser.SUPPORTED) {
        return;
      }
      if (!this.props.disabled) {
        if (this.props.title) {
          this.tooltipDOM.setAttribute('title', this.props.title);
        }

        this.tippy = (0, _tippy2.default)(this.tooltipDOM, {
          disabled: this.props.disabled,
          position: this.props.position,
          animation: this.props.animation,
          animateFill: this.props.animateFill,
          arrow: this.props.arrow,
          arrowSize: this.props.arrowSize,
          delay: this.props.delay,
          hideDelay: this.props.hideDelay,
          trigger: this.props.trigger,
          duration: this.props.duration,
          hideDuration: this.props.hideDuration,
          interactive: this.props.interactive,
          interactiveBorder: this.props.interactiveBorder,
          theme: this.props.theme,
          offset: this.props.offset,
          hideOnClick: this.props.hideOnClick,
          multiple: this.props.multiple,
          size: this.props.size,
          followCursor: this.props.followCursor,
          inertia: this.props.inertia,
          popperOptions: this.props.popperOptions,
          onShow: this.props.onShow,
          onShown: this.props.onShown,
          onHide: this.props.onHide,
          onHidden: this.props.onHidden,
          distance: this.props.distance,
          reactDOM: this.props.html,
          setReactDOMValue: function setReactDOMValue(newReactDOM) {
            return _this3.setState({ reactDOMValue: newReactDOM });
          },
          unmountHTMLWhenHide: this.props.unmountHTMLWhenHide,
          open: this.props.open,
          sticky: this.props.sticky,
          stickyDuration: this.props.stickyDuration,
          tag: this.props.tag,
          touchHold: this.props.touchHold,
          onRequestClose: this.props.onRequestClose,
          useContext: this.props.useContext,
          reactInstance: this.props.useContext ? this : undefined,
          performance: true,
          html: this.props.rawTemplate ? this.props.rawTemplate : undefined,
          zIndex: this.props.zIndex
        });
        if (this.props.open) {
          this.showTooltip();
        }
      } else {
        this.tippy = null;
      }
    }
  }, {
    key: '_destroyTippy',
    value: function _destroyTippy() {
      if (typeof window === 'undefined' || typeof document === 'undefined') {
        return;
      }
      if (this.tippy) {
        var popper = this.tippy.getPopperElement(this.tooltipDOM);
        this.updateSettings('open', false);
        this.tippy.hide(popper, 0);
        this.tippy.destroy(popper);
        this.tippy = null;
      }
    }
  }, {
    key: 'render',
    value: function render() {
      var _this4 = this;

      var Tag = this.props.tag;


      return _react2.default.createElement(
        _react2.default.Fragment,
        null,
        _react2.default.createElement(
          Tag,
          {
            ref: function ref(tooltip) {
              _this4.tooltipDOM = tooltip;
            },
            title: this.props.title,
            className: this.props.className,
            tabIndex: this.props.tabIndex,
            style: _extends({
              display: 'inline'
            }, this.props.style)
          },
          this.props.children
        ),
        this.state.reactDOMValue && _react2.default.createElement(
          'div',
          {
            onClick: stopPortalEvent,
            onContextMenu: stopPortalEvent,
            onDoubleClick: stopPortalEvent,
            onDrag: stopPortalEvent,
            onDragEnd: stopPortalEvent,
            onDragEnter: stopPortalEvent,
            onDragExit: stopPortalEvent,
            onDragLeave: stopPortalEvent,
            onDragOver: stopPortalEvent,
            onDragStart: stopPortalEvent,
            onDrop: stopPortalEvent,
            onMouseDown: stopPortalEvent,
            onMouseEnter: stopPortalEvent,
            onMouseLeave: stopPortalEvent,
            onMouseMove: stopPortalEvent,
            onMouseOver: stopPortalEvent,
            onMouseOut: stopPortalEvent,
            onMouseUp: stopPortalEvent,

            onKeyDown: stopPortalEvent,
            onKeyPress: stopPortalEvent,
            onKeyUp: stopPortalEvent,

            onFocus: stopPortalEvent,
            onBlur: stopPortalEvent,

            onChange: stopPortalEvent,
            onInput: stopPortalEvent,
            onInvalid: stopPortalEvent,
            onSubmit: stopPortalEvent
          },
          this.state.reactDOMValue
        )
      );
    }
  }]);

  return Tooltip;
}(_react.Component);

Tooltip.defaultProps = defaultProps;

exports.default = Tooltip;

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = followCursorHandler;

var _globals = __webpack_require__(0);

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _closest = __webpack_require__(4);

var _closest2 = _interopRequireDefault(_closest);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Mousemove event listener callback method for follow cursor setting
* @param {MouseEvent} e
*/
function followCursorHandler(e) {
  var _this = this;

  var refData = (0, _find2.default)(_globals.Store, function (refData) {
    return refData.el === _this;
  });
  if (!refData) return;

  var popper = refData.popper,
      offset = refData.settings.offset;


  var position = (0, _getCorePlacement2.default)(popper.getAttribute('x-placement'));
  var halfPopperWidth = Math.round(popper.offsetWidth / 2);
  var halfPopperHeight = Math.round(popper.offsetHeight / 2);
  var viewportPadding = 5;
  var pageWidth = document.documentElement.offsetWidth || document.body.offsetWidth;

  var pageX = e.pageX,
      pageY = e.pageY;


  var x = void 0,
      y = void 0;

  switch (position) {
    case 'top':
      x = pageX - halfPopperWidth + offset;
      y = pageY - 2.25 * halfPopperHeight;
      break;
    case 'left':
      x = pageX - 2 * halfPopperWidth - 10;
      y = pageY - halfPopperHeight + offset;
      break;
    case 'right':
      x = pageX + halfPopperHeight;
      y = pageY - halfPopperHeight + offset;
      break;
    case 'bottom':
      x = pageX - halfPopperWidth + offset;
      y = pageY + halfPopperHeight / 1.5;
      break;
  }

  var isRightOverflowing = pageX + viewportPadding + halfPopperWidth + offset > pageWidth;
  var isLeftOverflowing = pageX - viewportPadding - halfPopperWidth + offset < 0;

  // Prevent left/right overflow
  if (position === 'top' || position === 'bottom') {
    if (isRightOverflowing) {
      x = pageWidth - viewportPadding - 2 * halfPopperWidth;
    }

    if (isLeftOverflowing) {
      x = viewportPadding;
    }
  }

  popper.style[(0, _prefix2.default)('transform')] = 'translate3d(' + x + 'px, ' + y + 'px, 0)';
}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getOffsetDistanceInPx;

var _globals = __webpack_require__(0);

/**
* Returns the distance taking into account the default distance due to
* the transform: translate setting in CSS
* @param {Number} distance
* @return {String}
*/
function getOffsetDistanceInPx(distance) {
  return -(distance - _globals.Defaults.distance) + 'px';
}

/***/ }),
/* 12 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = removeTitle;
/**
* Removes the title from the tooltipped element, setting `data-original-title`
* appropriately
* @param {Element} el
*/
function removeTitle(el) {
  var title = el.getAttribute('title');

  // Only set `data-original-title` attr if there is a title
  if (title) {
    el.setAttribute('data-original-title', title);
  }

  el.removeAttribute('title');
}

/***/ }),
/* 13 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_13__;

/***/ }),
/* 14 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react = __webpack_require__(13);

var _react2 = _interopRequireDefault(_react);

var _component = __webpack_require__(9);

var _component2 = _interopRequireDefault(_component);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var withTooltip = function withTooltip(Component) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  return function (_ref) {
    var props = _objectWithoutProperties(_ref, []);

    return _react2.default.createElement(
      _component2.default,
      options,
      _react2.default.createElement(Component, props)
    );
  };
};

exports.default = withTooltip;

/***/ }),
/* 15 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.withTooltip = exports.Tooltip = undefined;

var _component = __webpack_require__(9);

var _component2 = _interopRequireDefault(_component);

var _hoc = __webpack_require__(14);

var _hoc2 = _interopRequireDefault(_hoc);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.Tooltip = _component2.default;
exports.withTooltip = _hoc2.default;

/***/ }),
/* 16 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = bindEventListeners;

var _globals = __webpack_require__(0);

var _hideAllPoppers = __webpack_require__(25);

var _hideAllPoppers2 = _interopRequireDefault(_hideAllPoppers);

var _closest = __webpack_require__(4);

var _closest2 = _interopRequireDefault(_closest);

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

var _matches = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Adds the needed event listeners
*/
function bindEventListeners() {
  var touchHandler = function touchHandler() {
    _globals.Browser.touch = true;

    if (_globals.Browser.iOS()) {
      document.body.classList.add('tippy-touch');
    }

    if (_globals.Browser.dynamicInputDetection && window.performance) {
      document.addEventListener('mousemove', mousemoveHandler);
    }
  };

  var mousemoveHandler = function () {
    var time = void 0;

    return function () {
      var now = performance.now();

      // Chrome 60+ is 1 mousemove per rAF, use 20ms time difference
      if (now - time < 20) {
        _globals.Browser.touch = false;
        document.removeEventListener('mousemove', mousemoveHandler);
        if (!_globals.Browser.iOS()) {
          document.body.classList.remove('tippy-touch');
        }
      }

      time = now;
    };
  }();

  var clickHandler = function clickHandler(event) {
    // Simulated events dispatched on the document
    if (!(event.target instanceof Element)) {
      return (0, _hideAllPoppers2.default)();
    }

    var el = (0, _closest2.default)(event.target, _globals.Selectors.TOOLTIPPED_EL);
    var popper = (0, _closest2.default)(event.target, _globals.Selectors.POPPER);

    if (popper) {
      var ref = (0, _find2.default)(_globals.Store, function (ref) {
        return ref.popper === popper;
      });
      if (!ref) return;

      var interactive = ref.settings.interactive;

      if (interactive) return;
    }

    if (el) {
      var _ref = (0, _find2.default)(_globals.Store, function (ref) {
        return ref.el === el;
      });
      if (!_ref) return;

      var _ref$settings = _ref.settings,
          hideOnClick = _ref$settings.hideOnClick,
          multiple = _ref$settings.multiple,
          trigger = _ref$settings.trigger;

      // Hide all poppers except the one belonging to the element that was clicked IF
      // `multiple` is false AND they are a touch user, OR
      // `multiple` is false AND it's triggered by a click

      if (!multiple && _globals.Browser.touch || !multiple && trigger.indexOf('click') !== -1) {
        return (0, _hideAllPoppers2.default)(_ref);
      }

      // If hideOnClick is not strictly true or triggered by a click don't hide poppers
      if (hideOnClick !== true || trigger.indexOf('click') !== -1) return;
    }

    // Don't trigger a hide for tippy controllers, and don't needlessly run loop
    if ((0, _closest2.default)(event.target, _globals.Selectors.CONTROLLER) || !document.querySelector(_globals.Selectors.POPPER)) return;

    (0, _hideAllPoppers2.default)();
  };

  var blurHandler = function blurHandler(event) {
    var _document = document,
        el = _document.activeElement;

    if (el && el.blur && _matches.matches.call(el, _globals.Selectors.TOOLTIPPED_EL)) {
      el.blur();
    }
  };

  // Hook events
  document.addEventListener('click', clickHandler);
  document.addEventListener('touchstart', touchHandler);
  window.addEventListener('blur', blurHandler);

  if (!_globals.Browser.SUPPORTS_TOUCH && (navigator.maxTouchPoints > 0 || navigator.msMaxTouchPoints > 0)) {
    document.addEventListener('pointerdown', touchHandler);
  }
}

/***/ }),
/* 17 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createPopperElement;

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

var _getOffsetDistanceInPx = __webpack_require__(11);

var _getOffsetDistanceInPx2 = _interopRequireDefault(_getOffsetDistanceInPx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Creates a popper element then returns it
* @param {Number} id - the popper id
* @param {String} title - the tooltip's `title` attribute
* @param {Object} settings - individual settings
* @return {Element} - the popper element
*/
function createPopperElement(id, title, settings) {
  var position = settings.position,
      distance = settings.distance,
      arrow = settings.arrow,
      animateFill = settings.animateFill,
      inertia = settings.inertia,
      animation = settings.animation,
      arrowSize = settings.arrowSize,
      size = settings.size,
      theme = settings.theme,
      html = settings.html,
      zIndex = settings.zIndex,
      interactive = settings.interactive;


  var popper = document.createElement('div');
  popper.setAttribute('class', 'tippy-popper');
  popper.setAttribute('role', 'tooltip');
  popper.setAttribute('aria-hidden', 'true');
  popper.setAttribute('id', 'tippy-tooltip-' + id);
  popper.style.zIndex = zIndex;

  var tooltip = document.createElement('div');
  tooltip.setAttribute('class', 'tippy-tooltip tippy-tooltip--' + size + ' leave');
  tooltip.setAttribute('data-animation', animation);

  theme.split(' ').forEach(function (t) {
    tooltip.classList.add(t + '-theme');
  });

  if (arrow) {
    // Add an arrow
    var _arrow = document.createElement('div');
    _arrow.setAttribute('class', 'arrow-' + arrowSize);
    _arrow.setAttribute('x-arrow', '');
    tooltip.appendChild(_arrow);
  }

  if (animateFill) {
    // Create animateFill circle element for animation
    tooltip.setAttribute('data-animatefill', '');
    var circle = document.createElement('div');
    circle.setAttribute('class', 'leave');
    circle.setAttribute('x-circle', '');
    tooltip.appendChild(circle);
  }

  if (inertia) {
    // Change transition timing function cubic bezier
    tooltip.setAttribute('data-inertia', '');
  }

  if (interactive) {
    tooltip.setAttribute('data-interactive', '');
  }

  // Tooltip content (text or HTML)
  var content = document.createElement('div');
  content.setAttribute('class', 'tippy-tooltip-content');

  if (html) {
    var templateId = void 0;

    if (html instanceof Element) {
      content.appendChild(html);
      templateId = '#' + html.id || 'tippy-html-template';
    } else {
      content.innerHTML = document.getElementById(html.replace('#', '')).innerHTML;
      templateId = html;
    }

    popper.classList.add('html-template');
    interactive && popper.setAttribute('tabindex', '-1');
    tooltip.setAttribute('data-template-id', templateId);
  } else {
    content.innerHTML = title;
  }

  // Init distance. Further updates are made in the popper instance's `onUpdate()` method
  tooltip.style[(0, _getCorePlacement2.default)(position)] = (0, _getOffsetDistanceInPx2.default)(distance);

  tooltip.appendChild(content);
  popper.appendChild(tooltip);

  return popper;
}

/***/ }),
/* 18 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

exports.default = createPopperInstance;

var _popper = __webpack_require__(38);

var _popper2 = _interopRequireDefault(_popper);

var _defer = __webpack_require__(5);

var _defer2 = _interopRequireDefault(_defer);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

var _getInnerElements2 = __webpack_require__(6);

var _getInnerElements3 = _interopRequireDefault(_getInnerElements2);

var _getOffsetDistanceInPx = __webpack_require__(11);

var _getOffsetDistanceInPx2 = _interopRequireDefault(_getOffsetDistanceInPx);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Creates a new popper instance
* @param {Object} data
* @return {Object} - the popper instance
*/
function createPopperInstance(data) {
  var el = data.el,
      popper = data.popper,
      _data$settings = data.settings,
      position = _data$settings.position,
      popperOptions = _data$settings.popperOptions,
      offset = _data$settings.offset,
      distance = _data$settings.distance,
      flipDuration = _data$settings.flipDuration;

  var _getInnerElements = (0, _getInnerElements3.default)(popper),
      tooltip = _getInnerElements.tooltip;

  var config = _extends({
    placement: position
  }, popperOptions || {}, {
    modifiers: _extends({}, popperOptions ? popperOptions.modifiers : {}, {
      flip: _extends({
        padding: distance + 5 /* 5px from viewport boundary */
      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.flip : {}),
      offset: _extends({
        offset: offset
      }, popperOptions && popperOptions.modifiers ? popperOptions.modifiers.offset : {})
    }),
    onUpdate: function onUpdate() {
      var styles = tooltip.style;
      styles.top = '';
      styles.bottom = '';
      styles.left = '';
      styles.right = '';
      styles[(0, _getCorePlacement2.default)(popper.getAttribute('x-placement'))] = (0, _getOffsetDistanceInPx2.default)(distance);
    }
  });

  // Update the popper's position whenever its content changes
  // Not supported in IE10 unless polyfilled
  if (window.MutationObserver) {
    var styles = popper.style;

    var observer = new MutationObserver(function () {
      styles[(0, _prefix2.default)('transitionDuration')] = '0ms';
      data.popperInstance.update();
      (0, _defer2.default)(function () {
        styles[(0, _prefix2.default)('transitionDuration')] = flipDuration + 'ms';
      });
    });

    observer.observe(popper, {
      childList: true,
      subtree: true,
      characterData: true
    });

    data._mutationObserver = observer;
  }

  return new _popper2.default(el, popper, config);
}

/***/ }),
/* 19 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createTooltips;

var _getIndividualSettings = __webpack_require__(24);

var _getIndividualSettings2 = _interopRequireDefault(_getIndividualSettings);

var _createPopperElement = __webpack_require__(17);

var _createPopperElement2 = _interopRequireDefault(_createPopperElement);

var _createTrigger = __webpack_require__(20);

var _createTrigger2 = _interopRequireDefault(_createTrigger);

var _getEventListenerHandlers = __webpack_require__(23);

var _getEventListenerHandlers2 = _interopRequireDefault(_getEventListenerHandlers);

var _evaluateSettings = __webpack_require__(21);

var _evaluateSettings2 = _interopRequireDefault(_evaluateSettings);

var _removeTitle = __webpack_require__(12);

var _removeTitle2 = _interopRequireDefault(_removeTitle);

var _globals = __webpack_require__(0);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var idCounter = 1;

/**
* Creates tooltips for all el elements that match the instance's selector
* @param {Element[]} els
* @return {Object[]} Array of ref data objects
*/
function createTooltips(els) {
  var _this = this;

  return els.reduce(function (a, el) {
    var id = idCounter;

    var settings = (0, _evaluateSettings2.default)(_this.settings.performance ? _this.settings : (0, _getIndividualSettings2.default)(el, _this.settings));

    var html = settings.html,
        reactDOM = settings.reactDOM,
        trigger = settings.trigger,
        touchHold = settings.touchHold;


    var title = el.getAttribute('title');
    if (!title && !html && !reactDOM) return a;

    el.setAttribute('data-tooltipped', '');
    el.setAttribute('aria-describedby', 'tippy-tooltip-' + id);
    (0, _removeTitle2.default)(el);

    var popper = (0, _createPopperElement2.default)(id, title, settings);
    var handlers = _getEventListenerHandlers2.default.call(_this, el, popper, settings);

    var listeners = [];

    trigger.trim().split(' ').forEach(function (event) {
      return listeners = listeners.concat((0, _createTrigger2.default)(event, el, handlers, touchHold));
    });

    a.push({
      id: id,
      el: el,
      popper: popper,
      settings: settings,
      listeners: listeners,
      tippyInstance: _this
    });

    idCounter++;

    return a;
  }, []);
}

/***/ }),
/* 20 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = createTrigger;

var _globals = __webpack_require__(0);

/**
* Creates a trigger
* @param {Object} event - the custom event specified in the `trigger` setting
* @param {Element} el - tooltipped element
* @param {Object} handlers - the handlers for each listener
* @param {Boolean} touchHold
* @return {Array} - array of listener objects
*/
function createTrigger(event, el, handlers, touchHold) {
  var listeners = [];

  if (event === 'manual') return listeners;

  // Enter
  el.addEventListener(event, handlers.handleTrigger);
  listeners.push({
    event: event,
    handler: handlers.handleTrigger
  });

  // Leave
  if (event === 'mouseenter') {
    if (_globals.Browser.SUPPORTS_TOUCH && touchHold) {
      el.addEventListener('touchstart', handlers.handleTrigger);
      listeners.push({
        event: 'touchstart',
        handler: handlers.handleTrigger
      });
      el.addEventListener('touchend', handlers.handleMouseleave);
      listeners.push({
        event: 'touchend',
        handler: handlers.handleMouseleave
      });
    }

    el.addEventListener('mouseleave', handlers.handleMouseleave);
    listeners.push({
      event: 'mouseleave',
      handler: handlers.handleMouseleave
    });
  }

  if (event === 'focus') {
    el.addEventListener('blur', handlers.handleBlur);
    listeners.push({
      event: 'blur',
      handler: handlers.handleBlur
    });
  }

  return listeners;
}

/***/ }),
/* 21 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = evaluateSettings;
/**
* Evaluates/modifies the settings object for appropriate behavior
* @param {Object} settings
* @return {Object} modified/evaluated settings
*/
function evaluateSettings(settings) {
  // animateFill is disabled if an arrow is true
  if (settings.arrow) {
    settings.animateFill = false;
  }

  // reassign appendTo into the result of evaluating appendTo
  // if it's set as a function instead of Element
  if (settings.appendTo && typeof settings.appendTo === 'function') {
    settings.appendTo = settings.appendTo();
  }

  return settings;
}

/***/ }),
/* 22 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getArrayOfElements;
/**
* Returns an array of elements based on the selector input
* @param {String|Element|Element[]} selector
* @return {Element[]}
*/
function getArrayOfElements(selector) {
  if (selector instanceof Element) {
    return [selector];
  }

  if (Array.isArray(selector)) {
    return selector;
  }

  return [].slice.call(document.querySelectorAll(selector));
}

/***/ }),
/* 23 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getEventListenerHandlers;

var _globals = __webpack_require__(0);

var _isVisible = __webpack_require__(7);

var _isVisible2 = _interopRequireDefault(_isVisible);

var _closest = __webpack_require__(4);

var _closest2 = _interopRequireDefault(_closest);

var _cursorIsOutsideInteractiveBorder = __webpack_require__(32);

var _cursorIsOutsideInteractiveBorder2 = _interopRequireDefault(_cursorIsOutsideInteractiveBorder);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Returns relevant listener callbacks for each ref
* @param {Element} el
* @param {Element} popper
* @param {Object} settings
* @return {Object} - relevant listener handlers
*/
function getEventListenerHandlers(el, popper, settings) {
  var _this = this;

  var position = settings.position,
      delay = settings.delay,
      duration = settings.duration,
      interactive = settings.interactive,
      interactiveBorder = settings.interactiveBorder,
      distance = settings.distance,
      hideOnClick = settings.hideOnClick,
      trigger = settings.trigger,
      touchHold = settings.touchHold,
      touchWait = settings.touchWait;


  var showDelay = void 0,
      hideDelay = void 0;

  var clearTimeouts = function clearTimeouts() {
    clearTimeout(showDelay);
    clearTimeout(hideDelay);
  };

  var _show = function _show() {
    clearTimeouts();

    // Not hidden. For clicking when it also has a `focus` event listener
    if ((0, _isVisible2.default)(popper)) return;

    var _delay = Array.isArray(delay) ? delay[0] : delay;

    if (delay) {
      showDelay = setTimeout(function () {
        return _this.show(popper);
      }, _delay);
    } else {
      _this.show(popper);
    }
  };

  var show = function show(event) {
    return _this.callbacks.wait ? _this.callbacks.wait.call(popper, _show, event) : _show();
  };

  var hide = function hide() {
    clearTimeouts();

    var _delay = Array.isArray(delay) ? delay[1] : delay;

    if (delay) {
      hideDelay = setTimeout(function () {
        return _this.hide(popper);
      }, _delay);
    } else {
      _this.hide(popper);
    }
  };

  var handleTrigger = function handleTrigger(event) {
    var mouseenterTouch = event.type === 'mouseenter' && _globals.Browser.SUPPORTS_TOUCH && _globals.Browser.touch;

    if (mouseenterTouch && touchHold) return;

    // Toggle show/hide when clicking click-triggered tooltips
    var isClick = event.type === 'click';
    var isNotPersistent = hideOnClick !== 'persistent';

    isClick && (0, _isVisible2.default)(popper) && isNotPersistent ? hide() : show(event);

    if (mouseenterTouch && _globals.Browser.iOS() && el.click) {
      el.click();
    }
  };

  var handleMouseleave = function handleMouseleave(event) {

    // Don't fire 'mouseleave', use the 'touchend'
    if (event.type === 'mouseleave' && _globals.Browser.SUPPORTS_TOUCH && _globals.Browser.touch && touchHold) {
      return;
    }

    if (interactive) {
      // Temporarily handle mousemove to check if the mouse left somewhere
      // other than its popper
      var handleMousemove = function handleMousemove(event) {

        var triggerHide = function triggerHide() {
          document.body.removeEventListener('mouseleave', hide);
          document.removeEventListener('mousemove', handleMousemove);
          hide();
        };

        var closestTooltippedEl = (0, _closest2.default)(event.target, _globals.Selectors.TOOLTIPPED_EL);

        var isOverPopper = (0, _closest2.default)(event.target, _globals.Selectors.POPPER) === popper;
        var isOverEl = closestTooltippedEl === el;
        var isClickTriggered = trigger.indexOf('click') !== -1;
        var isOverOtherTooltippedEl = closestTooltippedEl && closestTooltippedEl !== el;

        if (isOverOtherTooltippedEl) {
          return triggerHide();
        }

        if (isOverPopper || isOverEl || isClickTriggered) return;

        if ((0, _cursorIsOutsideInteractiveBorder2.default)(event, popper, settings)) {
          triggerHide();
        }
      };

      document.body.addEventListener('mouseleave', hide);
      document.addEventListener('mousemove', handleMousemove);

      return;
    }

    // If it's not interactive, just hide it
    hide();
  };

  var handleBlur = function handleBlur(event) {
    // Ignore blur on touch devices, if there is no `relatedTarget`, hide
    // If the related target is a popper, ignore
    if (!event.relatedTarget || _globals.Browser.touch) return;
    if ((0, _closest2.default)(event.relatedTarget, _globals.Selectors.POPPER)) return;

    hide();
  };

  return {
    handleTrigger: handleTrigger,
    handleMouseleave: handleMouseleave,
    handleBlur: handleBlur
  };
}

/***/ }),
/* 24 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = getIndividualSettings;

var _globals = __webpack_require__(0);

/**
* Returns an object of settings to override global settings
* @param {Element} el - the tooltipped element
* @param {Object} instanceSettings
* @return {Object} - individual settings
*/
function getIndividualSettings(el, instanceSettings) {
  var settings = _globals.DefaultsKeys.reduce(function (acc, key) {
    var val = el.getAttribute('data-' + key.toLowerCase()) || instanceSettings[key];

    // Convert strings to booleans
    if (val === 'false') val = false;
    if (val === 'true') val = true;

    // Convert number strings to true numbers
    if (isFinite(val) && !isNaN(parseFloat(val))) {
      val = parseFloat(val);
    }

    // Convert array strings to actual arrays
    if (typeof val === 'string' && val.trim().charAt(0) === '[') {
      val = JSON.parse(val);
    }

    acc[key] = val;

    return acc;
  }, {});

  return Object.assign({}, instanceSettings, settings);
}

/***/ }),
/* 25 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = hideAllPoppers;

var _globals = __webpack_require__(0);

/**
* Hides all poppers
* @param {Object} exclude - refData to exclude if needed
*/
function hideAllPoppers(exclude) {
  _globals.Store.forEach(function (refData) {
    var popper = refData.popper,
        tippyInstance = refData.tippyInstance,
        _refData$settings = refData.settings,
        appendTo = _refData$settings.appendTo,
        hideOnClick = _refData$settings.hideOnClick,
        trigger = _refData$settings.trigger;

    // Don't hide already hidden ones

    if (!appendTo.contains(popper)) return;

    // hideOnClick can have the truthy value of 'persistent', so strict check is needed
    var isHideOnClick = hideOnClick === true || trigger.indexOf('focus') !== -1;
    var isNotCurrentRef = !exclude || popper !== exclude.popper;

    if (isHideOnClick && isNotCurrentRef) {
      refData.settings.onRequestClose();
      tippyInstance.hide(popper);
    }
  });
}

/***/ }),
/* 26 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = init;

var _bindEventListeners = __webpack_require__(16);

var _bindEventListeners2 = _interopRequireDefault(_bindEventListeners);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* To run a single time, once DOM is presumed to be ready
* @return {Boolean} whether the function has run or not
*/
function init() {
  if (init.done) return false;
  init.done = true;

  (0, _bindEventListeners2.default)();

  return true;
}

/***/ }),
/* 27 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = makeSticky;

var _defer = __webpack_require__(5);

var _defer2 = _interopRequireDefault(_defer);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _isVisible = __webpack_require__(7);

var _isVisible2 = _interopRequireDefault(_isVisible);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Updates a popper's position on each animation frame to make it stick to a moving element
* @param {Object} refData
*/
function makeSticky(refData) {
  var popper = refData.popper,
      popperInstance = refData.popperInstance,
      stickyDuration = refData.settings.stickyDuration;


  var applyTransitionDuration = function applyTransitionDuration() {
    return popper.style[(0, _prefix2.default)('transitionDuration')] = stickyDuration + 'ms';
  };

  var removeTransitionDuration = function removeTransitionDuration() {
    return popper.style[(0, _prefix2.default)('transitionDuration')] = '';
  };

  var updatePosition = function updatePosition() {
    popperInstance && popperInstance.scheduleUpdate();

    applyTransitionDuration();

    (0, _isVisible2.default)(popper) ? window.requestAnimationFrame(updatePosition) : removeTransitionDuration();
  };

  // Wait until Popper's position has been updated initially
  (0, _defer2.default)(updatePosition);
}

/***/ }),
/* 28 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = mountPopper;

var _globals = __webpack_require__(0);

var _followCursorHandler = __webpack_require__(10);

var _followCursorHandler2 = _interopRequireDefault(_followCursorHandler);

var _createPopperInstance = __webpack_require__(18);

var _createPopperInstance2 = _interopRequireDefault(_createPopperInstance);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Appends the popper and creates a popper instance if one does not exist
* Also updates its position if need be and enables event listeners
* @param {Object} data -  the element/popper reference data
*/
function mountPopper(data) {
  var el = data.el,
      popper = data.popper,
      _data$settings = data.settings,
      appendTo = _data$settings.appendTo,
      followCursor = _data$settings.followCursor;

  // Already on the DOM

  if (appendTo.contains(popper)) return;

  appendTo.appendChild(popper);

  if (!data.popperInstance) {
    data.popperInstance = (0, _createPopperInstance2.default)(data);
  } else {
    data.popperInstance.update();
    if (!followCursor || _globals.Browser.touch) {
      data.popperInstance.enableEventListeners();
    }
  }

  // Since touch is determined dynamically, followCursor is set on mount
  if (followCursor && !_globals.Browser.touch) {
    el.addEventListener('mousemove', _followCursorHandler2.default);
    data.popperInstance.disableEventListeners();
  }
}

/***/ }),
/* 29 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = onTransitionEnd;

var _globals = __webpack_require__(0);

var _getInnerElements2 = __webpack_require__(6);

var _getInnerElements3 = _interopRequireDefault(_getInnerElements2);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Prepares the callback functions for `show` and `hide` methods
* @param {Object} data
* @param {Number} duration
* @param {Function} callback - callback function to fire once transitions complete
*/
function onTransitionEnd(data, duration, callback) {
  // Make callback synchronous if duration is 0
  if (!duration) {
    return callback();
  }

  var _getInnerElements = (0, _getInnerElements3.default)(data.popper),
      tooltip = _getInnerElements.tooltip;

  var transitionendFired = false;

  var listenerCallback = function listenerCallback(e) {
    if (e.target === tooltip && !transitionendFired) {
      transitionendFired = true;
      callback();
    }
  };

  // Fire callback upon transition completion
  tooltip.addEventListener('webkitTransitionEnd', listenerCallback);
  tooltip.addEventListener('transitionend', listenerCallback);

  // Fallback: transitionend listener sometimes may not fire
  clearTimeout(data._transitionendTimeout);
  data._transitionendTimeout = setTimeout(function () {
    if (!transitionendFired) {
      callback();
    }
  }, duration);
}

/***/ }),
/* 30 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

/* Utility functions */


/* Core library functions */


var _globals = __webpack_require__(0);

var _reactDom = __webpack_require__(39);

var _reactDom2 = _interopRequireDefault(_reactDom);

var _init = __webpack_require__(26);

var _init2 = _interopRequireDefault(_init);

var _defer = __webpack_require__(5);

var _defer2 = _interopRequireDefault(_defer);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

var _findIndex = __webpack_require__(34);

var _findIndex2 = _interopRequireDefault(_findIndex);

var _removeTitle = __webpack_require__(12);

var _removeTitle2 = _interopRequireDefault(_removeTitle);

var _elementIsInViewport = __webpack_require__(33);

var _elementIsInViewport2 = _interopRequireDefault(_elementIsInViewport);

var _triggerReflow = __webpack_require__(37);

var _triggerReflow2 = _interopRequireDefault(_triggerReflow);

var _modifyClassList = __webpack_require__(35);

var _modifyClassList2 = _interopRequireDefault(_modifyClassList);

var _getInnerElements4 = __webpack_require__(6);

var _getInnerElements5 = _interopRequireDefault(_getInnerElements4);

var _applyTransitionDuration = __webpack_require__(31);

var _applyTransitionDuration2 = _interopRequireDefault(_applyTransitionDuration);

var _isVisible = __webpack_require__(7);

var _isVisible2 = _interopRequireDefault(_isVisible);

var _noop = __webpack_require__(36);

var _noop2 = _interopRequireDefault(_noop);

var _followCursorHandler = __webpack_require__(10);

var _followCursorHandler2 = _interopRequireDefault(_followCursorHandler);

var _getArrayOfElements = __webpack_require__(22);

var _getArrayOfElements2 = _interopRequireDefault(_getArrayOfElements);

var _onTransitionEnd = __webpack_require__(29);

var _onTransitionEnd2 = _interopRequireDefault(_onTransitionEnd);

var _mountPopper = __webpack_require__(28);

var _mountPopper2 = _interopRequireDefault(_mountPopper);

var _makeSticky = __webpack_require__(27);

var _makeSticky2 = _interopRequireDefault(_makeSticky);

var _createTooltips = __webpack_require__(19);

var _createTooltips2 = _interopRequireDefault(_createTooltips);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

/**
* @param {String|Element|Element[]} selector
* @param {Object} settings (optional) - the object of settings to be applied to the instance
*/
var Tippy = function () {
  function Tippy(selector) {
    var settings = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

    _classCallCheck(this, Tippy);

    // Use default browser tooltip on unsupported browsers
    if (!_globals.Browser.SUPPORTED) return;

    (0, _init2.default)();

    this.state = {
      destroyed: false
    };

    this.selector = selector;

    this.settings = _extends({}, _globals.Defaults, settings);

    if (settings.show || settings.shown || settings.hide || settings.hidden) {
      console.warn('Callbacks without the `on` prefix are deprecated (with the exception of `wait`).' + ' Use onShow, onShown, onHide, and onHidden instead.');
    }

    this.callbacks = {
      wait: settings.wait,
      show: settings.onShow || settings.show || _noop2.default,
      shown: settings.onShown || settings.shown || _noop2.default,
      hide: settings.onHide || settings.hide || _noop2.default,
      hidden: settings.onHidden || settings.hidden || _noop2.default
    };

    this.store = _createTooltips2.default.call(this, (0, _getArrayOfElements2.default)(selector));
    _globals.Store.push.apply(_globals.Store, this.store);
  }

  /**
  * Returns the reference element's popper element
  * @param {Element} el
  * @return {Element}
  */


  _createClass(Tippy, [{
    key: 'getPopperElement',
    value: function getPopperElement(el) {
      try {
        return (0, _find2.default)(this.store, function (data) {
          return data.el === el;
        }).popper;
      } catch (e) {
        console.error('[getPopperElement]: Element passed as the argument does not exist in the instance');
      }
    }

    /**
    * Returns a popper's reference element
    * @param {Element} popper
    * @return {Element}
    */

  }, {
    key: 'getReferenceElement',
    value: function getReferenceElement(popper) {
      try {
        return (0, _find2.default)(this.store, function (data) {
          return data.popper === popper;
        }).el;
      } catch (e) {
        console.error('[getReferenceElement]: Popper passed as the argument does not exist in the instance');
      }
    }

    /**
    * Returns the reference data object from either the reference element or popper element
    * @param {Element} x (reference element or popper)
    * @return {Object}
    */

  }, {
    key: 'getReferenceData',
    value: function getReferenceData(x) {
      return (0, _find2.default)(this.store, function (data) {
        return data.el === x || data.popper === x;
      });
    }

    /**
    * Update settings
    * @param {DOMElement} - popper
    * @param {string} - name
    * @param {string} - value
    */

  }, {
    key: 'updateSettings',
    value: function updateSettings(popper, name, value) {
      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      if (!data) return;

      var newSettings = _extends({}, data.settings, _defineProperty({}, name, value));
      data.settings = newSettings;
    }
  }, {
    key: 'updateForReact',


    /**
    * Update for React
    * @param {DOMElement} - popper
    * @param {ReactElement} - content
    */
    value: function updateForReact(popper, updatedContent) {
      var tooltipContent = popper.querySelector(_globals.Selectors.CONTENT);
      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      if (!data) return;

      var _data$settings = data.settings,
          useContext = _data$settings.useContext,
          setReactDOMValue = _data$settings.setReactDOMValue;


      if (useContext) {
        setReactDOMValue(_reactDom2.default.createPortal(updatedContent, tooltipContent));
      } else {
        _reactDom2.default.render(updatedContent, tooltipContent);
      }
    }
    /**
    * Shows a popper
    * @param {Element} popper
    * @param {Number} customDuration (optional)
    */

  }, {
    key: 'show',
    value: function show(popper, customDuration) {
      var _this = this;

      if (this.state.destroyed) return;

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      if (!data) return;

      var _getInnerElements = (0, _getInnerElements5.default)(popper),
          tooltip = _getInnerElements.tooltip,
          circle = _getInnerElements.circle,
          content = _getInnerElements.content;

      if (!document.body.contains(data.el)) {
        this.destroy(popper);
        return;
      }

      this.callbacks.show.call(popper);

      // Custom react
      if (data.settings && data.settings.open === false) {
        return;
      }

      if (data.settings.reactDOM) {
        this.updateForReact(popper, data.settings.reactDOM);
      }
      // end: Custom react

      var el = data.el,
          _data$settings2 = data.settings,
          appendTo = _data$settings2.appendTo,
          sticky = _data$settings2.sticky,
          interactive = _data$settings2.interactive,
          followCursor = _data$settings2.followCursor,
          flipDuration = _data$settings2.flipDuration,
          duration = _data$settings2.duration,
          dynamicTitle = _data$settings2.dynamicTitle;


      if (dynamicTitle) {
        var title = el.getAttribute('title');
        if (title) {
          content.innerHTML = title;
          (0, _removeTitle2.default)(el);
        }
      }

      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[0] : duration;

      // Prevent a transition when popper changes position
      (0, _applyTransitionDuration2.default)([popper, tooltip, circle], 0);

      (0, _mountPopper2.default)(data);

      popper.style.visibility = 'visible';
      popper.setAttribute('aria-hidden', 'false');

      // Wait for popper's position to update
      (0, _defer2.default)(function () {
        // Sometimes the arrow will not be in the correct position, force another update
        if (!followCursor || _globals.Browser.touch) {
          data.popperInstance.update();
          (0, _applyTransitionDuration2.default)([popper], flipDuration);
        }

        // Re-apply transition durations
        (0, _applyTransitionDuration2.default)([tooltip, circle], _duration);

        // Make content fade out a bit faster than the tooltip if `animateFill`
        if (circle) content.style.opacity = 1;

        // Interactive tooltips receive a class of 'active'
        interactive && el.classList.add('active');

        // Update popper's position on every animation frame
        sticky && (0, _makeSticky2.default)(data);

        // Repaint/reflow is required for CSS transition when appending
        (0, _triggerReflow2.default)(tooltip, circle);

        (0, _modifyClassList2.default)([tooltip, circle], function (list) {
          list.contains('tippy-notransition') && list.remove('tippy-notransition');
          list.remove('leave');
          list.add('enter');
        });

        // Wait for transitions to complete
        (0, _onTransitionEnd2.default)(data, _duration, function () {
          if (!(0, _isVisible2.default)(popper) || data._onShownFired) return;

          // Focus interactive tooltips only
          interactive && popper.focus();
          // Remove transitions from tooltip
          tooltip.classList.add('tippy-notransition');
          // Prevents shown() from firing more than once from early transition cancellations
          data._onShownFired = true;

          _this.callbacks.shown.call(popper);
        });
      });
    }

    /**
    * Hides a popper
    * @param {Element} popper
    * @param {Number} customDuration (optional)
    */

  }, {
    key: 'hide',
    value: function hide(popper, customDuration) {
      var _this2 = this;

      if (this.state.destroyed) return;

      this.callbacks.hide.call(popper);

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      if (!data) return;

      var _getInnerElements2 = (0, _getInnerElements5.default)(popper),
          tooltip = _getInnerElements2.tooltip,
          circle = _getInnerElements2.circle,
          content = _getInnerElements2.content;

      // custom react
      // Prevent hide if open


      if (data.settings.disabled === false && data && data.settings.open) {
        return;
      }

      var isUnmount = data && data.settings && data.settings.unmountHTMLWhenHide && data.settings.reactDOM;
      // end: custom react

      var el = data.el,
          _data$settings3 = data.settings,
          appendTo = _data$settings3.appendTo,
          sticky = _data$settings3.sticky,
          interactive = _data$settings3.interactive,
          followCursor = _data$settings3.followCursor,
          html = _data$settings3.html,
          trigger = _data$settings3.trigger,
          duration = _data$settings3.duration;


      var _duration = customDuration !== undefined ? customDuration : Array.isArray(duration) ? duration[1] : duration;

      data._onShownFired = false;
      interactive && el.classList.remove('active');

      popper.style.visibility = 'hidden';
      popper.setAttribute('aria-hidden', 'true');

      (0, _applyTransitionDuration2.default)([tooltip, circle, circle ? content : null], _duration);

      if (circle) content.style.opacity = 0;

      (0, _modifyClassList2.default)([tooltip, circle], function (list) {
        list.contains('tippy-tooltip') && list.remove('tippy-notransition');
        list.remove('enter');
        list.add('leave');
      });

      // Re-focus click-triggered html elements
      // and the tooltipped element IS in the viewport (otherwise it causes unsightly scrolling
      // if the tooltip is closed and the element isn't in the viewport anymore)
      if (html && trigger.indexOf('click') !== -1 && (0, _elementIsInViewport2.default)(el)) {
        el.focus();
      }

      // Wait for transitions to complete
      (0, _onTransitionEnd2.default)(data, _duration, function () {
        // `isVisible` is not completely reliable to determine if we shouldn't
        // run the hidden callback, we need to check the computed opacity style.
        // This prevents glitchy behavior of the transition when quickly showing
        // and hiding a tooltip.
        if ((0, _isVisible2.default)(popper) || !appendTo.contains(popper) || getComputedStyle(tooltip).opacity === '1') return;

        el.removeEventListener('mousemove', _followCursorHandler2.default);
        data.popperInstance.disableEventListeners();
        appendTo.removeChild(popper);

        _this2.callbacks.hidden.call(popper);

        // custom react
        if (isUnmount) {
          _reactDom2.default.unmountComponentAtNode(content);
        }
      });
    }

    /**
    * Updates a popper with new content
    * @param {Element} popper
    */

  }, {
    key: 'update',
    value: function update(popper) {
      if (this.state.destroyed) return;

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      if (!data) return;

      var _getInnerElements3 = (0, _getInnerElements5.default)(popper),
          content = _getInnerElements3.content;

      var el = data.el,
          html = data.settings.html;


      if (html instanceof Element) {
        console.warn('Aborted: update() should not be used if `html` is a DOM element');
        return;
      }

      content.innerHTML = html ? document.getElementById(html.replace('#', '')).innerHTML : el.getAttribute('title') || el.getAttribute('data-original-title');

      if (!html) (0, _removeTitle2.default)(el);
    }

    /**
    * Destroys a popper
    * @param {Element} popper
    * @param {Boolean} _isLast - private param used by destroyAll to optimize
    */

  }, {
    key: 'destroy',
    value: function destroy(popper, _isLast) {
      var _this3 = this;

      if (this.state.destroyed) return;

      var data = (0, _find2.default)(this.store, function (data) {
        return data.popper === popper;
      });
      if (!data) return;

      var el = data.el,
          popperInstance = data.popperInstance,
          listeners = data.listeners,
          _mutationObserver = data._mutationObserver;

      // Ensure the popper is hidden

      if ((0, _isVisible2.default)(popper)) {
        this.hide(popper, 0);
      }

      // Remove Tippy-only event listeners from tooltipped element
      listeners.forEach(function (listener) {
        return el.removeEventListener(listener.event, listener.handler);
      });

      // Restore original title
      el.setAttribute('title', el.getAttribute('data-original-title'));

      el.removeAttribute('data-original-title');
      el.removeAttribute('data-tooltipped');
      el.removeAttribute('aria-describedby');

      popperInstance && popperInstance.destroy();
      _mutationObserver && _mutationObserver.disconnect();

      // Remove from store
      _globals.Store.splice((0, _findIndex2.default)(_globals.Store, function (data) {
        return data.popper === popper;
      }), 1);

      // Ensure filter is called only once
      if (_isLast === undefined || _isLast) {
        this.store = _globals.Store.filter(function (data) {
          return data.tippyInstance === _this3;
        });
      }
    }

    /**
    * Destroys all tooltips created by the instance
    */

  }, {
    key: 'destroyAll',
    value: function destroyAll() {
      var _this4 = this;

      if (this.state.destroyed) return;

      var storeLength = this.store.length;

      this.store.forEach(function (_ref, index) {
        var popper = _ref.popper;

        _this4.destroy(popper, index === storeLength - 1);
      });

      this.store = null;
      this.state.destroyed = true;
    }
  }]);

  return Tippy;
}();

function tippy(selector, settings) {
  return new Tippy(selector, settings);
}

tippy.Browser = _globals.Browser;
tippy.Defaults = _globals.Defaults;
tippy.disableDynamicInputDetection = function () {
  return _globals.Browser.dynamicInputDetection = false;
};
tippy.enableDynamicInputDetection = function () {
  return _globals.Browser.dynamicInputDetection = true;
};

exports.default = tippy;

/***/ }),
/* 31 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = applyTransitionDuration;

var _globals = __webpack_require__(0);

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

var _matches = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Applies the transition duration to each element
* @param {Element[]} els - Array of elements
* @param {Number} duration
*/
function applyTransitionDuration(els, duration) {
  els.forEach(function (el) {
    if (!el) return;

    var isContent = _matches.matches.call(el, _globals.Selectors.CONTENT);

    var _duration = isContent ? Math.round(duration / 1.3) : duration;

    el.style[(0, _prefix2.default)('transitionDuration')] = _duration + 'ms';
  });
}

/***/ }),
/* 32 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = cursorIsOutsideInteractiveBorder;

var _getCorePlacement = __webpack_require__(3);

var _getCorePlacement2 = _interopRequireDefault(_getCorePlacement);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Determines if the mouse's cursor is outside the interactive border
* @param {MouseEvent} event
* @param {Element} popper
* @param {Object} settings
* @return {Boolean}
*/
function cursorIsOutsideInteractiveBorder(event, popper, settings) {
  if (!popper.getAttribute('x-placement')) return true;

  var x = event.clientX,
      y = event.clientY;
  var interactiveBorder = settings.interactiveBorder,
      distance = settings.distance;


  var rect = popper.getBoundingClientRect();
  var corePosition = (0, _getCorePlacement2.default)(popper.getAttribute('x-placement'));
  var borderWithDistance = interactiveBorder + distance;

  var exceeds = {
    top: rect.top - y > interactiveBorder,
    bottom: y - rect.bottom > interactiveBorder,
    left: rect.left - x > interactiveBorder,
    right: x - rect.right > interactiveBorder
  };

  switch (corePosition) {
    case 'top':
      exceeds.top = rect.top - y > borderWithDistance;
      break;
    case 'bottom':
      exceeds.bottom = y - rect.bottom > borderWithDistance;
      break;
    case 'left':
      exceeds.left = rect.left - x > borderWithDistance;
      break;
    case 'right':
      exceeds.right = x - rect.right > borderWithDistance;
      break;
  }

  return exceeds.top || exceeds.bottom || exceeds.left || exceeds.right;
}

/***/ }),
/* 33 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = elementIsInViewport;
/**
* Determines if an element is visible in the viewport
* @param {Element} el
* @return {Boolean}
*/
function elementIsInViewport(el) {
  var rect = el.getBoundingClientRect();

  return rect.top >= 0 && rect.left >= 0 && rect.bottom <= (window.innerHeight || document.documentElement.clientHeight) && rect.right <= (window.innerWidth || document.documentElement.clientWidth);
}

/***/ }),
/* 34 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findIndex;

var _find = __webpack_require__(2);

var _find2 = _interopRequireDefault(_find);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Ponyfill for Array.prototype.findIndex
* @param {Array} arr
* @param {Function} checkFn
* @return index of the item in the array
*/
function findIndex(arr, checkFn) {
  if (Array.prototype.findIndex) {
    return arr.findIndex(checkFn);
  }

  // fallback
  return arr.indexOf((0, _find2.default)(arr, checkFn));
}

/***/ }),
/* 35 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = modifyClassList;
/**
* Modifies elements' class lists
* @param {Element[]} els - Array of elements
* @param {Function} callback
*/
function modifyClassList(els, callback) {
  els.forEach(function (el) {
    if (!el) return;
    callback(el.classList);
  });
}

/***/ }),
/* 36 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = noop;
function noop() {}

/***/ }),
/* 37 */
/***/ (function(module, exports, __webpack_require__) {


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = triggerReflow;

var _prefix = __webpack_require__(1);

var _prefix2 = _interopRequireDefault(_prefix);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
* Triggers a document repaint or reflow for CSS transition
* @param {Element} tooltip
* @param {Element} circle
*/
function triggerReflow(tooltip, circle) {
  // Safari needs the specific 'transform' property to be accessed
  circle ? window.getComputedStyle(circle)[(0, _prefix2.default)('transform')] : window.getComputedStyle(tooltip).opacity;
}

/***/ }),
/* 38 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_38__;

/***/ }),
/* 39 */
/***/ (function(module, exports) {

module.exports = __WEBPACK_EXTERNAL_MODULE_39__;

/***/ })
/******/ ]);
});

});

unwrapExports(reactTippy);
var reactTippy_1 = reactTippy.Tooltip;

var Tooltip = function Tooltip(_ref) {
  var title = _ref.title,
      position = _ref.position,
      trigger = _ref.trigger,
      disabled = _ref.disabled,
      arrow = _ref.arrow,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement(reactTippy_1, {
    title: title,
    position: position,
    trigger: trigger,
    arrow: arrow,
    disabled: disabled
  }, children);
};
Tooltip.defaultProps = {
  title: "This is a tooltip",
  position: "top",
  trigger: "mouseenter focus",
  arrow: true,
  disabled: false
};
Tooltip.propTypes = {
  /**
   * Tooltip text
   */
  title: PropTypes__default['default'].string,

  /**
   * Position of tooltip relative to element
   */
  position: PropTypes__default['default'].oneOf(["top", "bottom", "left", "right"]),

  /**
   * How tooltip is triggered. ("mouseenter", "focus", "click", "manual")
   */
  trigger: PropTypes__default['default'].string,

  /**
   * Show or hide arrow
   */
  arrow: PropTypes__default['default'].bool,

  /**
   * Disable tooltip
   */
  disabled: PropTypes__default['default'].bool,

  /**
   * The element that triggers the tooltip
   */
  children: PropTypes__default['default'].any
};

var styles$I = undefined;

var Page = function Page(_ref) {
  var children = _ref.children;
  var mainBox = [];
  var topBox = [];
  React__default['default'].Children.map(children, function (child) {
    if (child.type && child.type.name === "PageCrumbs") {
      topBox.push(child);
    } else {
      mainBox.push(child);
    }
  });
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$I.base
  }, topBox ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$I.topBox
  }, topBox) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$I.mainBox
  }, mainBox));
};

var styles$J = undefined;

var PageActions = function PageActions(_ref) {
  var children = _ref.children;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];
  /**
   * Action click
   * @param e
   */


  var handleActionClick = function handleActionClick(e) {
    setVisible(!visible);
  }; // Button classes


  var buttonClasses = classNames__default['default'](styles$J.button, _defineProperty({}, styles$J.active, visible));
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$J.base
  }, /*#__PURE__*/React__default['default'].createElement(PopOver, {
    visible: visible,
    content: renderMenu(children),
    onClose: function onClose() {
      return setVisible(false);
    }
  }, /*#__PURE__*/React__default['default'].createElement(Clickable, {
    className: buttonClasses,
    onClick: handleActionClick
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: "lightning"
  }))));
};

var renderMenu = function renderMenu(items) {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$J.menu
  }, /*#__PURE__*/React__default['default'].createElement(Menu$1, null, items && React__default['default'].Children.map(items, function (child, index) {
    return /*#__PURE__*/React__default['default'].createElement(MenuItem$1, _extends({
      key: index,
      icon: child.props.icon,
      label: child.props.children
    }, child.props));
  })));
};

var Action = function Action(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$J.action
  }, children);
};

var styles$K = undefined;

var Crumb = function Crumb(_ref) {
  var link = _ref.link,
      label = _ref.label,
      current = _ref.current;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$K.item, _defineProperty({}, styles$K.current, current))
  }, /*#__PURE__*/React__default['default'].createElement(Clickable, {
    block: true,
    className: styles$K.label,
    link: link
  }, label));
};
Crumb.defaultValues = {
  current: false
};
Crumb.propTypes = {
  /**
   * Navigate to link when clicked
   */
  link: PropTypes__default['default'].string,

  /**
   * Label of this crumb
   */
  label: PropTypes__default['default'].string,

  /**
   * Flag to indicate if this is the current crumb
   */
  current: PropTypes__default['default'].bool
};

var PageCrumbs = function PageCrumbs(_ref) {
  var children = _ref.children,
      className = _ref.className;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$K.base
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$K.leftFade
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$K.rightFade
  }), /*#__PURE__*/React__default['default'].createElement(ScrollableArea, null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$K.container
  }, Object.assign([], children).reverse())));
};
PageCrumbs.propTypes = {
  children: PropTypes__default['default'].arrayOf(Crumb)
};

var styles$L = undefined;

var PageHeader = function PageHeader(_ref) {
  var icon = _ref.icon,
      title = _ref.title,
      subtitle = _ref.subtitle;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$L.base, _defineProperty({}, styles$L.withIcon, icon))
  }, icon ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$L.icon
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: icon
  })) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$L.titles
  }, /*#__PURE__*/React__default['default'].createElement("h1", {
    className: styles$L.mainTitle
  }, title), subtitle ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$L.subTitle
  }, /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$L.dots
  }, /*#__PURE__*/React__default['default'].createElement("svg", {
    xmlns: "http://www.w3.org/2000/svg",
    viewBox: "0 0 13 13"
  }, /*#__PURE__*/React__default['default'].createElement("g", {
    fillRule: "evenodd"
  }, /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: "11.5",
    cy: "11.5",
    r: "1.5"
  }), /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: "6.5",
    cy: "11.5",
    r: "1.5"
  }), /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: "1.5",
    cy: "11.5",
    r: "1.5"
  }), /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: "1.5",
    cy: "6.5",
    r: "1.5"
  }), /*#__PURE__*/React__default['default'].createElement("circle", {
    cx: "1.5",
    cy: "1.5",
    r: "1.5"
  })))), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$L.text
  }, subtitle)) : null));
};
PageHeader.propTypes = {
  /**
   * Page main title
   */
  title: PropTypes__default['default'].string,

  /**
   * Another smaller sub title
   */
  subtitle: PropTypes__default['default'].string,

  /**
   * Icon to display beside the title
   */
  icon: PropTypes__default['default'].oneOf([null].concat(_toConsumableArray(iconList)))
};

var styles$M = undefined;

var Column = function Column() {
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$M.column
  });
};
Column.propTypes = {
  field: PropTypes__default['default'].string
};

var TableHead = function TableHead(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("thead", null, /*#__PURE__*/React__default['default'].createElement("tr", null, React__default['default'].Children.map(children, function (column, index) {
    return column.type === Column ? /*#__PURE__*/React__default['default'].createElement("th", {
      key: index
    }, column.props.label) : null;
  })));
};

var Tr = function Tr(_ref) {
  var _classNames;

  var blink = _ref.blink,
      expand = _ref.expand,
      _onClick = _ref.onClick,
      disabled = _ref.disabled,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("tr", {
    className: classNames__default['default'](styles$M.row, (_classNames = {}, _defineProperty(_classNames, styles$M.blink, blink), _defineProperty(_classNames, styles$M.expand, expand), _defineProperty(_classNames, styles$M.disabled, disabled), _classNames)),
    onClick: function onClick() {
      return _onClick ? _onClick() : null;
    }
  }, children);
};

var Td = function Td(_ref) {
  var colSpan = _ref.colSpan,
      _onClick = _ref.onClick,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("td", {
    className: styles$M.col,
    colSpan: colSpan,
    onClick: function onClick() {
      return _onClick ? _onClick() : null;
    }
  }, children);
};

var TableBody = function TableBody(_ref) {
  var rows = _ref.rows,
      rowModifiers = _ref.rowModifiers,
      onRowClick = _ref.onRowClick,
      children = _ref.children;

  var _useState = React.useState([]),
      _useState2 = _slicedToArray(_useState, 2),
      prependedStaticRows = _useState2[0],
      setPrependedStaticRows = _useState2[1];

  var _useState3 = React.useState([]),
      _useState4 = _slicedToArray(_useState3, 2),
      appendedStaticRows = _useState4[0],
      setAppendedStaticRows = _useState4[1];

  var _useState5 = React.useState([]),
      _useState6 = _slicedToArray(_useState5, 2),
      dynamicColumns = _useState6[0],
      setDynamicColumns = _useState6[1];

  React.useEffect(function () {
    setPrependedStaticRows([]);
    setAppendedStaticRows([]);
    setDynamicColumns([]);
    children && children.map(function (e) {
      switch (e.type) {
        case Column:
          {
            setDynamicColumns(function (l) {
              l.push(e);
              return l;
            });
            break;
          }

        case Tr:
          {
            if (dynamicColumns.length) {
              setAppendedStaticRows(function (l) {
                l.push(e);
                return l;
              });
            } else {
              setPrependedStaticRows(function (l) {
                l.push(e);
                return l;
              });
            }

            break;
          }

        default:
          {
            return e;
          }
      }

      return e;
    });
  }, [children]); // Iterate rows

  return /*#__PURE__*/React__default['default'].createElement("tbody", null, prependedStaticRows, rows && rows.length ? rows.map(function (row, index) {
    return /*#__PURE__*/React__default['default'].createElement(TableRow, {
      key: index,
      row: row,
      rowIndex: index,
      modifiers: rowModifiers,
      columns: dynamicColumns,
      onClick: onRowClick
    });
  }) : null, appendedStaticRows);
};

var TableRow = function TableRow(_ref2) {
  var row = _ref2.row,
      rowIndex = _ref2.rowIndex,
      modifiers = _ref2.modifiers,
      columns = _ref2.columns,
      _onClick = _ref2.onClick;

  var _useState7 = React.useState(false),
      _useState8 = _slicedToArray(_useState7, 2),
      shouldBlink = _useState8[0],
      setShouldBlink = _useState8[1];

  var _useState9 = React.useState(false),
      _useState10 = _slicedToArray(_useState9, 2),
      isDisabled = _useState10[0],
      setIsDisabled = _useState10[1];

  React.useEffect(function () {
    setShouldBlink(modifiers && modifiers.blink ? modifiers.blink(row) : false);
    setIsDisabled(modifiers && modifiers.disabled ? modifiers.disabled(row) : false);
  }, [row]);
  return /*#__PURE__*/React__default['default'].createElement(Tr, {
    key: rowIndex,
    blink: shouldBlink,
    onClick: function onClick() {
      return _onClick && !isDisabled && _onClick(row);
    },
    disabled: isDisabled
  }, columns && columns.map(function (column, colIndex) {
    return /*#__PURE__*/React__default['default'].createElement(TableCell, {
      key: "".concat(rowIndex, "_").concat(colIndex),
      rowIndex: rowIndex,
      colIndex: colIndex,
      row: row,
      column: column
    });
  }));
};

var TableCell = function TableCell(_ref3) {
  var rowIndex = _ref3.rowIndex,
      colIndex = _ref3.colIndex,
      row = _ref3.row,
      column = _ref3.column;

  var _ref4 = column.props || {},
      cell = _ref4.cell;

  return cell ? /*#__PURE__*/React__default['default'].createElement(Td, null, cell({
    rowIndex: rowIndex,
    colIndex: colIndex,
    row: row,
    column: column
  })) : null;
};

var DataTable = function DataTable(_ref) {
  var rows = _ref.rows,
      children = _ref.children,
      onRowClick = _ref.onRowClick,
      busy = _ref.busy,
      rowModifiers = _ref.rowModifiers;
  var redrawTimeout = React.useRef();
  var wrapperRef = React.useRef();

  var _useState = React.useState(0),
      _useState2 = _slicedToArray(_useState, 2),
      tableHeight = _useState2[0],
      setTableHeight = _useState2[1];

  React.useEffect(function () {
    updateHeightDebounce();
    return function () {
      clearTimeout(redrawTimeout.current);
    };
  }, []);

  var updateHeight = function updateHeight() {
    var wrapperHeight = wrapperRef.current.getBoundingClientRect().height;
    setTableHeight(wrapperHeight + 2);
  };

  var updateHeightDebounce = function updateHeightDebounce() {
    clearTimeout(redrawTimeout.current);
    redrawTimeout.current = setTimeout(updateHeight, 500);
  };

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$M.base,
    style: {
      height: "".concat(tableHeight, "px")
    }
  }, busy ? /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$M.loader
  }, /*#__PURE__*/React__default['default'].createElement(Spinner, {
    className: styles$M.spinner
  })) : null, /*#__PURE__*/React__default['default'].createElement("div", {
    ref: wrapperRef,
    className: styles$M.wrapper
  }, /*#__PURE__*/React__default['default'].createElement("table", {
    className: classNames__default['default'](styles$M.table, _defineProperty({}, styles$M.clickable, onRowClick))
  }, /*#__PURE__*/React__default['default'].createElement(TableHead, {
    children: children
  }), /*#__PURE__*/React__default['default'].createElement(TableBody, {
    rows: rows,
    onRowClick: onRowClick,
    rowModifiers: rowModifiers
  }, children))), /*#__PURE__*/React__default['default'].createElement(WindowResizeListener, {
    onResize: updateHeightDebounce
  }));
};
DataTable.propTypes = {
  /**
   * Array of data to list in table
   */
  rows: PropTypes__default['default'].array,

  /**
   * Callback for when a row is clicked. Returns the respective rows data
   */
  onRowClick: PropTypes__default['default'].func,

  /**
   * Apply modifiers to rows.
   */
  rowModifiers: PropTypes__default['default'].object,

  /**
   * Disable table interaction and show spinner
   */
  busy: PropTypes__default['default'].bool,

  /**
   * Content of table. Consists of "Column" or "Tr" elements.
   */
  children: PropTypes__default['default'].any
};

var Cell = function Cell(_ref) {
  var align = _ref.align,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$M.cell, _defineProperty({}, styles$M.alignRight, align === "right"))
  }, children);
};

var styles$N = undefined;

var Code = function Code(_ref) {
  var _classNames;

  var inverted = _ref.inverted,
      block = _ref.block,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("code", {
    className: classNames__default['default'](styles$N.base, (_classNames = {}, _defineProperty(_classNames, styles$N.block, block), _defineProperty(_classNames, styles$N.inverted, inverted), _classNames))
  }, children);
};
Code.propTypes = {
  /**
   * Invert colors
   */
  inverted: PropTypes__default['default'].bool,

  /**
   * Convert to block element (fills width)
   */
  block: PropTypes__default['default'].bool
};

var styles$O = undefined;

var H1 = function H1(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("h1", {
    className: styles$O.base
  }, children);
};

var styles$P = undefined;

var H2 = function H2(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("h2", {
    className: styles$P.base
  }, children);
};

var styles$Q = undefined;

var H3 = function H3(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("h3", {
    className: styles$Q.base
  }, children);
};

var styles$R = undefined;

var H4 = function H4(_ref) {
  var children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("h4", {
    className: styles$R.base
  }, children);
};

var styles$S = undefined;

var Paragraph = function Paragraph(_ref) {
  var _classNames;

  var spacing = _ref.spacing,
      align = _ref.align,
      children = _ref.children;
  return /*#__PURE__*/React__default['default'].createElement("p", {
    className: classNames__default['default'](styles$S.base, (_classNames = {}, _defineProperty(_classNames, styles$S.alignCenter, align === "center"), _defineProperty(_classNames, styles$S.spacingNone, spacing === "none"), _classNames))
  }, children);
};
Paragraph.propTypes = {
  /**
   * Align content inside paragraph
   */
  align: PropTypes__default['default'].oneOf(["center"]),

  /**
   * Remove spacing from bottom
   */
  spacing: PropTypes__default['default'].oneOf(["none"])
};

var styles$T = undefined;

var UserMenu = function UserMenu(_ref) {
  var picture = _ref.picture,
      email = _ref.email,
      name = _ref.name,
      children = _ref.children;

  var _useState = React.useState(false),
      _useState2 = _slicedToArray(_useState, 2),
      visible = _useState2[0],
      setVisible = _useState2[1];

  return /*#__PURE__*/React__default['default'].createElement("div", {
    className: classNames__default['default'](styles$T.base, _defineProperty({}, styles$T.visible, visible))
  }, /*#__PURE__*/React__default['default'].createElement(PopOver, {
    visible: visible,
    content: menuContent({
      picture: picture,
      email: email,
      name: name,
      children: children
    }),
    arrowColor: "primary",
    size: "large",
    onClose: function onClose() {
      return setVisible(false);
    }
  }, /*#__PURE__*/React__default['default'].createElement(Clickable, {
    block: true,
    className: styles$T.picture,
    onClick: function onClick() {
      return setVisible(!visible);
    }
  }, picture ? /*#__PURE__*/React__default['default'].createElement("img", {
    alt: name,
    src: picture
  }) : /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$T.placeholder
  }, /*#__PURE__*/React__default['default'].createElement(Icon, {
    name: "user"
  })))));
};

var menuContent = function menuContent(_ref2) {
  var picture = _ref2.picture,
      email = _ref2.email,
      name = _ref2.name,
      children = _ref2.children;
  return /*#__PURE__*/React__default['default'].createElement(React__default['default'].Fragment, null, /*#__PURE__*/React__default['default'].createElement(CardUserHead, {
    picture: picture,
    name: name,
    email: email
  }), /*#__PURE__*/React__default['default'].createElement("div", {
    className: styles$T.frame
  }, children));
};

UserMenu.propTypes = {
  /**
   * Picture of user
   */
  picture: PropTypes__default['default'].string,

  /**
   * Users email
   */
  email: PropTypes__default['default'].string,

  /**
   * Users full name
   */
  name: PropTypes__default['default'].string,

  /**
   * Content of user menu. Usually a Menu.
   */
  children: PropTypes__default['default'].any
};

exports.Action = Action;
exports.AppBar = AppBar;
exports.AppContent = AppContent;
exports.AppLayout = AppLayout;
exports.AppNav = AppNav;
exports.Arrow = Arrow;
exports.Badge = Badge;
exports.Button = Button;
exports.ButtonGroup = ButtonGroup;
exports.Callout = Callout;
exports.Card = Card;
exports.CardContent = CardContent;
exports.CardTitle = CardTitle;
exports.CardUserHead = CardUserHead;
exports.Cell = Cell;
exports.Checkbox = Checkbox;
exports.Clickable = Clickable;
exports.Code = Code;
exports.Col = Col;
exports.Column = Column;
exports.ComponentWrapper = ComponentWrapper;
exports.ConfirmActionButton = ConfirmActionButton;
exports.Crumb = Crumb;
exports.DataTable = DataTable;
exports.DotsButton = DotsButton;
exports.FileSelectButton = FileSelectButton;
exports.Filler = Filler;
exports.Form = Form;
exports.FormItem = FormItem;
exports.H1 = H1;
exports.H2 = H2;
exports.H3 = H3;
exports.H4 = H4;
exports.Icon = Icon;
exports.Image = Image;
exports.Input = Input;
exports.ItemList = ItemList;
exports.LoaderHorizontal = LoaderHorizontal;
exports.Logo = Logo;
exports.Menu = Menu$1;
exports.MenuButton = MenuButton;
exports.MenuHeading = MenuHeading$1;
exports.MenuItem = MenuItem$1;
exports.OnOffSwitch = OnOffSwitch;
exports.Option = Option;
exports.Overlay = Overlay;
exports.Page = Page;
exports.PageActions = PageActions;
exports.PageCrumbs = PageCrumbs;
exports.PageHeader = PageHeader;
exports.Paragraph = Paragraph;
exports.PopOver = PopOver;
exports.Popup = Popup;
exports.PopupContent = PopupContent;
exports.PopupFooter = PopupFooter;
exports.PopupTabs = PopupTabs;
exports.PopupTitle = PopupTitle;
exports.PopupYesNo = PopupYesNo;
exports.ProgressBar = ProgressBar;
exports.ProgressCircle = ProgressCircle;
exports.Row = Row;
exports.ScrollableArea = ScrollableArea;
exports.Select = Select;
exports.Spinner = Spinner;
exports.Splash = Splash;
exports.SplashContent = SplashContent;
exports.SplashTitle = SplashTitle;
exports.TabPane = TabPane;
exports.Tabs = Tabs;
exports.Td = Td;
exports.Text = Text;
exports.Textarea = Textarea;
exports.Toast = Toast;
exports.Tooltip = Tooltip;
exports.Tr = Tr;
exports.UserMenu = UserMenu;
exports.WindowResizeListener = WindowResizeListener;
exports.iconList = iconList;
