$clockSize: 280px;
$handSize: 40px;

.timeSelector {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 0;
    overflow: hidden;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    pointer-events: none;
    transform: scale(1.2);

    &.visible {
        width: auto;
        transform: scale(1);
        opacity: 1;
        pointer-events: all;
        transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
        touch-action: none;
    }
}

.clock {
    width: $clockSize + 8px;
    height: $clockSize + 8px;
    border-radius: $clockSize;
    border: 1px solid rgba(var(--color_base), 0.2);
    position: relative;

    .timeValues {
        position: absolute;
        width: 100%;
        height: 100%;
        z-index: 1;
        pointer-events: none;

        .time {
            position: absolute;
            top: 50%;
            left: 50%;
            width: $handSize;
            height: $handSize;
            margin: -($handSize / 2);
            display: flex;
            align-items: center;
            justify-content: center;
            border: none;
            border-radius: $handSize;
            background-color: transparent;
            font-family: var(--fontFamily_primary);
            font-weight: var(--fontWeight_medium);
            color: rgba(var(--color_base), 0.4);
            pointer-events: all;
            outline: none;
            cursor: pointer;

            &:hover {
                background: rgba(var(--color_base), 0.05);
            }
        }

        &.focused {
            .time:not(.silent) {
                color: rgba(var(--color_base), 1);
            }
        }
    }

    .hand {
        position: absolute;
        top: 50%;
        left: 50%;
        width: 0;
        height: 0;
        background: rgba(var(--color_primary), 1);
        transform-origin: 50% 100%;
        margin: -($clockSize / 2 - $handSize) -2px 0;
        padding: ($clockSize / 2 - $handSize) 2px 0;
        z-index: 2;
        border-radius: 0 0 2px 2px;
        pointer-events: none;

        button {
            position: absolute;
            width: $handSize;
            height: $handSize;
            border-radius: $handSize;
            border: none;
            background-color: transparent;
            top: 0;
            transform: translate(-50%, -100%);
            cursor: pointer;
            outline: none;
            pointer-events: all;
            background-color: rgba(var(--color_primary), 1);
            color: rgba(var(--color_primaryContrast), 1);
            font-weight: var(--fontWeight_bold);
            box-shadow: var(--boxShadow_regular);
        }

        &.inner {
            margin: -($clockSize / 2 - $handSize * 2) -2px 0;
            padding: ($clockSize / 2 - $handSize * 2) 2px 0;
        }
    }
}

/// Draw items on a circle
@mixin on-circle($item-count, $circle-size, $item-size, $class) {
    .#{$class} {
        display: block;
        position: absolute;
        top: 50%;
        left: 50%;
        width: $item-size;
        height: $item-size;
        margin: -($item-size / 2);

        $angle: (360 / $item-count);
        $rot: 300;

        @for $i from 1 through $item-count {
            &:nth-of-type(#{$i}) {
                transform: rotate($rot * 1deg) translate($circle-size / 2) rotate($rot * -1deg);
            }

            $rot: $rot + $angle;
        }
    }
}
